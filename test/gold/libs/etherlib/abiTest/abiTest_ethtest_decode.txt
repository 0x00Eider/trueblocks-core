abiTest argc: 4 [1:eth_test] [2:-s] [3:4] 
abiTest eth_test -s 4 
ethereum test box test...
0. --------------------------------------------------------------------------------
	000.000 test_0                           ==> 
line: decode|decoding (uint[][3], uint) three sets of two|function baz(uint[][3],uint)|0x000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000140000000000000000000000000000000000000000000000000000000000000000a|[[1, 2], [3, 4], [5, 6]], 10
testType: decode
testName: decoding (uint[][3], uint) three sets of two
signature: function baz(uint[][3],uint) : function baz(uint256[][3],uint256)

--------------------------------------------------
--2 : 13 : 0
--  0: val_0 (uint256[][3])
--  1: val_1 (uint256)
--  0: 0000000000000000000000000000000000000000000000000000000000000080 <---
--  1: 00000000000000000000000000000000000000000000000000000000000000e0
--  2: 0000000000000000000000000000000000000000000000000000000000000140
--  3: 000000000000000000000000000000000000000000000000000000000000000a
--  4: 0000000000000000000000000000000000000000000000000000000000000002
--  5: 0000000000000000000000000000000000000000000000000000000000000001
--  6: 0000000000000000000000000000000000000000000000000000000000000002
--  7: 0000000000000000000000000000000000000000000000000000000000000002
--  8: 0000000000000000000000000000000000000000000000000000000000000003
--  9: 0000000000000000000000000000000000000000000000000000000000000004
-- 10: 0000000000000000000000000000000000000000000000000000000000000002
-- 11: 0000000000000000000000000000000000000000000000000000000000000005
-- 12: 0000000000000000000000000000000000000000000000000000000000000006
  --3 : 13 : 0
  --  0:  (uint256[])
  --  1:  (uint256[])
  --  2:  (uint256[])
  --  0: 0000000000000000000000000000000000000000000000000000000000000080 <---
  --  1: 00000000000000000000000000000000000000000000000000000000000000e0
  --  2: 0000000000000000000000000000000000000000000000000000000000000140
  --  3: 000000000000000000000000000000000000000000000000000000000000000a
  --  4: 0000000000000000000000000000000000000000000000000000000000000002
  --  5: 0000000000000000000000000000000000000000000000000000000000000001
  --  6: 0000000000000000000000000000000000000000000000000000000000000002
  --  7: 0000000000000000000000000000000000000000000000000000000000000002
  --  8: 0000000000000000000000000000000000000000000000000000000000000003
  --  9: 0000000000000000000000000000000000000000000000000000000000000004
  -- 10: 0000000000000000000000000000000000000000000000000000000000000002
  -- 11: 0000000000000000000000000000000000000000000000000000000000000005
  -- 12: 0000000000000000000000000000000000000000000000000000000000000006
    --1 : 13 : 5 : 4
    --  0:  (uint256[2])
    --      uint256[][]
    --  0: 0000000000000000000000000000000000000000000000000000000000000080
    --  1: 00000000000000000000000000000000000000000000000000000000000000e0
    --  2: 0000000000000000000000000000000000000000000000000000000000000140
    --  3: 000000000000000000000000000000000000000000000000000000000000000a
    --  4: 0000000000000000000000000000000000000000000000000000000000000002 <===
    --  5: 0000000000000000000000000000000000000000000000000000000000000001 <---
    --  6: 0000000000000000000000000000000000000000000000000000000000000002
    --  7: 0000000000000000000000000000000000000000000000000000000000000002
    --  8: 0000000000000000000000000000000000000000000000000000000000000003
    --  9: 0000000000000000000000000000000000000000000000000000000000000004
    -- 10: 0000000000000000000000000000000000000000000000000000000000000002
    -- 11: 0000000000000000000000000000000000000000000000000000000000000005
    -- 12: 0000000000000000000000000000000000000000000000000000000000000006
      --2 : 13 : 5 : 4
      --  0:  (uint256)
      --  1:  (uint256)
      --  0: 0000000000000000000000000000000000000000000000000000000000000080
      --  1: 00000000000000000000000000000000000000000000000000000000000000e0
      --  2: 0000000000000000000000000000000000000000000000000000000000000140
      --  3: 000000000000000000000000000000000000000000000000000000000000000a
      --  4: 0000000000000000000000000000000000000000000000000000000000000002 <===
      --  5: 0000000000000000000000000000000000000000000000000000000000000001 <---
      --  6: 0000000000000000000000000000000000000000000000000000000000000002
      --  7: 0000000000000000000000000000000000000000000000000000000000000002
      --  8: 0000000000000000000000000000000000000000000000000000000000000003
      --  9: 0000000000000000000000000000000000000000000000000000000000000004
      -- 10: 0000000000000000000000000000000000000000000000000000000000000002
      -- 11: 0000000000000000000000000000000000000000000000000000000000000005
      -- 12: 0000000000000000000000000000000000000000000000000000000000000006
      --2 : 13 : 6 : 4
      --  0:  (uint256) = 1
      --  1:  (uint256)
      --  0: 0000000000000000000000000000000000000000000000000000000000000080
      --  1: 00000000000000000000000000000000000000000000000000000000000000e0
      --  2: 0000000000000000000000000000000000000000000000000000000000000140
      --  3: 000000000000000000000000000000000000000000000000000000000000000a
      --  4: 0000000000000000000000000000000000000000000000000000000000000002 <===
      --  5: 0000000000000000000000000000000000000000000000000000000000000001
      --  6: 0000000000000000000000000000000000000000000000000000000000000002 <---
      --  7: 0000000000000000000000000000000000000000000000000000000000000002
      --  8: 0000000000000000000000000000000000000000000000000000000000000003
      --  9: 0000000000000000000000000000000000000000000000000000000000000004
      -- 10: 0000000000000000000000000000000000000000000000000000000000000002
      -- 11: 0000000000000000000000000000000000000000000000000000000000000005
      -- 12: 0000000000000000000000000000000000000000000000000000000000000006
  --3 : 13 : 1
  --  0:  (uint256[]) = [1, 2]
  --  1:  (uint256[])
  --  2:  (uint256[])
  --  0: 0000000000000000000000000000000000000000000000000000000000000080
  --  1: 00000000000000000000000000000000000000000000000000000000000000e0 <---
  --  2: 0000000000000000000000000000000000000000000000000000000000000140
  --  3: 000000000000000000000000000000000000000000000000000000000000000a
  --  4: 0000000000000000000000000000000000000000000000000000000000000002
  --  5: 0000000000000000000000000000000000000000000000000000000000000001
  --  6: 0000000000000000000000000000000000000000000000000000000000000002
  --  7: 0000000000000000000000000000000000000000000000000000000000000002
  --  8: 0000000000000000000000000000000000000000000000000000000000000003
  --  9: 0000000000000000000000000000000000000000000000000000000000000004
  -- 10: 0000000000000000000000000000000000000000000000000000000000000002
  -- 11: 0000000000000000000000000000000000000000000000000000000000000005
  -- 12: 0000000000000000000000000000000000000000000000000000000000000006
    --1 : 13 : 8 : 7
    --  0:  (uint256[2])
    --      uint256[][]
    --  0: 0000000000000000000000000000000000000000000000000000000000000080
    --  1: 00000000000000000000000000000000000000000000000000000000000000e0
    --  2: 0000000000000000000000000000000000000000000000000000000000000140
    --  3: 000000000000000000000000000000000000000000000000000000000000000a
    --  4: 0000000000000000000000000000000000000000000000000000000000000002
    --  5: 0000000000000000000000000000000000000000000000000000000000000001
    --  6: 0000000000000000000000000000000000000000000000000000000000000002
    --  7: 0000000000000000000000000000000000000000000000000000000000000002 <===
    --  8: 0000000000000000000000000000000000000000000000000000000000000003 <---
    --  9: 0000000000000000000000000000000000000000000000000000000000000004
    -- 10: 0000000000000000000000000000000000000000000000000000000000000002
    -- 11: 0000000000000000000000000000000000000000000000000000000000000005
    -- 12: 0000000000000000000000000000000000000000000000000000000000000006
      --2 : 13 : 8 : 7
      --  0:  (uint256)
      --  1:  (uint256)
      --  0: 0000000000000000000000000000000000000000000000000000000000000080
      --  1: 00000000000000000000000000000000000000000000000000000000000000e0
      --  2: 0000000000000000000000000000000000000000000000000000000000000140
      --  3: 000000000000000000000000000000000000000000000000000000000000000a
      --  4: 0000000000000000000000000000000000000000000000000000000000000002
      --  5: 0000000000000000000000000000000000000000000000000000000000000001
      --  6: 0000000000000000000000000000000000000000000000000000000000000002
      --  7: 0000000000000000000000000000000000000000000000000000000000000002 <===
      --  8: 0000000000000000000000000000000000000000000000000000000000000003 <---
      --  9: 0000000000000000000000000000000000000000000000000000000000000004
      -- 10: 0000000000000000000000000000000000000000000000000000000000000002
      -- 11: 0000000000000000000000000000000000000000000000000000000000000005
      -- 12: 0000000000000000000000000000000000000000000000000000000000000006
      --2 : 13 : 9 : 7
      --  0:  (uint256) = 3
      --  1:  (uint256)
      --  0: 0000000000000000000000000000000000000000000000000000000000000080
      --  1: 00000000000000000000000000000000000000000000000000000000000000e0
      --  2: 0000000000000000000000000000000000000000000000000000000000000140
      --  3: 000000000000000000000000000000000000000000000000000000000000000a
      --  4: 0000000000000000000000000000000000000000000000000000000000000002
      --  5: 0000000000000000000000000000000000000000000000000000000000000001
      --  6: 0000000000000000000000000000000000000000000000000000000000000002
      --  7: 0000000000000000000000000000000000000000000000000000000000000002 <===
      --  8: 0000000000000000000000000000000000000000000000000000000000000003
      --  9: 0000000000000000000000000000000000000000000000000000000000000004 <---
      -- 10: 0000000000000000000000000000000000000000000000000000000000000002
      -- 11: 0000000000000000000000000000000000000000000000000000000000000005
      -- 12: 0000000000000000000000000000000000000000000000000000000000000006
  --3 : 13 : 2
  --  0:  (uint256[]) = [1, 2]
  --  1:  (uint256[]) = [3, 4]
  --  2:  (uint256[])
  --  0: 0000000000000000000000000000000000000000000000000000000000000080
  --  1: 00000000000000000000000000000000000000000000000000000000000000e0
  --  2: 0000000000000000000000000000000000000000000000000000000000000140 <---
  --  3: 000000000000000000000000000000000000000000000000000000000000000a
  --  4: 0000000000000000000000000000000000000000000000000000000000000002
  --  5: 0000000000000000000000000000000000000000000000000000000000000001
  --  6: 0000000000000000000000000000000000000000000000000000000000000002
  --  7: 0000000000000000000000000000000000000000000000000000000000000002
  --  8: 0000000000000000000000000000000000000000000000000000000000000003
  --  9: 0000000000000000000000000000000000000000000000000000000000000004
  -- 10: 0000000000000000000000000000000000000000000000000000000000000002
  -- 11: 0000000000000000000000000000000000000000000000000000000000000005
  -- 12: 0000000000000000000000000000000000000000000000000000000000000006
    --1 : 13 : 11 : 10
    --  0:  (uint256[2])
    --      uint256[][]
    --  0: 0000000000000000000000000000000000000000000000000000000000000080
    --  1: 00000000000000000000000000000000000000000000000000000000000000e0
    --  2: 0000000000000000000000000000000000000000000000000000000000000140
    --  3: 000000000000000000000000000000000000000000000000000000000000000a
    --  4: 0000000000000000000000000000000000000000000000000000000000000002
    --  5: 0000000000000000000000000000000000000000000000000000000000000001
    --  6: 0000000000000000000000000000000000000000000000000000000000000002
    --  7: 0000000000000000000000000000000000000000000000000000000000000002
    --  8: 0000000000000000000000000000000000000000000000000000000000000003
    --  9: 0000000000000000000000000000000000000000000000000000000000000004
    -- 10: 0000000000000000000000000000000000000000000000000000000000000002 <===
    -- 11: 0000000000000000000000000000000000000000000000000000000000000005 <---
    -- 12: 0000000000000000000000000000000000000000000000000000000000000006
      --2 : 13 : 11 : 10
      --  0:  (uint256)
      --  1:  (uint256)
      --  0: 0000000000000000000000000000000000000000000000000000000000000080
      --  1: 00000000000000000000000000000000000000000000000000000000000000e0
      --  2: 0000000000000000000000000000000000000000000000000000000000000140
      --  3: 000000000000000000000000000000000000000000000000000000000000000a
      --  4: 0000000000000000000000000000000000000000000000000000000000000002
      --  5: 0000000000000000000000000000000000000000000000000000000000000001
      --  6: 0000000000000000000000000000000000000000000000000000000000000002
      --  7: 0000000000000000000000000000000000000000000000000000000000000002
      --  8: 0000000000000000000000000000000000000000000000000000000000000003
      --  9: 0000000000000000000000000000000000000000000000000000000000000004
      -- 10: 0000000000000000000000000000000000000000000000000000000000000002 <===
      -- 11: 0000000000000000000000000000000000000000000000000000000000000005 <---
      -- 12: 0000000000000000000000000000000000000000000000000000000000000006
      --2 : 13 : 12 : 10
      --  0:  (uint256) = 5
      --  1:  (uint256)
      --  0: 0000000000000000000000000000000000000000000000000000000000000080
      --  1: 00000000000000000000000000000000000000000000000000000000000000e0
      --  2: 0000000000000000000000000000000000000000000000000000000000000140
      --  3: 000000000000000000000000000000000000000000000000000000000000000a
      --  4: 0000000000000000000000000000000000000000000000000000000000000002
      --  5: 0000000000000000000000000000000000000000000000000000000000000001
      --  6: 0000000000000000000000000000000000000000000000000000000000000002
      --  7: 0000000000000000000000000000000000000000000000000000000000000002
      --  8: 0000000000000000000000000000000000000000000000000000000000000003
      --  9: 0000000000000000000000000000000000000000000000000000000000000004
      -- 10: 0000000000000000000000000000000000000000000000000000000000000002 <===
      -- 11: 0000000000000000000000000000000000000000000000000000000000000005
      -- 12: 0000000000000000000000000000000000000000000000000000000000000006 <---
--2 : 13 : 3
--  0: val_0 (uint256[][3]) = [[1, 2], [3, 4], [5, 6]]
--  1: val_1 (uint256)
--  0: 0000000000000000000000000000000000000000000000000000000000000080
--  1: 00000000000000000000000000000000000000000000000000000000000000e0
--  2: 0000000000000000000000000000000000000000000000000000000000000140
--  3: 000000000000000000000000000000000000000000000000000000000000000a <---
--  4: 0000000000000000000000000000000000000000000000000000000000000002
--  5: 0000000000000000000000000000000000000000000000000000000000000001
--  6: 0000000000000000000000000000000000000000000000000000000000000002
--  7: 0000000000000000000000000000000000000000000000000000000000000002
--  8: 0000000000000000000000000000000000000000000000000000000000000003
--  9: 0000000000000000000000000000000000000000000000000000000000000004
-- 10: 0000000000000000000000000000000000000000000000000000000000000002
-- 11: 0000000000000000000000000000000000000000000000000000000000000005
-- 12: 0000000000000000000000000000000000000000000000000000000000000006
expected: --[[1, 2], [3, 4], [5, 6]], 10--?
result:   --[[1, 2], [3, 4], [5, 6]], 10--? 1
testName: decoding (uint[][3], uint) three sets of two
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.001 test_1                           ==> 
line: decode|decoding (uint[3][], uint) two sets of three|function baz(uint[3][], uint)|0x0000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000050000000000000000000000000000000000000000000000000000000000000006|[[1, 2, 3], [4, 5, 6]], 10
testType: decode
testName: decoding (uint[3][], uint) two sets of three
signature: function baz(uint[3][], uint) : function baz(uint256[3][],uint256)

--------------------------------------------------
--2 : 9 : 0
--  0: val_0 (uint256[3][])
--  1: val_1 (uint256)
--  0: 0000000000000000000000000000000000000000000000000000000000000040 <---
--  1: 000000000000000000000000000000000000000000000000000000000000000a
--  2: 0000000000000000000000000000000000000000000000000000000000000002
--  3: 0000000000000000000000000000000000000000000000000000000000000001
--  4: 0000000000000000000000000000000000000000000000000000000000000002
--  5: 0000000000000000000000000000000000000000000000000000000000000003
--  6: 0000000000000000000000000000000000000000000000000000000000000004
--  7: 0000000000000000000000000000000000000000000000000000000000000005
--  8: 0000000000000000000000000000000000000000000000000000000000000006
  --1 : 9 : 3 : 2
  --  0:  (uint256[3][2])
  --      uint256[3][][]
  --  0: 0000000000000000000000000000000000000000000000000000000000000040
  --  1: 000000000000000000000000000000000000000000000000000000000000000a
  --  2: 0000000000000000000000000000000000000000000000000000000000000002 <===
  --  3: 0000000000000000000000000000000000000000000000000000000000000001 <---
  --  4: 0000000000000000000000000000000000000000000000000000000000000002
  --  5: 0000000000000000000000000000000000000000000000000000000000000003
  --  6: 0000000000000000000000000000000000000000000000000000000000000004
  --  7: 0000000000000000000000000000000000000000000000000000000000000005
  --  8: 0000000000000000000000000000000000000000000000000000000000000006
    --2 : 9 : 3 : 2
    --  0:  (uint256[3])
    --  1:  (uint256[3])
    --  0: 0000000000000000000000000000000000000000000000000000000000000040
    --  1: 000000000000000000000000000000000000000000000000000000000000000a
    --  2: 0000000000000000000000000000000000000000000000000000000000000002 <===
    --  3: 0000000000000000000000000000000000000000000000000000000000000001 <---
    --  4: 0000000000000000000000000000000000000000000000000000000000000002
    --  5: 0000000000000000000000000000000000000000000000000000000000000003
    --  6: 0000000000000000000000000000000000000000000000000000000000000004
    --  7: 0000000000000000000000000000000000000000000000000000000000000005
    --  8: 0000000000000000000000000000000000000000000000000000000000000006
      --3 : 9 : 3 : 2
      --  0:  (uint256)
      --  1:  (uint256)
      --  2:  (uint256)
      --  0: 0000000000000000000000000000000000000000000000000000000000000040
      --  1: 000000000000000000000000000000000000000000000000000000000000000a
      --  2: 0000000000000000000000000000000000000000000000000000000000000002 <===
      --  3: 0000000000000000000000000000000000000000000000000000000000000001 <---
      --  4: 0000000000000000000000000000000000000000000000000000000000000002
      --  5: 0000000000000000000000000000000000000000000000000000000000000003
      --  6: 0000000000000000000000000000000000000000000000000000000000000004
      --  7: 0000000000000000000000000000000000000000000000000000000000000005
      --  8: 0000000000000000000000000000000000000000000000000000000000000006
      --3 : 9 : 4 : 2
      --  0:  (uint256) = 1
      --  1:  (uint256)
      --  2:  (uint256)
      --  0: 0000000000000000000000000000000000000000000000000000000000000040
      --  1: 000000000000000000000000000000000000000000000000000000000000000a
      --  2: 0000000000000000000000000000000000000000000000000000000000000002 <===
      --  3: 0000000000000000000000000000000000000000000000000000000000000001
      --  4: 0000000000000000000000000000000000000000000000000000000000000002 <---
      --  5: 0000000000000000000000000000000000000000000000000000000000000003
      --  6: 0000000000000000000000000000000000000000000000000000000000000004
      --  7: 0000000000000000000000000000000000000000000000000000000000000005
      --  8: 0000000000000000000000000000000000000000000000000000000000000006
      --3 : 9 : 5 : 2
      --  0:  (uint256) = 1
      --  1:  (uint256) = 2
      --  2:  (uint256)
      --  0: 0000000000000000000000000000000000000000000000000000000000000040
      --  1: 000000000000000000000000000000000000000000000000000000000000000a
      --  2: 0000000000000000000000000000000000000000000000000000000000000002 <===
      --  3: 0000000000000000000000000000000000000000000000000000000000000001
      --  4: 0000000000000000000000000000000000000000000000000000000000000002
      --  5: 0000000000000000000000000000000000000000000000000000000000000003 <---
      --  6: 0000000000000000000000000000000000000000000000000000000000000004
      --  7: 0000000000000000000000000000000000000000000000000000000000000005
      --  8: 0000000000000000000000000000000000000000000000000000000000000006
    --2 : 9 : 6 : 2
    --  0:  (uint256[3]) = [1, 2, 3]
    --  1:  (uint256[3])
    --  0: 0000000000000000000000000000000000000000000000000000000000000040
    --  1: 000000000000000000000000000000000000000000000000000000000000000a
    --  2: 0000000000000000000000000000000000000000000000000000000000000002 <===
    --  3: 0000000000000000000000000000000000000000000000000000000000000001
    --  4: 0000000000000000000000000000000000000000000000000000000000000002
    --  5: 0000000000000000000000000000000000000000000000000000000000000003
    --  6: 0000000000000000000000000000000000000000000000000000000000000004 <---
    --  7: 0000000000000000000000000000000000000000000000000000000000000005
    --  8: 0000000000000000000000000000000000000000000000000000000000000006
      --3 : 9 : 6 : 2
      --  0:  (uint256)
      --  1:  (uint256)
      --  2:  (uint256)
      --  0: 0000000000000000000000000000000000000000000000000000000000000040
      --  1: 000000000000000000000000000000000000000000000000000000000000000a
      --  2: 0000000000000000000000000000000000000000000000000000000000000002 <===
      --  3: 0000000000000000000000000000000000000000000000000000000000000001
      --  4: 0000000000000000000000000000000000000000000000000000000000000002
      --  5: 0000000000000000000000000000000000000000000000000000000000000003
      --  6: 0000000000000000000000000000000000000000000000000000000000000004 <---
      --  7: 0000000000000000000000000000000000000000000000000000000000000005
      --  8: 0000000000000000000000000000000000000000000000000000000000000006
      --3 : 9 : 7 : 2
      --  0:  (uint256) = 4
      --  1:  (uint256)
      --  2:  (uint256)
      --  0: 0000000000000000000000000000000000000000000000000000000000000040
      --  1: 000000000000000000000000000000000000000000000000000000000000000a
      --  2: 0000000000000000000000000000000000000000000000000000000000000002 <===
      --  3: 0000000000000000000000000000000000000000000000000000000000000001
      --  4: 0000000000000000000000000000000000000000000000000000000000000002
      --  5: 0000000000000000000000000000000000000000000000000000000000000003
      --  6: 0000000000000000000000000000000000000000000000000000000000000004
      --  7: 0000000000000000000000000000000000000000000000000000000000000005 <---
      --  8: 0000000000000000000000000000000000000000000000000000000000000006
      --3 : 9 : 8 : 2
      --  0:  (uint256) = 4
      --  1:  (uint256) = 5
      --  2:  (uint256)
      --  0: 0000000000000000000000000000000000000000000000000000000000000040
      --  1: 000000000000000000000000000000000000000000000000000000000000000a
      --  2: 0000000000000000000000000000000000000000000000000000000000000002 <===
      --  3: 0000000000000000000000000000000000000000000000000000000000000001
      --  4: 0000000000000000000000000000000000000000000000000000000000000002
      --  5: 0000000000000000000000000000000000000000000000000000000000000003
      --  6: 0000000000000000000000000000000000000000000000000000000000000004
      --  7: 0000000000000000000000000000000000000000000000000000000000000005
      --  8: 0000000000000000000000000000000000000000000000000000000000000006 <---
--2 : 9 : 1
--  0: val_0 (uint256[3][]) = [[1, 2, 3], [4, 5, 6]]
--  1: val_1 (uint256)
--  0: 0000000000000000000000000000000000000000000000000000000000000040
--  1: 000000000000000000000000000000000000000000000000000000000000000a <---
--  2: 0000000000000000000000000000000000000000000000000000000000000002
--  3: 0000000000000000000000000000000000000000000000000000000000000001
--  4: 0000000000000000000000000000000000000000000000000000000000000002
--  5: 0000000000000000000000000000000000000000000000000000000000000003
--  6: 0000000000000000000000000000000000000000000000000000000000000004
--  7: 0000000000000000000000000000000000000000000000000000000000000005
--  8: 0000000000000000000000000000000000000000000000000000000000000006
expected: --[[1, 2, 3], [4, 5, 6]], 10--?
result:   --[[1, 2, 3], [4, 5, 6]], 10--? 1
testName: decoding (uint[3][], uint) two sets of three
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.002 test_2                           ==> 
line: decode|Purposefully bogus data used to core dump, now ignores bad data|function baz(address _from, address _to, uint256 _value, string _transferData)|0x000000000000000000000000f3c9c5719eb4f26a3ab45cb86771827629f9a99900000000000000000000000071d402ac181de4a8739a15f5a56141f64fc522f80000000000000000000000000000000000000000000000190b89b8381678000000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000025486920426f6220476c617365722d2d20486572652061726520796f757220746f6b656e7321|0xf3c9c5719eb4f26a3ab45cb86771827629f9a999, 0x71d402ac181de4a8739a15f5a56141f64fc522f8, 462000000000000000000,
testType: decode
testName: Purposefully bogus data used to core dump, now ignores bad data
signature: function baz(address _from, address _to, uint256 _value, string _transferData) : function baz(address,address,uint256,string)

--------------------------------------------------
--4 : 7 : 0
--  0: _from (address)
--  1: _to (address)
--  2: _value (uint256)
--  3: _transferData (string)
--  0: 000000000000000000000000f3c9c5719eb4f26a3ab45cb86771827629f9a999 <---
--  1: 00000000000000000000000071d402ac181de4a8739a15f5a56141f64fc522f8
--  2: 0000000000000000000000000000000000000000000000190b89b83816780000
--  3: 0000000000000000000000000000000000000000000000000000000000000040
--  4: 0000000000000000000000000000000000000000000000000000000000000025
--  5: 486920426f6220476c617365722d2d20486572652061726520796f757220746f
--  6: 6b656e7321
--4 : 7 : 1
--  0: _from (address) = 0xf3c9c5719eb4f26a3ab45cb86771827629f9a999
--  1: _to (address)
--  2: _value (uint256)
--  3: _transferData (string)
--  0: 000000000000000000000000f3c9c5719eb4f26a3ab45cb86771827629f9a999
--  1: 00000000000000000000000071d402ac181de4a8739a15f5a56141f64fc522f8 <---
--  2: 0000000000000000000000000000000000000000000000190b89b83816780000
--  3: 0000000000000000000000000000000000000000000000000000000000000040
--  4: 0000000000000000000000000000000000000000000000000000000000000025
--  5: 486920426f6220476c617365722d2d20486572652061726520796f757220746f
--  6: 6b656e7321
--4 : 7 : 2
--  0: _from (address) = 0xf3c9c5719eb4f26a3ab45cb86771827629f9a999
--  1: _to (address) = 0x71d402ac181de4a8739a15f5a56141f64fc522f8
--  2: _value (uint256)
--  3: _transferData (string)
--  0: 000000000000000000000000f3c9c5719eb4f26a3ab45cb86771827629f9a999
--  1: 00000000000000000000000071d402ac181de4a8739a15f5a56141f64fc522f8
--  2: 0000000000000000000000000000000000000000000000190b89b83816780000 <---
--  3: 0000000000000000000000000000000000000000000000000000000000000040
--  4: 0000000000000000000000000000000000000000000000000000000000000025
--  5: 486920426f6220476c617365722d2d20486572652061726520796f757220746f
--  6: 6b656e7321
--4 : 7 : 3
--  0: _from (address) = 0xf3c9c5719eb4f26a3ab45cb86771827629f9a999
--  1: _to (address) = 0x71d402ac181de4a8739a15f5a56141f64fc522f8
--  2: _value (uint256) = 462000000000000000000
--  3: _transferData (string)
--  0: 000000000000000000000000f3c9c5719eb4f26a3ab45cb86771827629f9a999
--  1: 00000000000000000000000071d402ac181de4a8739a15f5a56141f64fc522f8
--  2: 0000000000000000000000000000000000000000000000190b89b83816780000
--  3: 0000000000000000000000000000000000000000000000000000000000000040 <---
--  4: 0000000000000000000000000000000000000000000000000000000000000025
--  5: 486920426f6220476c617365722d2d20486572652061726520796f757220746f
--  6: 6b656e7321
expected: --0xf3c9c5719eb4f26a3ab45cb86771827629f9a999, 0x71d402ac181de4a8739a15f5a56141f64fc522f8, 462000000000000000000,--?
result:   --0xf3c9c5719eb4f26a3ab45cb86771827629f9a999, 0x71d402ac181de4a8739a15f5a56141f64fc522f8, 462000000000000000000,--? 1
testName: Purposefully bogus data used to core dump, now ignores bad data
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.003 test_3                           ==> 
line: decode|Corrected data from above (fifth row was bogus above)|function baz(address _from, address _to, uint256 _value, string _transferData)|0x000000000000000000000000f3c9c5719eb4f26a3ab45cb86771827629f9a99900000000000000000000000071d402ac181de4a8739a15f5a56141f64fc522f80000000000000000000000000000000000000000000000190b89b8381678000000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000025486920426f6220476c617365722d2d20486572652061726520796f757220746f6b656e7321|0xf3c9c5719eb4f26a3ab45cb86771827629f9a999, 0x71d402ac181de4a8739a15f5a56141f64fc522f8, 462000000000000000000, Hi Bob Glaser-- Here are your tokens!
testType: decode
testName: Corrected data from above (fifth row was bogus above)
signature: function baz(address _from, address _to, uint256 _value, string _transferData) : function baz(address,address,uint256,string)

--------------------------------------------------
--4 : 7 : 0
--  0: _from (address)
--  1: _to (address)
--  2: _value (uint256)
--  3: _transferData (string)
--  0: 000000000000000000000000f3c9c5719eb4f26a3ab45cb86771827629f9a999 <---
--  1: 00000000000000000000000071d402ac181de4a8739a15f5a56141f64fc522f8
--  2: 0000000000000000000000000000000000000000000000190b89b83816780000
--  3: 0000000000000000000000000000000000000000000000000000000000000080
--  4: 0000000000000000000000000000000000000000000000000000000000000025
--  5: 486920426f6220476c617365722d2d20486572652061726520796f757220746f
--  6: 6b656e7321
--4 : 7 : 1
--  0: _from (address) = 0xf3c9c5719eb4f26a3ab45cb86771827629f9a999
--  1: _to (address)
--  2: _value (uint256)
--  3: _transferData (string)
--  0: 000000000000000000000000f3c9c5719eb4f26a3ab45cb86771827629f9a999
--  1: 00000000000000000000000071d402ac181de4a8739a15f5a56141f64fc522f8 <---
--  2: 0000000000000000000000000000000000000000000000190b89b83816780000
--  3: 0000000000000000000000000000000000000000000000000000000000000080
--  4: 0000000000000000000000000000000000000000000000000000000000000025
--  5: 486920426f6220476c617365722d2d20486572652061726520796f757220746f
--  6: 6b656e7321
--4 : 7 : 2
--  0: _from (address) = 0xf3c9c5719eb4f26a3ab45cb86771827629f9a999
--  1: _to (address) = 0x71d402ac181de4a8739a15f5a56141f64fc522f8
--  2: _value (uint256)
--  3: _transferData (string)
--  0: 000000000000000000000000f3c9c5719eb4f26a3ab45cb86771827629f9a999
--  1: 00000000000000000000000071d402ac181de4a8739a15f5a56141f64fc522f8
--  2: 0000000000000000000000000000000000000000000000190b89b83816780000 <---
--  3: 0000000000000000000000000000000000000000000000000000000000000080
--  4: 0000000000000000000000000000000000000000000000000000000000000025
--  5: 486920426f6220476c617365722d2d20486572652061726520796f757220746f
--  6: 6b656e7321
--4 : 7 : 3
--  0: _from (address) = 0xf3c9c5719eb4f26a3ab45cb86771827629f9a999
--  1: _to (address) = 0x71d402ac181de4a8739a15f5a56141f64fc522f8
--  2: _value (uint256) = 462000000000000000000
--  3: _transferData (string)
--  0: 000000000000000000000000f3c9c5719eb4f26a3ab45cb86771827629f9a999
--  1: 00000000000000000000000071d402ac181de4a8739a15f5a56141f64fc522f8
--  2: 0000000000000000000000000000000000000000000000190b89b83816780000
--  3: 0000000000000000000000000000000000000000000000000000000000000080 <---
--  4: 0000000000000000000000000000000000000000000000000000000000000025
--  5: 486920426f6220476c617365722d2d20486572652061726520796f757220746f
--  6: 6b656e7321
expected: --0xf3c9c5719eb4f26a3ab45cb86771827629f9a999, 0x71d402ac181de4a8739a15f5a56141f64fc522f8, 462000000000000000000, Hi Bob Glaser-- Here are your tokens!--?
result:   --0xf3c9c5719eb4f26a3ab45cb86771827629f9a999, 0x71d402ac181de4a8739a15f5a56141f64fc522f8, 462000000000000000000, Hi Bob Glaser-- Here are your tokens!--? 1
testName: Corrected data from above (fifth row was bogus above)
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.004 test_4                           ==> 
line: decode|decoding void  |function baz()      |0x0000000000000000000000000000000000000000000000000000000000000000|<empty>
testType: decode
testName: decoding void
signature: function baz() : function baz()

--------------------------------------------------
expected: ----?
result:   ----? 1
testName: decoding void
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.005 test_5                           ==> 
line: decode|decoding int8  |function baz(int8)  |0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe|-2
testType: decode
testName: decoding int8
signature: function baz(int8) : function baz(int8)

--------------------------------------------------
expected: ---2--?
result:   ---2--? 1
testName: decoding int8
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.006 test_6                           ==> 
line: decode|decoding int16 |function baz(int16) |0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe|-2
testType: decode
testName: decoding int16
signature: function baz(int16) : function baz(int16)

--------------------------------------------------
expected: ---2--?
result:   ---2--? 1
testName: decoding int16
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.007 test_7                           ==> 
line: decode|decoding int32 |function baz(int32) |0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe|-2
testType: decode
testName: decoding int32
signature: function baz(int32) : function baz(int32)

--------------------------------------------------
expected: ---2--?
result:   ---2--? 1
testName: decoding int32
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.008 test_8                           ==> 
line: decode|decoding int40 |function baz(int40) |0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe|-2
testType: decode
testName: decoding int40
signature: function baz(int40) : function baz(int40)

--------------------------------------------------
--1 : 1 : 0
--  0: val_0 (int40)
--  0: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe <---
expected: ---2--?
result:   ---2--? 1
testName: decoding int40
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.009 test_9                           ==> 
line: decode|decoding int48 |function baz(int48) |0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe|-2
testType: decode
testName: decoding int48
signature: function baz(int48) : function baz(int48)

--------------------------------------------------
--1 : 1 : 0
--  0: val_0 (int48)
--  0: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe <---
expected: ---2--?
result:   ---2--? 1
testName: decoding int48
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.010 test_10                          ==> 
line: decode|decoding int56 |function baz(int56) |0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe|-2
testType: decode
testName: decoding int56
signature: function baz(int56) : function baz(int56)

--------------------------------------------------
--1 : 1 : 0
--  0: val_0 (int56)
--  0: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe <---
expected: ---2--?
result:   ---2--? 1
testName: decoding int56
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.011 test_11                          ==> 
line: decode|decoding int64 |function baz(int64) |0xffffffffffffffffffffffffffffffffffffffffffffffffffffb29c26f344fe|-85091238591234
testType: decode
testName: decoding int64
signature: function baz(int64) : function baz(int64)

--------------------------------------------------
expected: ---85091238591234--?
result:   ---85091238591234--? 1
testName: decoding int64
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.012 test_12                          ==> 
line: decode|decoding int8  |function baz(int8)  |0x0000000000000000000000000000000000000000000000000000000000000002|2
testType: decode
testName: decoding int8
signature: function baz(int8) : function baz(int8)

--------------------------------------------------
expected: --2--?
result:   --2--? 1
testName: decoding int8
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.013 test_13                          ==> 
line: decode|decoding int16 |function baz(int16) |0x0000000000000000000000000000000000000000000000000000000000000002|2
testType: decode
testName: decoding int16
signature: function baz(int16) : function baz(int16)

--------------------------------------------------
expected: --2--?
result:   --2--? 1
testName: decoding int16
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.014 test_14                          ==> 
line: decode|decoding int32 |function baz(int32) |0x0000000000000000000000000000000000000000000000000000000000000002|2
testType: decode
testName: decoding int32
signature: function baz(int32) : function baz(int32)

--------------------------------------------------
expected: --2--?
result:   --2--? 1
testName: decoding int32
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.015 test_15                          ==> 
line: decode|decoding int40 |function baz(int40) |0x0000000000000000000000000000000000000000000000000000000000000002|2
testType: decode
testName: decoding int40
signature: function baz(int40) : function baz(int40)

--------------------------------------------------
--1 : 1 : 0
--  0: val_0 (int40)
--  0: 0000000000000000000000000000000000000000000000000000000000000002 <---
expected: --2--?
result:   --2--? 1
testName: decoding int40
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.016 test_16                          ==> 
line: decode|decoding int48 |function baz(int48) |0x0000000000000000000000000000000000000000000000000000000000000002|2
testType: decode
testName: decoding int48
signature: function baz(int48) : function baz(int48)

--------------------------------------------------
--1 : 1 : 0
--  0: val_0 (int48)
--  0: 0000000000000000000000000000000000000000000000000000000000000002 <---
expected: --2--?
result:   --2--? 1
testName: decoding int48
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.017 test_17                          ==> 
line: decode|decoding int56 |function baz(int56) |0x0000000000000000000000000000000000000000000000000000000000000002|2
testType: decode
testName: decoding int56
signature: function baz(int56) : function baz(int56)

--------------------------------------------------
--1 : 1 : 0
--  0: val_0 (int56)
--  0: 0000000000000000000000000000000000000000000000000000000000000002 <---
expected: --2--?
result:   --2--? 1
testName: decoding int56
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.018 test_18                          ==> 
line: decode|decoding int64 |function baz(int64) |0x0000000000000000000000000000000000000000000000000000000000000002|2
testType: decode
testName: decoding int64
signature: function baz(int64) : function baz(int64)

--------------------------------------------------
expected: --2--?
result:   --2--? 1
testName: decoding int64
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.019 test_19                          ==> 
line: decode|decoding int72 |function baz(int72) |0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe|-2
testType: decode
testName: decoding int72
signature: function baz(int72) : function baz(int72)

--------------------------------------------------
--1 : 1 : 0
--  0: val_0 (int72)
--  0: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe <---
expected: ---2--?
result:   ---2--? 1
testName: decoding int72
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.020 test_20                          ==> 
line: decode|decoding int80 |function baz(int80) |0x0000000000000000000000000000000000000000000000000000b29c26f344fe|196383738119422
testType: decode
testName: decoding int80
signature: function baz(int80) : function baz(int80)

--------------------------------------------------
--1 : 1 : 0
--  0: val_0 (int80)
--  0: 0000000000000000000000000000000000000000000000000000b29c26f344fe <---
expected: --196383738119422--?
result:   --196383738119422--? 1
testName: decoding int80
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.021 test_21                          ==> 
line: decode|decoding int88 |function baz(int88) |0x0000000000000000000000000000000000000000000000000000000000000002|2
testType: decode
testName: decoding int88
signature: function baz(int88) : function baz(int88)

--------------------------------------------------
--1 : 1 : 0
--  0: val_0 (int88)
--  0: 0000000000000000000000000000000000000000000000000000000000000002 <---
expected: --2--?
result:   --2--? 1
testName: decoding int88
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.022 test_22                          ==> 
line: decode|decoding int96 |function baz(int96) |0x0000000000000000000000000000000000000000000000000000000000000002|2
testType: decode
testName: decoding int96
signature: function baz(int96) : function baz(int96)

--------------------------------------------------
--1 : 1 : 0
--  0: val_0 (int96)
--  0: 0000000000000000000000000000000000000000000000000000000000000002 <---
expected: --2--?
result:   --2--? 1
testName: decoding int96
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.023 test_23                          ==> 
line: decode|decoding int104|function baz(int104)|0x0000000000000000000000000000000000000000000000000000000000000002|2
testType: decode
testName: decoding int104
signature: function baz(int104) : function baz(int104)

--------------------------------------------------
--1 : 1 : 0
--  0: val_0 (int104)
--  0: 0000000000000000000000000000000000000000000000000000000000000002 <---
expected: --2--?
result:   --2--? 1
testName: decoding int104
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.024 test_24                          ==> 
line: decode|decoding int112|function baz(int112)|0x0000000000000000000000000000000000000000000000000000000000000002|2
testType: decode
testName: decoding int112
signature: function baz(int112) : function baz(int112)

--------------------------------------------------
--1 : 1 : 0
--  0: val_0 (int112)
--  0: 0000000000000000000000000000000000000000000000000000000000000002 <---
expected: --2--?
result:   --2--? 1
testName: decoding int112
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.025 test_25                          ==> 
line: decode|decoding int120|function baz(int120)|0x0000000000000000000000000000000000000000000000000000000000000002|2
testType: decode
testName: decoding int120
signature: function baz(int120) : function baz(int120)

--------------------------------------------------
--1 : 1 : 0
--  0: val_0 (int120)
--  0: 0000000000000000000000000000000000000000000000000000000000000002 <---
expected: --2--?
result:   --2--? 1
testName: decoding int120
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.026 test_26                          ==> 
line: decode|decoding uint8  |function baz(uint8)  |0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe|254
testType: decode
testName: decoding uint8
signature: function baz(uint8) : function baz(uint8)

--------------------------------------------------
expected: --254--?
result:   --254--? 1
testName: decoding uint8
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.027 test_27                          ==> 
line: decode|decoding uint16 |function baz(uint16) |0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe|65534
testType: decode
testName: decoding uint16
signature: function baz(uint16) : function baz(uint16)

--------------------------------------------------
expected: --65534--?
result:   --65534--? 1
testName: decoding uint16
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.028 test_28                          ==> 
line: decode|decoding uint32 |function baz(uint32) |0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe|4294967294
testType: decode
testName: decoding uint32
signature: function baz(uint32) : function baz(uint32)

--------------------------------------------------
expected: --4294967294--?
result:   --4294967294--? 1
testName: decoding uint32
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.029 test_29                          ==> 
line: decode|decoding uint40 |function baz(uint40) |0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe|1099511627774
testType: decode
testName: decoding uint40
signature: function baz(uint40) : function baz(uint40)

--------------------------------------------------
--1 : 1 : 0
--  0: val_0 (uint40)
--  0: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe <---
expected: --1099511627774--?
result:   --1099511627774--? 1
testName: decoding uint40
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.030 test_30                          ==> 
line: decode|decoding uint48 |function baz(uint48) |0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe|281474976710654
testType: decode
testName: decoding uint48
signature: function baz(uint48) : function baz(uint48)

--------------------------------------------------
--1 : 1 : 0
--  0: val_0 (uint48)
--  0: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe <---
expected: --281474976710654--?
result:   --281474976710654--? 1
testName: decoding uint48
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.031 test_31                          ==> 
line: decode|decoding uint56 |function baz(uint56) |0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe|72057594037927934
testType: decode
testName: decoding uint56
signature: function baz(uint56) : function baz(uint56)

--------------------------------------------------
--1 : 1 : 0
--  0: val_0 (uint56)
--  0: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe <---
expected: --72057594037927934--?
result:   --72057594037927934--? 1
testName: decoding uint56
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.032 test_32                          ==> 
line: decode|decoding uint64 |function baz(uint64) |0xffffffffffffffffffffffffffffffffffffffffffffffffffffb29c26f344fe|18446658982470960382
testType: decode
testName: decoding uint64
signature: function baz(uint64) : function baz(uint64)

--------------------------------------------------
expected: --18446658982470960382--?
result:   --18446658982470960382--? 1
testName: decoding uint64
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.033 test_33                          ==> 
line: decode|decoding uint8  |function baz(uint8)  |0x0000000000000000000000000000000000000000000000000000000000000002|2
testType: decode
testName: decoding uint8
signature: function baz(uint8) : function baz(uint8)

--------------------------------------------------
expected: --2--?
result:   --2--? 1
testName: decoding uint8
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.034 test_34                          ==> 
line: decode|decoding uint16 |function baz(uint16) |0x0000000000000000000000000000000000000000000000000000000000000002|2
testType: decode
testName: decoding uint16
signature: function baz(uint16) : function baz(uint16)

--------------------------------------------------
expected: --2--?
result:   --2--? 1
testName: decoding uint16
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.035 test_35                          ==> 
line: decode|decoding uint32 |function baz(uint32) |0x0000000000000000000000000000000000000000000000000000000000000002|2
testType: decode
testName: decoding uint32
signature: function baz(uint32) : function baz(uint32)

--------------------------------------------------
expected: --2--?
result:   --2--? 1
testName: decoding uint32
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.036 test_36                          ==> 
line: decode|decoding uint40 |function baz(uint40) |0x0000000000000000000000000000000000000000000000000000000000000002|2
testType: decode
testName: decoding uint40
signature: function baz(uint40) : function baz(uint40)

--------------------------------------------------
--1 : 1 : 0
--  0: val_0 (uint40)
--  0: 0000000000000000000000000000000000000000000000000000000000000002 <---
expected: --2--?
result:   --2--? 1
testName: decoding uint40
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.037 test_37                          ==> 
line: decode|decoding uint48 |function baz(uint48) |0x0000000000000000000000000000000000000000000000000000000000000002|2
testType: decode
testName: decoding uint48
signature: function baz(uint48) : function baz(uint48)

--------------------------------------------------
--1 : 1 : 0
--  0: val_0 (uint48)
--  0: 0000000000000000000000000000000000000000000000000000000000000002 <---
expected: --2--?
result:   --2--? 1
testName: decoding uint48
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.038 test_38                          ==> 
line: decode|decoding uint56 |function baz(uint56) |0x0000000000000000000000000000000000000000000000000000000000000002|2
testType: decode
testName: decoding uint56
signature: function baz(uint56) : function baz(uint56)

--------------------------------------------------
--1 : 1 : 0
--  0: val_0 (uint56)
--  0: 0000000000000000000000000000000000000000000000000000000000000002 <---
expected: --2--?
result:   --2--? 1
testName: decoding uint56
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.039 test_39                          ==> 
line: decode|decoding uint64 |function baz(uint64) |0x0000000000000000000000000000000000000000000000000000000000000002|2
testType: decode
testName: decoding uint64
signature: function baz(uint64) : function baz(uint64)

--------------------------------------------------
expected: --2--?
result:   --2--? 1
testName: decoding uint64
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.040 test_40                          ==> 
line: decode|decoding uint72 |function baz(uint72) |0x0000000000000000000000000000000000000000000000000000000000000002|2
testType: decode
testName: decoding uint72
signature: function baz(uint72) : function baz(uint72)

--------------------------------------------------
--1 : 1 : 0
--  0: val_0 (uint72)
--  0: 0000000000000000000000000000000000000000000000000000000000000002 <---
expected: --2--?
result:   --2--? 1
testName: decoding uint72
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.041 test_41                          ==> 
line: decode|decoding uint80 |function baz(uint80) |0x0000000000000000000000000000000000000000000000000000b29c26f344fe|196383738119422
testType: decode
testName: decoding uint80
signature: function baz(uint80) : function baz(uint80)

--------------------------------------------------
--1 : 1 : 0
--  0: val_0 (uint80)
--  0: 0000000000000000000000000000000000000000000000000000b29c26f344fe <---
expected: --196383738119422--?
result:   --196383738119422--? 1
testName: decoding uint80
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.042 test_42                          ==> 
line: decode|decoding uint88 |function baz(uint88) |0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe|309485009821345068724781054
testType: decode
testName: decoding uint88
signature: function baz(uint88) : function baz(uint88)

--------------------------------------------------
--1 : 1 : 0
--  0: val_0 (uint88)
--  0: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe <---
expected: --309485009821345068724781054--?
result:   --309485009821345068724781054--? 1
testName: decoding uint88
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.043 test_43                          ==> 
line: decode|decoding uint96 |function baz(uint96) |0x0000000000000000000000000000000000000000000000000000000000000002|2
testType: decode
testName: decoding uint96
signature: function baz(uint96) : function baz(uint96)

--------------------------------------------------
--1 : 1 : 0
--  0: val_0 (uint96)
--  0: 0000000000000000000000000000000000000000000000000000000000000002 <---
expected: --2--?
result:   --2--? 1
testName: decoding uint96
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.044 test_44                          ==> 
line: decode|decoding uint104|function baz(uint104)|0x0000000000000000000000000000000000000000000000000000000000000002|2
testType: decode
testName: decoding uint104
signature: function baz(uint104) : function baz(uint104)

--------------------------------------------------
--1 : 1 : 0
--  0: val_0 (uint104)
--  0: 0000000000000000000000000000000000000000000000000000000000000002 <---
expected: --2--?
result:   --2--? 1
testName: decoding uint104
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.045 test_45                          ==> 
line: decode|decoding uint112|function baz(uint112)|0x0000000000000000000000000000000000000000000000000000000000000002|2
testType: decode
testName: decoding uint112
signature: function baz(uint112) : function baz(uint112)

--------------------------------------------------
--1 : 1 : 0
--  0: val_0 (uint112)
--  0: 0000000000000000000000000000000000000000000000000000000000000002 <---
expected: --2--?
result:   --2--? 1
testName: decoding uint112
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.046 test_46                          ==> 
line: decode|decoding uint120|function baz(uint120)|0x0000000000000000000000000000000000000000000000000000000000000002|2
testType: decode
testName: decoding uint120
signature: function baz(uint120) : function baz(uint120)

--------------------------------------------------
--1 : 1 : 0
--  0: val_0 (uint120)
--  0: 0000000000000000000000000000000000000000000000000000000000000002 <---
expected: --2--?
result:   --2--? 1
testName: decoding uint120
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.047 test_47                          ==> 
line: decode|decoding uint32|function baz(uint32)|0x000000000000000000000000000000000000000000000000000000000000002a|42
testType: decode
testName: decoding uint32
signature: function baz(uint32) : function baz(uint32)

--------------------------------------------------
expected: --42--?
result:   --42--? 1
testName: decoding uint32
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.048 test_48                          ==> 
line: decode|decoding string|function baz(string)|0x0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000b68656c6c6f20776f726c64000000000000000000000000000000000000000000|hello world
testType: decode
testName: decoding string
signature: function baz(string) : function baz(string)

--------------------------------------------------
--1 : 3 : 0
--  0: val_0 (string)
--  0: 0000000000000000000000000000000000000000000000000000000000000020 <---
--  1: 000000000000000000000000000000000000000000000000000000000000000b
--  2: 68656c6c6f20776f726c64000000000000000000000000000000000000000000
expected: --hello world--?
result:   --hello world--? 1
testName: decoding string
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.049 test_49                          ==> 
line: decode|decoding bool,uint32|function baz(bool,uint32)|0x0000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002a|true, 42
testType: decode
testName: decoding bool,uint32
signature: function baz(bool,uint32) : function baz(bool,uint32)

--------------------------------------------------
--2 : 2 : 0
--  0: val_0 (bool)
--  1: val_1 (uint32)
--  0: 0000000000000000000000000000000000000000000000000000000000000001 <---
--  1: 000000000000000000000000000000000000000000000000000000000000002a
--2 : 2 : 1
--  0: val_0 (bool) = true
--  1: val_1 (uint32)
--  0: 0000000000000000000000000000000000000000000000000000000000000001
--  1: 000000000000000000000000000000000000000000000000000000000000002a <---
expected: --true, 42--?
result:   --true, 42--? 1
testName: decoding bool,uint32
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.050 test_50                          ==> 
line: decode|decoding bytes|function baz(bytes)|0x0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000b68656c6c6f20776f726c64000000000000000000000000000000000000000000|0x68656c6c6f20776f726c64
testType: decode
testName: decoding bytes
signature: function baz(bytes) : function baz(bytes)

--------------------------------------------------
--1 : 3 : 0
--  0: val_0 (bytes)
--  0: 0000000000000000000000000000000000000000000000000000000000000020 <---
--  1: 000000000000000000000000000000000000000000000000000000000000000b
--  2: 68656c6c6f20776f726c64000000000000000000000000000000000000000000
expected: --0x68656c6c6f20776f726c64--?
result:   --0x68656c6c6f20776f726c64--? 1
testName: decoding bytes
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.051 test_51                          ==> 
line: decode|decode bytes[] and bytes32 three byte32s in array and extra bytes32|function baz(bytes[] a, bytes32 b)|0x0000000000000000000000000000000000000000000000000000000000000040cb93e7ddea88eb37f5419784b399cf13f7df44079d05905006044dd14bb898110000000000000000000000000000000000000000000000000000000000000003000bf9f2adc93a1da7b9e61f44ee6504f99c467a2812b354d70a07f0b3cdc58c0007cc5734453f8d7bbacd4b3a8e753250dc4a432aaa5be5b048c59e0b5ac5fc00120aa407bdbff1d93ea98dafc5f1da56b589b427167ec414bccbe0cfdfd573|[0x000bf9f2adc93a1da7b9e61f44ee6504f99c467a2812b354d70a07f0b3cdc58c, 0x0007cc5734453f8d7bbacd4b3a8e753250dc4a432aaa5be5b048c59e0b5ac5fc, 0x00120aa407bdbff1d93ea98dafc5f1da56b589b427167ec414bccbe0cfdfd573], 0xcb93e7ddea88eb37f5419784b399cf13f7df44079d05905006044dd14bb89811
testType: decode
testName: decode bytes[] and bytes32 three byte32s in array and extra bytes32
signature: function baz(bytes[] a, bytes32 b) : function baz(bytes[],bytes32)

--------------------------------------------------
--2 : 6 : 0
--  0: a (bytes[])
--  1: b (bytes32)
--  0: 0000000000000000000000000000000000000000000000000000000000000040 <---
--  1: cb93e7ddea88eb37f5419784b399cf13f7df44079d05905006044dd14bb89811
--  2: 0000000000000000000000000000000000000000000000000000000000000003
--  3: 000bf9f2adc93a1da7b9e61f44ee6504f99c467a2812b354d70a07f0b3cdc58c
--  4: 0007cc5734453f8d7bbacd4b3a8e753250dc4a432aaa5be5b048c59e0b5ac5fc
--  5: 00120aa407bdbff1d93ea98dafc5f1da56b589b427167ec414bccbe0cfdfd573
  --1 : 6 : 3 : 2
  --  0:  (bytes32[3])
  --      bytes[][]
  --  0: 0000000000000000000000000000000000000000000000000000000000000040
  --  1: cb93e7ddea88eb37f5419784b399cf13f7df44079d05905006044dd14bb89811
  --  2: 0000000000000000000000000000000000000000000000000000000000000003 <===
  --  3: 000bf9f2adc93a1da7b9e61f44ee6504f99c467a2812b354d70a07f0b3cdc58c <---
  --  4: 0007cc5734453f8d7bbacd4b3a8e753250dc4a432aaa5be5b048c59e0b5ac5fc
  --  5: 00120aa407bdbff1d93ea98dafc5f1da56b589b427167ec414bccbe0cfdfd573
    --3 : 6 : 3 : 2
    --  0:  (bytes32)
    --  1:  (bytes32)
    --  2:  (bytes32)
    --  0: 0000000000000000000000000000000000000000000000000000000000000040
    --  1: cb93e7ddea88eb37f5419784b399cf13f7df44079d05905006044dd14bb89811
    --  2: 0000000000000000000000000000000000000000000000000000000000000003 <===
    --  3: 000bf9f2adc93a1da7b9e61f44ee6504f99c467a2812b354d70a07f0b3cdc58c <---
    --  4: 0007cc5734453f8d7bbacd4b3a8e753250dc4a432aaa5be5b048c59e0b5ac5fc
    --  5: 00120aa407bdbff1d93ea98dafc5f1da56b589b427167ec414bccbe0cfdfd573
    --3 : 6 : 4 : 2
    --  0:  (bytes32) = 0x000bf9f2adc93a1da7b9e61f44ee6504f99c467a2812b354d70a07f0b3cdc58c
    --  1:  (bytes32)
    --  2:  (bytes32)
    --  0: 0000000000000000000000000000000000000000000000000000000000000040
    --  1: cb93e7ddea88eb37f5419784b399cf13f7df44079d05905006044dd14bb89811
    --  2: 0000000000000000000000000000000000000000000000000000000000000003 <===
    --  3: 000bf9f2adc93a1da7b9e61f44ee6504f99c467a2812b354d70a07f0b3cdc58c
    --  4: 0007cc5734453f8d7bbacd4b3a8e753250dc4a432aaa5be5b048c59e0b5ac5fc <---
    --  5: 00120aa407bdbff1d93ea98dafc5f1da56b589b427167ec414bccbe0cfdfd573
    --3 : 6 : 5 : 2
    --  0:  (bytes32) = 0x000bf9f2adc93a1da7b9e61f44ee6504f99c467a2812b354d70a07f0b3cdc58c
    --  1:  (bytes32) = 0x0007cc5734453f8d7bbacd4b3a8e753250dc4a432aaa5be5b048c59e0b5ac5fc
    --  2:  (bytes32)
    --  0: 0000000000000000000000000000000000000000000000000000000000000040
    --  1: cb93e7ddea88eb37f5419784b399cf13f7df44079d05905006044dd14bb89811
    --  2: 0000000000000000000000000000000000000000000000000000000000000003 <===
    --  3: 000bf9f2adc93a1da7b9e61f44ee6504f99c467a2812b354d70a07f0b3cdc58c
    --  4: 0007cc5734453f8d7bbacd4b3a8e753250dc4a432aaa5be5b048c59e0b5ac5fc
    --  5: 00120aa407bdbff1d93ea98dafc5f1da56b589b427167ec414bccbe0cfdfd573 <---
--2 : 6 : 1
--  0: a (bytes[]) = [0x000bf9f2adc93a1da7b9e61f44ee6504f99c467a2812b354d70a07f0b3cdc58c, 0x0007cc5734453f8d7bbacd4b3a8e753250dc4a432aaa5be5b048c59e0b5ac5fc, 0x00120aa407bdbff1d93ea98dafc5f1da56b589b427167ec414bccbe0cfdfd573]
--  1: b (bytes32)
--  0: 0000000000000000000000000000000000000000000000000000000000000040
--  1: cb93e7ddea88eb37f5419784b399cf13f7df44079d05905006044dd14bb89811 <---
--  2: 0000000000000000000000000000000000000000000000000000000000000003
--  3: 000bf9f2adc93a1da7b9e61f44ee6504f99c467a2812b354d70a07f0b3cdc58c
--  4: 0007cc5734453f8d7bbacd4b3a8e753250dc4a432aaa5be5b048c59e0b5ac5fc
--  5: 00120aa407bdbff1d93ea98dafc5f1da56b589b427167ec414bccbe0cfdfd573
expected: --[0x000bf9f2adc93a1da7b9e61f44ee6504f99c467a2812b354d70a07f0b3cdc58c, 0x0007cc5734453f8d7bbacd4b3a8e753250dc4a432aaa5be5b048c59e0b5ac5fc, 0x00120aa407bdbff1d93ea98dafc5f1da56b589b427167ec414bccbe0cfdfd573], 0xcb93e7ddea88eb37f5419784b399cf13f7df44079d05905006044dd14bb89811--?
result:   --[0x000bf9f2adc93a1da7b9e61f44ee6504f99c467a2812b354d70a07f0b3cdc58c, 0x0007cc5734453f8d7bbacd4b3a8e753250dc4a432aaa5be5b048c59e0b5ac5fc, 0x00120aa407bdbff1d93ea98dafc5f1da56b589b427167ec414bccbe0cfdfd573], 0xcb93e7ddea88eb37f5419784b399cf13f7df44079d05905006044dd14bb89811--? 1
testName: decode bytes[] and bytes32 three byte32s in array and extra bytes32
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.052 test_52                          ==> 
line: decode|decoding bool, uint256[] one bool and one uint256|function bz(bool, uint256[])|0x000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002a|true, [42]
testType: decode
testName: decoding bool, uint256[] one bool and one uint256
signature: function bz(bool, uint256[]) : function bz(bool,uint256[])

--------------------------------------------------
--2 : 4 : 0
--  0: val_0 (bool)
--  1: val_1 (uint256[])
--  0: 0000000000000000000000000000000000000000000000000000000000000001 <---
--  1: 0000000000000000000000000000000000000000000000000000000000000040
--  2: 0000000000000000000000000000000000000000000000000000000000000001
--  3: 000000000000000000000000000000000000000000000000000000000000002a
--2 : 4 : 1
--  0: val_0 (bool) = true
--  1: val_1 (uint256[])
--  0: 0000000000000000000000000000000000000000000000000000000000000001
--  1: 0000000000000000000000000000000000000000000000000000000000000040 <---
--  2: 0000000000000000000000000000000000000000000000000000000000000001
--  3: 000000000000000000000000000000000000000000000000000000000000002a
  --1 : 4 : 3 : 2
  --  0:  (uint256[1])
  --      uint256[][]
  --  0: 0000000000000000000000000000000000000000000000000000000000000001
  --  1: 0000000000000000000000000000000000000000000000000000000000000040
  --  2: 0000000000000000000000000000000000000000000000000000000000000001 <===
  --  3: 000000000000000000000000000000000000000000000000000000000000002a <---
    --1 : 4 : 3 : 2
    --  0:  (uint256)
    --  0: 0000000000000000000000000000000000000000000000000000000000000001
    --  1: 0000000000000000000000000000000000000000000000000000000000000040
    --  2: 0000000000000000000000000000000000000000000000000000000000000001 <===
    --  3: 000000000000000000000000000000000000000000000000000000000000002a <---
expected: --true, [42]--?
result:   --true, [42]--? 1
testName: decoding bool, uint256[] one bool and one uint256
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.053 test_53                          ==> 
line: decode|decoding uint256[], bool one uint256 and one bool|function baz(uint256[], bool)|0x000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002a|[42], true
testType: decode
testName: decoding uint256[], bool one uint256 and one bool
signature: function baz(uint256[], bool) : function baz(uint256[],bool)

--------------------------------------------------
--2 : 4 : 0
--  0: val_0 (uint256[])
--  1: val_1 (bool)
--  0: 0000000000000000000000000000000000000000000000000000000000000040 <---
--  1: 0000000000000000000000000000000000000000000000000000000000000001
--  2: 0000000000000000000000000000000000000000000000000000000000000001
--  3: 000000000000000000000000000000000000000000000000000000000000002a
  --1 : 4 : 3 : 2
  --  0:  (uint256[1])
  --      uint256[][]
  --  0: 0000000000000000000000000000000000000000000000000000000000000040
  --  1: 0000000000000000000000000000000000000000000000000000000000000001
  --  2: 0000000000000000000000000000000000000000000000000000000000000001 <===
  --  3: 000000000000000000000000000000000000000000000000000000000000002a <---
    --1 : 4 : 3 : 2
    --  0:  (uint256)
    --  0: 0000000000000000000000000000000000000000000000000000000000000040
    --  1: 0000000000000000000000000000000000000000000000000000000000000001
    --  2: 0000000000000000000000000000000000000000000000000000000000000001 <===
    --  3: 000000000000000000000000000000000000000000000000000000000000002a <---
--2 : 4 : 1
--  0: val_0 (uint256[]) = [42]
--  1: val_1 (bool)
--  0: 0000000000000000000000000000000000000000000000000000000000000040
--  1: 0000000000000000000000000000000000000000000000000000000000000001 <---
--  2: 0000000000000000000000000000000000000000000000000000000000000001
--  3: 000000000000000000000000000000000000000000000000000000000000002a
expected: --[42], true--?
result:   --[42], true--? 1
testName: decoding uint256[], bool one uint256 and one bool
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.054 test_54                          ==> 
line: decode|decoding uint256[] three uint256s|function baz(uint256[])|0x00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000003|[1, 2, 3]
testType: decode
testName: decoding uint256[] three uint256s
signature: function baz(uint256[]) : function baz(uint256[])

--------------------------------------------------
--1 : 5 : 0
--  0: val_0 (uint256[])
--  0: 0000000000000000000000000000000000000000000000000000000000000020 <---
--  1: 0000000000000000000000000000000000000000000000000000000000000003
--  2: 0000000000000000000000000000000000000000000000000000000000000001
--  3: 0000000000000000000000000000000000000000000000000000000000000002
--  4: 0000000000000000000000000000000000000000000000000000000000000003
  --1 : 5 : 2 : 1
  --  0:  (uint256[3])
  --      uint256[][]
  --  0: 0000000000000000000000000000000000000000000000000000000000000020
  --  1: 0000000000000000000000000000000000000000000000000000000000000003 <===
  --  2: 0000000000000000000000000000000000000000000000000000000000000001 <---
  --  3: 0000000000000000000000000000000000000000000000000000000000000002
  --  4: 0000000000000000000000000000000000000000000000000000000000000003
    --3 : 5 : 2 : 1
    --  0:  (uint256)
    --  1:  (uint256)
    --  2:  (uint256)
    --  0: 0000000000000000000000000000000000000000000000000000000000000020
    --  1: 0000000000000000000000000000000000000000000000000000000000000003 <===
    --  2: 0000000000000000000000000000000000000000000000000000000000000001 <---
    --  3: 0000000000000000000000000000000000000000000000000000000000000002
    --  4: 0000000000000000000000000000000000000000000000000000000000000003
    --3 : 5 : 3 : 1
    --  0:  (uint256) = 1
    --  1:  (uint256)
    --  2:  (uint256)
    --  0: 0000000000000000000000000000000000000000000000000000000000000020
    --  1: 0000000000000000000000000000000000000000000000000000000000000003 <===
    --  2: 0000000000000000000000000000000000000000000000000000000000000001
    --  3: 0000000000000000000000000000000000000000000000000000000000000002 <---
    --  4: 0000000000000000000000000000000000000000000000000000000000000003
    --3 : 5 : 4 : 1
    --  0:  (uint256) = 1
    --  1:  (uint256) = 2
    --  2:  (uint256)
    --  0: 0000000000000000000000000000000000000000000000000000000000000020
    --  1: 0000000000000000000000000000000000000000000000000000000000000003 <===
    --  2: 0000000000000000000000000000000000000000000000000000000000000001
    --  3: 0000000000000000000000000000000000000000000000000000000000000002
    --  4: 0000000000000000000000000000000000000000000000000000000000000003 <---
expected: --[1, 2, 3]--?
result:   --[1, 2, 3]--? 1
testName: decoding uint256[] three uint256s
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.055 test_55                          ==> 
line: decode|decoding uint32 array three uint256s|function baz(uint32[3])|0x000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000003|[1, 2, 3]
testType: decode
testName: decoding uint32 array three uint256s
signature: function baz(uint32[3]) : function baz(uint32[3])

--------------------------------------------------
--1 : 3 : 0
--  0: val_0 (uint32[3])
--  0: 0000000000000000000000000000000000000000000000000000000000000001 <---
--  1: 0000000000000000000000000000000000000000000000000000000000000002
--  2: 0000000000000000000000000000000000000000000000000000000000000003
  --3 : 3 : 0
  --  0:  (uint32)
  --  1:  (uint32)
  --  2:  (uint32)
  --  0: 0000000000000000000000000000000000000000000000000000000000000001 <---
  --  1: 0000000000000000000000000000000000000000000000000000000000000002
  --  2: 0000000000000000000000000000000000000000000000000000000000000003
  --3 : 3 : 1
  --  0:  (uint32) = 1
  --  1:  (uint32)
  --  2:  (uint32)
  --  0: 0000000000000000000000000000000000000000000000000000000000000001
  --  1: 0000000000000000000000000000000000000000000000000000000000000002 <---
  --  2: 0000000000000000000000000000000000000000000000000000000000000003
  --3 : 3 : 2
  --  0:  (uint32) = 1
  --  1:  (uint32) = 2
  --  2:  (uint32)
  --  0: 0000000000000000000000000000000000000000000000000000000000000001
  --  1: 0000000000000000000000000000000000000000000000000000000000000002
  --  2: 0000000000000000000000000000000000000000000000000000000000000003 <---
expected: --[1, 2, 3]--?
result:   --[1, 2, 3]--? 1
testName: decoding uint32 array three uint256s
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.056 test_56                          ==> 
line: decode|decoding uint array three uint256s|function baz(uint[3])|0x000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000003|[1, 2, 3]
testType: decode
testName: decoding uint array three uint256s
signature: function baz(uint[3]) : function baz(uint256[3])

--------------------------------------------------
--1 : 3 : 0
--  0: val_0 (uint256[3])
--  0: 0000000000000000000000000000000000000000000000000000000000000001 <---
--  1: 0000000000000000000000000000000000000000000000000000000000000002
--  2: 0000000000000000000000000000000000000000000000000000000000000003
  --3 : 3 : 0
  --  0:  (uint256)
  --  1:  (uint256)
  --  2:  (uint256)
  --  0: 0000000000000000000000000000000000000000000000000000000000000001 <---
  --  1: 0000000000000000000000000000000000000000000000000000000000000002
  --  2: 0000000000000000000000000000000000000000000000000000000000000003
  --3 : 3 : 1
  --  0:  (uint256) = 1
  --  1:  (uint256)
  --  2:  (uint256)
  --  0: 0000000000000000000000000000000000000000000000000000000000000001
  --  1: 0000000000000000000000000000000000000000000000000000000000000002 <---
  --  2: 0000000000000000000000000000000000000000000000000000000000000003
  --3 : 3 : 2
  --  0:  (uint256) = 1
  --  1:  (uint256) = 2
  --  2:  (uint256)
  --  0: 0000000000000000000000000000000000000000000000000000000000000001
  --  1: 0000000000000000000000000000000000000000000000000000000000000002
  --  2: 0000000000000000000000000000000000000000000000000000000000000003 <---
expected: --[1, 2, 3]--?
result:   --[1, 2, 3]--? 1
testName: decoding uint array three uint256s
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.057 test_57                          ==> 
line: decode|decoding int32 array three uint32s|function baz(int32[3])|0x000000000000000000000000000000000000000000000000000000000000002a00000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000003|[42, 2, 3]
testType: decode
testName: decoding int32 array three uint32s
signature: function baz(int32[3]) : function baz(int32[3])

--------------------------------------------------
--1 : 3 : 0
--  0: val_0 (int32[3])
--  0: 000000000000000000000000000000000000000000000000000000000000002a <---
--  1: 0000000000000000000000000000000000000000000000000000000000000002
--  2: 0000000000000000000000000000000000000000000000000000000000000003
  --3 : 3 : 0
  --  0:  (int32)
  --  1:  (int32)
  --  2:  (int32)
  --  0: 000000000000000000000000000000000000000000000000000000000000002a <---
  --  1: 0000000000000000000000000000000000000000000000000000000000000002
  --  2: 0000000000000000000000000000000000000000000000000000000000000003
  --3 : 3 : 1
  --  0:  (int32) = 42
  --  1:  (int32)
  --  2:  (int32)
  --  0: 000000000000000000000000000000000000000000000000000000000000002a
  --  1: 0000000000000000000000000000000000000000000000000000000000000002 <---
  --  2: 0000000000000000000000000000000000000000000000000000000000000003
  --3 : 3 : 2
  --  0:  (int32) = 42
  --  1:  (int32) = 2
  --  2:  (int32)
  --  0: 000000000000000000000000000000000000000000000000000000000000002a
  --  1: 0000000000000000000000000000000000000000000000000000000000000002
  --  2: 0000000000000000000000000000000000000000000000000000000000000003 <---
expected: --[42, 2, 3]--?
result:   --[42, 2, 3]--? 1
testName: decoding int32 array three uint32s
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.058 test_58                          ==> 
line: decode|decode int[3] three int256s|function baz(int[3])|0x000000000000000000000000000000000000000000000000000000000000002afffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffb|[42, -3, -5]
testType: decode
testName: decode int[3] three int256s
signature: function baz(int[3]) : function baz(int256[3])

--------------------------------------------------
--1 : 3 : 0
--  0: val_0 (int256[3])
--  0: 000000000000000000000000000000000000000000000000000000000000002a <---
--  1: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd
--  2: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffb
  --3 : 3 : 0
  --  0:  (int256)
  --  1:  (int256)
  --  2:  (int256)
  --  0: 000000000000000000000000000000000000000000000000000000000000002a <---
  --  1: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd
  --  2: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffb
  --3 : 3 : 1
  --  0:  (int256) = 42
  --  1:  (int256)
  --  2:  (int256)
  --  0: 000000000000000000000000000000000000000000000000000000000000002a
  --  1: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd <---
  --  2: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffb
  --3 : 3 : 2
  --  0:  (int256) = 42
  --  1:  (int256) = -3
  --  2:  (int256)
  --  0: 000000000000000000000000000000000000000000000000000000000000002a
  --  1: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd
  --  2: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffb <---
expected: --[42, -3, -5]--?
result:   --[42, -3, -5]--? 1
testName: decode int[3] three int256s
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.059 test_59                          ==> 
line: decode|decoding (uint[2], uint) two uint256s and a uint256|function baz(uint[2],       uint)|0x0000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000005c0000000000000000000000000000000000000000000000000000000000000003|[1, 92], 3
testType: decode
testName: decoding (uint[2], uint) two uint256s and a uint256
signature: function baz(uint[2],       uint) : function baz(uint256[2],uint256)

--------------------------------------------------
--2 : 3 : 0
--  0: val_0 (uint256[2])
--  1: val_1 (uint256)
--  0: 0000000000000000000000000000000000000000000000000000000000000001 <---
--  1: 000000000000000000000000000000000000000000000000000000000000005c
--  2: 0000000000000000000000000000000000000000000000000000000000000003
  --2 : 3 : 0
  --  0:  (uint256)
  --  1:  (uint256)
  --  0: 0000000000000000000000000000000000000000000000000000000000000001 <---
  --  1: 000000000000000000000000000000000000000000000000000000000000005c
  --  2: 0000000000000000000000000000000000000000000000000000000000000003
  --2 : 3 : 1
  --  0:  (uint256) = 1
  --  1:  (uint256)
  --  0: 0000000000000000000000000000000000000000000000000000000000000001
  --  1: 000000000000000000000000000000000000000000000000000000000000005c <---
  --  2: 0000000000000000000000000000000000000000000000000000000000000003
--2 : 3 : 2
--  0: val_0 (uint256[2]) = [1, 92]
--  1: val_1 (uint256)
--  0: 0000000000000000000000000000000000000000000000000000000000000001
--  1: 000000000000000000000000000000000000000000000000000000000000005c
--  2: 0000000000000000000000000000000000000000000000000000000000000003 <---
expected: --[1, 92], 3--?
result:   --[1, 92], 3--? 1
testName: decoding (uint[2], uint) two uint256s and a uint256
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.060 test_60                          ==> 
line: decode|should decode latin and extensions|function baz(string)|0x00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000017657468657265756d20737ac3a16dc3ad74c3b367c3a970000000000000000000|ethereum számítógép
testType: decode
testName: should decode latin and extensions
signature: function baz(string) : function baz(string)

--------------------------------------------------
--1 : 3 : 0
--  0: val_0 (string)
--  0: 0000000000000000000000000000000000000000000000000000000000000020 <---
--  1: 0000000000000000000000000000000000000000000000000000000000000017
--  2: 657468657265756d20737ac3a16dc3ad74c3b367c3a970000000000000000000
expected: --ethereum számítógép--?
result:   --ethereum számítógép--? 1
testName: should decode latin and extensions
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.061 test_61                          ==> 
line: decode|should decode non-latin characters|function baz(string)|0x00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000018e4b8bae4bb80e4b988e982a3e4b988e8aea4e79c9fefbc9f0000000000000000|为什么那么认真？
testType: decode
testName: should decode non-latin characters
signature: function baz(string) : function baz(string)

--------------------------------------------------
--1 : 3 : 0
--  0: val_0 (string)
--  0: 0000000000000000000000000000000000000000000000000000000000000020 <---
--  1: 0000000000000000000000000000000000000000000000000000000000000018
--  2: e4b8bae4bb80e4b988e982a3e4b988e8aea4e79c9fefbc9f0000000000000000
expected: --为什么那么认真？--?
result:   --为什么那么认真？--? 1
testName: should decode non-latin characters
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.062 test_62                          ==> 
line: decode|decoding (uint[2][2]) two sets of two|function baz(uint[2][2])|0x0000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000008|[[1, 2], [4, 8]]
testType: decode
testName: decoding (uint[2][2]) two sets of two
signature: function baz(uint[2][2]) : function baz(uint256[2][2])

--------------------------------------------------
--1 : 4 : 0
--  0: val_0 (uint256[2][2])
--  0: 0000000000000000000000000000000000000000000000000000000000000001 <---
--  1: 0000000000000000000000000000000000000000000000000000000000000002
--  2: 0000000000000000000000000000000000000000000000000000000000000004
--  3: 0000000000000000000000000000000000000000000000000000000000000008
  --2 : 4 : 0
  --  0:  (uint256[2])
  --  1:  (uint256[2])
  --  0: 0000000000000000000000000000000000000000000000000000000000000001 <---
  --  1: 0000000000000000000000000000000000000000000000000000000000000002
  --  2: 0000000000000000000000000000000000000000000000000000000000000004
  --  3: 0000000000000000000000000000000000000000000000000000000000000008
    --2 : 4 : 0
    --  0:  (uint256)
    --  1:  (uint256)
    --  0: 0000000000000000000000000000000000000000000000000000000000000001 <---
    --  1: 0000000000000000000000000000000000000000000000000000000000000002
    --  2: 0000000000000000000000000000000000000000000000000000000000000004
    --  3: 0000000000000000000000000000000000000000000000000000000000000008
    --2 : 4 : 1
    --  0:  (uint256) = 1
    --  1:  (uint256)
    --  0: 0000000000000000000000000000000000000000000000000000000000000001
    --  1: 0000000000000000000000000000000000000000000000000000000000000002 <---
    --  2: 0000000000000000000000000000000000000000000000000000000000000004
    --  3: 0000000000000000000000000000000000000000000000000000000000000008
  --2 : 4 : 2
  --  0:  (uint256[2]) = [1, 2]
  --  1:  (uint256[2])
  --  0: 0000000000000000000000000000000000000000000000000000000000000001
  --  1: 0000000000000000000000000000000000000000000000000000000000000002
  --  2: 0000000000000000000000000000000000000000000000000000000000000004 <---
  --  3: 0000000000000000000000000000000000000000000000000000000000000008
    --2 : 4 : 2
    --  0:  (uint256)
    --  1:  (uint256)
    --  0: 0000000000000000000000000000000000000000000000000000000000000001
    --  1: 0000000000000000000000000000000000000000000000000000000000000002
    --  2: 0000000000000000000000000000000000000000000000000000000000000004 <---
    --  3: 0000000000000000000000000000000000000000000000000000000000000008
    --2 : 4 : 3
    --  0:  (uint256) = 4
    --  1:  (uint256)
    --  0: 0000000000000000000000000000000000000000000000000000000000000001
    --  1: 0000000000000000000000000000000000000000000000000000000000000002
    --  2: 0000000000000000000000000000000000000000000000000000000000000004
    --  3: 0000000000000000000000000000000000000000000000000000000000000008 <---
expected: --[[1, 2], [4, 8]]--?
result:   --[[1, 2], [4, 8]]--? 1
testName: decoding (uint[2][2]) two sets of two
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.063 test_63                          ==> 
line: decode|decoding (uint128[2]      [3 ], uint) three sets of two|function baz(uint128[2  ]       [3],uint)|0x000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000050000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a|[[1, 2], [3, 4], [5, 6]], 10
testType: decode
testName: decoding (uint128[2]      [3 ], uint) three sets of two
signature: function baz(uint128[2  ]       [3],uint) : function baz(uint128[2][3],uint256)

--------------------------------------------------
--2 : 7 : 0
--  0: val_0 (uint128[2][3])
--  1: val_1 (uint256)
--  0: 0000000000000000000000000000000000000000000000000000000000000001 <---
--  1: 0000000000000000000000000000000000000000000000000000000000000002
--  2: 0000000000000000000000000000000000000000000000000000000000000003
--  3: 0000000000000000000000000000000000000000000000000000000000000004
--  4: 0000000000000000000000000000000000000000000000000000000000000005
--  5: 0000000000000000000000000000000000000000000000000000000000000006
--  6: 000000000000000000000000000000000000000000000000000000000000000a
  --3 : 7 : 0
  --  0:  (uint128[2])
  --  1:  (uint128[2])
  --  2:  (uint128[2])
  --  0: 0000000000000000000000000000000000000000000000000000000000000001 <---
  --  1: 0000000000000000000000000000000000000000000000000000000000000002
  --  2: 0000000000000000000000000000000000000000000000000000000000000003
  --  3: 0000000000000000000000000000000000000000000000000000000000000004
  --  4: 0000000000000000000000000000000000000000000000000000000000000005
  --  5: 0000000000000000000000000000000000000000000000000000000000000006
  --  6: 000000000000000000000000000000000000000000000000000000000000000a
    --2 : 7 : 0
    --  0:  (uint128)
    --  1:  (uint128)
    --  0: 0000000000000000000000000000000000000000000000000000000000000001 <---
    --  1: 0000000000000000000000000000000000000000000000000000000000000002
    --  2: 0000000000000000000000000000000000000000000000000000000000000003
    --  3: 0000000000000000000000000000000000000000000000000000000000000004
    --  4: 0000000000000000000000000000000000000000000000000000000000000005
    --  5: 0000000000000000000000000000000000000000000000000000000000000006
    --  6: 000000000000000000000000000000000000000000000000000000000000000a
    --2 : 7 : 1
    --  0:  (uint128) = 1
    --  1:  (uint128)
    --  0: 0000000000000000000000000000000000000000000000000000000000000001
    --  1: 0000000000000000000000000000000000000000000000000000000000000002 <---
    --  2: 0000000000000000000000000000000000000000000000000000000000000003
    --  3: 0000000000000000000000000000000000000000000000000000000000000004
    --  4: 0000000000000000000000000000000000000000000000000000000000000005
    --  5: 0000000000000000000000000000000000000000000000000000000000000006
    --  6: 000000000000000000000000000000000000000000000000000000000000000a
  --3 : 7 : 2
  --  0:  (uint128[2]) = [1, 2]
  --  1:  (uint128[2])
  --  2:  (uint128[2])
  --  0: 0000000000000000000000000000000000000000000000000000000000000001
  --  1: 0000000000000000000000000000000000000000000000000000000000000002
  --  2: 0000000000000000000000000000000000000000000000000000000000000003 <---
  --  3: 0000000000000000000000000000000000000000000000000000000000000004
  --  4: 0000000000000000000000000000000000000000000000000000000000000005
  --  5: 0000000000000000000000000000000000000000000000000000000000000006
  --  6: 000000000000000000000000000000000000000000000000000000000000000a
    --2 : 7 : 2
    --  0:  (uint128)
    --  1:  (uint128)
    --  0: 0000000000000000000000000000000000000000000000000000000000000001
    --  1: 0000000000000000000000000000000000000000000000000000000000000002
    --  2: 0000000000000000000000000000000000000000000000000000000000000003 <---
    --  3: 0000000000000000000000000000000000000000000000000000000000000004
    --  4: 0000000000000000000000000000000000000000000000000000000000000005
    --  5: 0000000000000000000000000000000000000000000000000000000000000006
    --  6: 000000000000000000000000000000000000000000000000000000000000000a
    --2 : 7 : 3
    --  0:  (uint128) = 3
    --  1:  (uint128)
    --  0: 0000000000000000000000000000000000000000000000000000000000000001
    --  1: 0000000000000000000000000000000000000000000000000000000000000002
    --  2: 0000000000000000000000000000000000000000000000000000000000000003
    --  3: 0000000000000000000000000000000000000000000000000000000000000004 <---
    --  4: 0000000000000000000000000000000000000000000000000000000000000005
    --  5: 0000000000000000000000000000000000000000000000000000000000000006
    --  6: 000000000000000000000000000000000000000000000000000000000000000a
  --3 : 7 : 4
  --  0:  (uint128[2]) = [1, 2]
  --  1:  (uint128[2]) = [3, 4]
  --  2:  (uint128[2])
  --  0: 0000000000000000000000000000000000000000000000000000000000000001
  --  1: 0000000000000000000000000000000000000000000000000000000000000002
  --  2: 0000000000000000000000000000000000000000000000000000000000000003
  --  3: 0000000000000000000000000000000000000000000000000000000000000004
  --  4: 0000000000000000000000000000000000000000000000000000000000000005 <---
  --  5: 0000000000000000000000000000000000000000000000000000000000000006
  --  6: 000000000000000000000000000000000000000000000000000000000000000a
    --2 : 7 : 4
    --  0:  (uint128)
    --  1:  (uint128)
    --  0: 0000000000000000000000000000000000000000000000000000000000000001
    --  1: 0000000000000000000000000000000000000000000000000000000000000002
    --  2: 0000000000000000000000000000000000000000000000000000000000000003
    --  3: 0000000000000000000000000000000000000000000000000000000000000004
    --  4: 0000000000000000000000000000000000000000000000000000000000000005 <---
    --  5: 0000000000000000000000000000000000000000000000000000000000000006
    --  6: 000000000000000000000000000000000000000000000000000000000000000a
    --2 : 7 : 5
    --  0:  (uint128) = 5
    --  1:  (uint128)
    --  0: 0000000000000000000000000000000000000000000000000000000000000001
    --  1: 0000000000000000000000000000000000000000000000000000000000000002
    --  2: 0000000000000000000000000000000000000000000000000000000000000003
    --  3: 0000000000000000000000000000000000000000000000000000000000000004
    --  4: 0000000000000000000000000000000000000000000000000000000000000005
    --  5: 0000000000000000000000000000000000000000000000000000000000000006 <---
    --  6: 000000000000000000000000000000000000000000000000000000000000000a
--2 : 7 : 6
--  0: val_0 (uint128[2][3]) = [[1, 2], [3, 4], [5, 6]]
--  1: val_1 (uint256)
--  0: 0000000000000000000000000000000000000000000000000000000000000001
--  1: 0000000000000000000000000000000000000000000000000000000000000002
--  2: 0000000000000000000000000000000000000000000000000000000000000003
--  3: 0000000000000000000000000000000000000000000000000000000000000004
--  4: 0000000000000000000000000000000000000000000000000000000000000005
--  5: 0000000000000000000000000000000000000000000000000000000000000006
--  6: 000000000000000000000000000000000000000000000000000000000000000a <---
expected: --[[1, 2], [3, 4], [5, 6]], 10--?
result:   --[[1, 2], [3, 4], [5, 6]], 10--? 1
testName: decoding (uint128[2]      [3 ], uint) three sets of two
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.064 test_64                          ==> 
line: decode|decoding (uint128[2][3][2], uint) two sets of three sets of two|function baz(uint128[2]  [3][2], uint)|0xa|[[[1, 2], [3, 4], [5, 6]], [[1, 2], [3, 4], [5, 6]]], 10
testType: decode
testName: decoding (uint128[2][3][2], uint) two sets of three sets of two
signature: function baz(uint128[2]  [3][2], uint) : function baz(uint128[2][3][2],uint256)

--------------------------------------------------
--2 : 13 : 0
--  0: val_0 (uint128[2][3][2])
--  1: val_1 (uint256)
--  0: 0000000000000000000000000000000000000000000000000000000000000001 <---
--  1: 0000000000000000000000000000000000000000000000000000000000000002
--  2: 0000000000000000000000000000000000000000000000000000000000000003
--  3: 0000000000000000000000000000000000000000000000000000000000000004
--  4: 0000000000000000000000000000000000000000000000000000000000000005
--  5: 0000000000000000000000000000000000000000000000000000000000000006
--  6: 0000000000000000000000000000000000000000000000000000000000000001
--  7: 0000000000000000000000000000000000000000000000000000000000000002
--  8: 0000000000000000000000000000000000000000000000000000000000000003
--  9: 0000000000000000000000000000000000000000000000000000000000000004
-- 10: 0000000000000000000000000000000000000000000000000000000000000005
-- 11: 0000000000000000000000000000000000000000000000000000000000000006
-- 12: 000000000000000000000000000000000000000000000000000000000000000a
  --2 : 13 : 0
  --  0:  (uint128[2][3])
  --  1:  (uint128[2][3])
  --  0: 0000000000000000000000000000000000000000000000000000000000000001 <---
  --  1: 0000000000000000000000000000000000000000000000000000000000000002
  --  2: 0000000000000000000000000000000000000000000000000000000000000003
  --  3: 0000000000000000000000000000000000000000000000000000000000000004
  --  4: 0000000000000000000000000000000000000000000000000000000000000005
  --  5: 0000000000000000000000000000000000000000000000000000000000000006
  --  6: 0000000000000000000000000000000000000000000000000000000000000001
  --  7: 0000000000000000000000000000000000000000000000000000000000000002
  --  8: 0000000000000000000000000000000000000000000000000000000000000003
  --  9: 0000000000000000000000000000000000000000000000000000000000000004
  -- 10: 0000000000000000000000000000000000000000000000000000000000000005
  -- 11: 0000000000000000000000000000000000000000000000000000000000000006
  -- 12: 000000000000000000000000000000000000000000000000000000000000000a
    --3 : 13 : 0
    --  0:  (uint128[2])
    --  1:  (uint128[2])
    --  2:  (uint128[2])
    --  0: 0000000000000000000000000000000000000000000000000000000000000001 <---
    --  1: 0000000000000000000000000000000000000000000000000000000000000002
    --  2: 0000000000000000000000000000000000000000000000000000000000000003
    --  3: 0000000000000000000000000000000000000000000000000000000000000004
    --  4: 0000000000000000000000000000000000000000000000000000000000000005
    --  5: 0000000000000000000000000000000000000000000000000000000000000006
    --  6: 0000000000000000000000000000000000000000000000000000000000000001
    --  7: 0000000000000000000000000000000000000000000000000000000000000002
    --  8: 0000000000000000000000000000000000000000000000000000000000000003
    --  9: 0000000000000000000000000000000000000000000000000000000000000004
    -- 10: 0000000000000000000000000000000000000000000000000000000000000005
    -- 11: 0000000000000000000000000000000000000000000000000000000000000006
    -- 12: 000000000000000000000000000000000000000000000000000000000000000a
      --2 : 13 : 0
      --  0:  (uint128)
      --  1:  (uint128)
      --  0: 0000000000000000000000000000000000000000000000000000000000000001 <---
      --  1: 0000000000000000000000000000000000000000000000000000000000000002
      --  2: 0000000000000000000000000000000000000000000000000000000000000003
      --  3: 0000000000000000000000000000000000000000000000000000000000000004
      --  4: 0000000000000000000000000000000000000000000000000000000000000005
      --  5: 0000000000000000000000000000000000000000000000000000000000000006
      --  6: 0000000000000000000000000000000000000000000000000000000000000001
      --  7: 0000000000000000000000000000000000000000000000000000000000000002
      --  8: 0000000000000000000000000000000000000000000000000000000000000003
      --  9: 0000000000000000000000000000000000000000000000000000000000000004
      -- 10: 0000000000000000000000000000000000000000000000000000000000000005
      -- 11: 0000000000000000000000000000000000000000000000000000000000000006
      -- 12: 000000000000000000000000000000000000000000000000000000000000000a
      --2 : 13 : 1
      --  0:  (uint128) = 1
      --  1:  (uint128)
      --  0: 0000000000000000000000000000000000000000000000000000000000000001
      --  1: 0000000000000000000000000000000000000000000000000000000000000002 <---
      --  2: 0000000000000000000000000000000000000000000000000000000000000003
      --  3: 0000000000000000000000000000000000000000000000000000000000000004
      --  4: 0000000000000000000000000000000000000000000000000000000000000005
      --  5: 0000000000000000000000000000000000000000000000000000000000000006
      --  6: 0000000000000000000000000000000000000000000000000000000000000001
      --  7: 0000000000000000000000000000000000000000000000000000000000000002
      --  8: 0000000000000000000000000000000000000000000000000000000000000003
      --  9: 0000000000000000000000000000000000000000000000000000000000000004
      -- 10: 0000000000000000000000000000000000000000000000000000000000000005
      -- 11: 0000000000000000000000000000000000000000000000000000000000000006
      -- 12: 000000000000000000000000000000000000000000000000000000000000000a
    --3 : 13 : 2
    --  0:  (uint128[2]) = [1, 2]
    --  1:  (uint128[2])
    --  2:  (uint128[2])
    --  0: 0000000000000000000000000000000000000000000000000000000000000001
    --  1: 0000000000000000000000000000000000000000000000000000000000000002
    --  2: 0000000000000000000000000000000000000000000000000000000000000003 <---
    --  3: 0000000000000000000000000000000000000000000000000000000000000004
    --  4: 0000000000000000000000000000000000000000000000000000000000000005
    --  5: 0000000000000000000000000000000000000000000000000000000000000006
    --  6: 0000000000000000000000000000000000000000000000000000000000000001
    --  7: 0000000000000000000000000000000000000000000000000000000000000002
    --  8: 0000000000000000000000000000000000000000000000000000000000000003
    --  9: 0000000000000000000000000000000000000000000000000000000000000004
    -- 10: 0000000000000000000000000000000000000000000000000000000000000005
    -- 11: 0000000000000000000000000000000000000000000000000000000000000006
    -- 12: 000000000000000000000000000000000000000000000000000000000000000a
      --2 : 13 : 2
      --  0:  (uint128)
      --  1:  (uint128)
      --  0: 0000000000000000000000000000000000000000000000000000000000000001
      --  1: 0000000000000000000000000000000000000000000000000000000000000002
      --  2: 0000000000000000000000000000000000000000000000000000000000000003 <---
      --  3: 0000000000000000000000000000000000000000000000000000000000000004
      --  4: 0000000000000000000000000000000000000000000000000000000000000005
      --  5: 0000000000000000000000000000000000000000000000000000000000000006
      --  6: 0000000000000000000000000000000000000000000000000000000000000001
      --  7: 0000000000000000000000000000000000000000000000000000000000000002
      --  8: 0000000000000000000000000000000000000000000000000000000000000003
      --  9: 0000000000000000000000000000000000000000000000000000000000000004
      -- 10: 0000000000000000000000000000000000000000000000000000000000000005
      -- 11: 0000000000000000000000000000000000000000000000000000000000000006
      -- 12: 000000000000000000000000000000000000000000000000000000000000000a
      --2 : 13 : 3
      --  0:  (uint128) = 3
      --  1:  (uint128)
      --  0: 0000000000000000000000000000000000000000000000000000000000000001
      --  1: 0000000000000000000000000000000000000000000000000000000000000002
      --  2: 0000000000000000000000000000000000000000000000000000000000000003
      --  3: 0000000000000000000000000000000000000000000000000000000000000004 <---
      --  4: 0000000000000000000000000000000000000000000000000000000000000005
      --  5: 0000000000000000000000000000000000000000000000000000000000000006
      --  6: 0000000000000000000000000000000000000000000000000000000000000001
      --  7: 0000000000000000000000000000000000000000000000000000000000000002
      --  8: 0000000000000000000000000000000000000000000000000000000000000003
      --  9: 0000000000000000000000000000000000000000000000000000000000000004
      -- 10: 0000000000000000000000000000000000000000000000000000000000000005
      -- 11: 0000000000000000000000000000000000000000000000000000000000000006
      -- 12: 000000000000000000000000000000000000000000000000000000000000000a
    --3 : 13 : 4
    --  0:  (uint128[2]) = [1, 2]
    --  1:  (uint128[2]) = [3, 4]
    --  2:  (uint128[2])
    --  0: 0000000000000000000000000000000000000000000000000000000000000001
    --  1: 0000000000000000000000000000000000000000000000000000000000000002
    --  2: 0000000000000000000000000000000000000000000000000000000000000003
    --  3: 0000000000000000000000000000000000000000000000000000000000000004
    --  4: 0000000000000000000000000000000000000000000000000000000000000005 <---
    --  5: 0000000000000000000000000000000000000000000000000000000000000006
    --  6: 0000000000000000000000000000000000000000000000000000000000000001
    --  7: 0000000000000000000000000000000000000000000000000000000000000002
    --  8: 0000000000000000000000000000000000000000000000000000000000000003
    --  9: 0000000000000000000000000000000000000000000000000000000000000004
    -- 10: 0000000000000000000000000000000000000000000000000000000000000005
    -- 11: 0000000000000000000000000000000000000000000000000000000000000006
    -- 12: 000000000000000000000000000000000000000000000000000000000000000a
      --2 : 13 : 4
      --  0:  (uint128)
      --  1:  (uint128)
      --  0: 0000000000000000000000000000000000000000000000000000000000000001
      --  1: 0000000000000000000000000000000000000000000000000000000000000002
      --  2: 0000000000000000000000000000000000000000000000000000000000000003
      --  3: 0000000000000000000000000000000000000000000000000000000000000004
      --  4: 0000000000000000000000000000000000000000000000000000000000000005 <---
      --  5: 0000000000000000000000000000000000000000000000000000000000000006
      --  6: 0000000000000000000000000000000000000000000000000000000000000001
      --  7: 0000000000000000000000000000000000000000000000000000000000000002
      --  8: 0000000000000000000000000000000000000000000000000000000000000003
      --  9: 0000000000000000000000000000000000000000000000000000000000000004
      -- 10: 0000000000000000000000000000000000000000000000000000000000000005
      -- 11: 0000000000000000000000000000000000000000000000000000000000000006
      -- 12: 000000000000000000000000000000000000000000000000000000000000000a
      --2 : 13 : 5
      --  0:  (uint128) = 5
      --  1:  (uint128)
      --  0: 0000000000000000000000000000000000000000000000000000000000000001
      --  1: 0000000000000000000000000000000000000000000000000000000000000002
      --  2: 0000000000000000000000000000000000000000000000000000000000000003
      --  3: 0000000000000000000000000000000000000000000000000000000000000004
      --  4: 0000000000000000000000000000000000000000000000000000000000000005
      --  5: 0000000000000000000000000000000000000000000000000000000000000006 <---
      --  6: 0000000000000000000000000000000000000000000000000000000000000001
      --  7: 0000000000000000000000000000000000000000000000000000000000000002
      --  8: 0000000000000000000000000000000000000000000000000000000000000003
      --  9: 0000000000000000000000000000000000000000000000000000000000000004
      -- 10: 0000000000000000000000000000000000000000000000000000000000000005
      -- 11: 0000000000000000000000000000000000000000000000000000000000000006
      -- 12: 000000000000000000000000000000000000000000000000000000000000000a
  --2 : 13 : 6
  --  0:  (uint128[2][3]) = [[1, 2], [3, 4], [5, 6]]
  --  1:  (uint128[2][3])
  --  0: 0000000000000000000000000000000000000000000000000000000000000001
  --  1: 0000000000000000000000000000000000000000000000000000000000000002
  --  2: 0000000000000000000000000000000000000000000000000000000000000003
  --  3: 0000000000000000000000000000000000000000000000000000000000000004
  --  4: 0000000000000000000000000000000000000000000000000000000000000005
  --  5: 0000000000000000000000000000000000000000000000000000000000000006
  --  6: 0000000000000000000000000000000000000000000000000000000000000001 <---
  --  7: 0000000000000000000000000000000000000000000000000000000000000002
  --  8: 0000000000000000000000000000000000000000000000000000000000000003
  --  9: 0000000000000000000000000000000000000000000000000000000000000004
  -- 10: 0000000000000000000000000000000000000000000000000000000000000005
  -- 11: 0000000000000000000000000000000000000000000000000000000000000006
  -- 12: 000000000000000000000000000000000000000000000000000000000000000a
    --3 : 13 : 6
    --  0:  (uint128[2])
    --  1:  (uint128[2])
    --  2:  (uint128[2])
    --  0: 0000000000000000000000000000000000000000000000000000000000000001
    --  1: 0000000000000000000000000000000000000000000000000000000000000002
    --  2: 0000000000000000000000000000000000000000000000000000000000000003
    --  3: 0000000000000000000000000000000000000000000000000000000000000004
    --  4: 0000000000000000000000000000000000000000000000000000000000000005
    --  5: 0000000000000000000000000000000000000000000000000000000000000006
    --  6: 0000000000000000000000000000000000000000000000000000000000000001 <---
    --  7: 0000000000000000000000000000000000000000000000000000000000000002
    --  8: 0000000000000000000000000000000000000000000000000000000000000003
    --  9: 0000000000000000000000000000000000000000000000000000000000000004
    -- 10: 0000000000000000000000000000000000000000000000000000000000000005
    -- 11: 0000000000000000000000000000000000000000000000000000000000000006
    -- 12: 000000000000000000000000000000000000000000000000000000000000000a
      --2 : 13 : 6
      --  0:  (uint128)
      --  1:  (uint128)
      --  0: 0000000000000000000000000000000000000000000000000000000000000001
      --  1: 0000000000000000000000000000000000000000000000000000000000000002
      --  2: 0000000000000000000000000000000000000000000000000000000000000003
      --  3: 0000000000000000000000000000000000000000000000000000000000000004
      --  4: 0000000000000000000000000000000000000000000000000000000000000005
      --  5: 0000000000000000000000000000000000000000000000000000000000000006
      --  6: 0000000000000000000000000000000000000000000000000000000000000001 <---
      --  7: 0000000000000000000000000000000000000000000000000000000000000002
      --  8: 0000000000000000000000000000000000000000000000000000000000000003
      --  9: 0000000000000000000000000000000000000000000000000000000000000004
      -- 10: 0000000000000000000000000000000000000000000000000000000000000005
      -- 11: 0000000000000000000000000000000000000000000000000000000000000006
      -- 12: 000000000000000000000000000000000000000000000000000000000000000a
      --2 : 13 : 7
      --  0:  (uint128) = 1
      --  1:  (uint128)
      --  0: 0000000000000000000000000000000000000000000000000000000000000001
      --  1: 0000000000000000000000000000000000000000000000000000000000000002
      --  2: 0000000000000000000000000000000000000000000000000000000000000003
      --  3: 0000000000000000000000000000000000000000000000000000000000000004
      --  4: 0000000000000000000000000000000000000000000000000000000000000005
      --  5: 0000000000000000000000000000000000000000000000000000000000000006
      --  6: 0000000000000000000000000000000000000000000000000000000000000001
      --  7: 0000000000000000000000000000000000000000000000000000000000000002 <---
      --  8: 0000000000000000000000000000000000000000000000000000000000000003
      --  9: 0000000000000000000000000000000000000000000000000000000000000004
      -- 10: 0000000000000000000000000000000000000000000000000000000000000005
      -- 11: 0000000000000000000000000000000000000000000000000000000000000006
      -- 12: 000000000000000000000000000000000000000000000000000000000000000a
    --3 : 13 : 8
    --  0:  (uint128[2]) = [1, 2]
    --  1:  (uint128[2])
    --  2:  (uint128[2])
    --  0: 0000000000000000000000000000000000000000000000000000000000000001
    --  1: 0000000000000000000000000000000000000000000000000000000000000002
    --  2: 0000000000000000000000000000000000000000000000000000000000000003
    --  3: 0000000000000000000000000000000000000000000000000000000000000004
    --  4: 0000000000000000000000000000000000000000000000000000000000000005
    --  5: 0000000000000000000000000000000000000000000000000000000000000006
    --  6: 0000000000000000000000000000000000000000000000000000000000000001
    --  7: 0000000000000000000000000000000000000000000000000000000000000002
    --  8: 0000000000000000000000000000000000000000000000000000000000000003 <---
    --  9: 0000000000000000000000000000000000000000000000000000000000000004
    -- 10: 0000000000000000000000000000000000000000000000000000000000000005
    -- 11: 0000000000000000000000000000000000000000000000000000000000000006
    -- 12: 000000000000000000000000000000000000000000000000000000000000000a
      --2 : 13 : 8
      --  0:  (uint128)
      --  1:  (uint128)
      --  0: 0000000000000000000000000000000000000000000000000000000000000001
      --  1: 0000000000000000000000000000000000000000000000000000000000000002
      --  2: 0000000000000000000000000000000000000000000000000000000000000003
      --  3: 0000000000000000000000000000000000000000000000000000000000000004
      --  4: 0000000000000000000000000000000000000000000000000000000000000005
      --  5: 0000000000000000000000000000000000000000000000000000000000000006
      --  6: 0000000000000000000000000000000000000000000000000000000000000001
      --  7: 0000000000000000000000000000000000000000000000000000000000000002
      --  8: 0000000000000000000000000000000000000000000000000000000000000003 <---
      --  9: 0000000000000000000000000000000000000000000000000000000000000004
      -- 10: 0000000000000000000000000000000000000000000000000000000000000005
      -- 11: 0000000000000000000000000000000000000000000000000000000000000006
      -- 12: 000000000000000000000000000000000000000000000000000000000000000a
      --2 : 13 : 9
      --  0:  (uint128) = 3
      --  1:  (uint128)
      --  0: 0000000000000000000000000000000000000000000000000000000000000001
      --  1: 0000000000000000000000000000000000000000000000000000000000000002
      --  2: 0000000000000000000000000000000000000000000000000000000000000003
      --  3: 0000000000000000000000000000000000000000000000000000000000000004
      --  4: 0000000000000000000000000000000000000000000000000000000000000005
      --  5: 0000000000000000000000000000000000000000000000000000000000000006
      --  6: 0000000000000000000000000000000000000000000000000000000000000001
      --  7: 0000000000000000000000000000000000000000000000000000000000000002
      --  8: 0000000000000000000000000000000000000000000000000000000000000003
      --  9: 0000000000000000000000000000000000000000000000000000000000000004 <---
      -- 10: 0000000000000000000000000000000000000000000000000000000000000005
      -- 11: 0000000000000000000000000000000000000000000000000000000000000006
      -- 12: 000000000000000000000000000000000000000000000000000000000000000a
    --3 : 13 : 10
    --  0:  (uint128[2]) = [1, 2]
    --  1:  (uint128[2]) = [3, 4]
    --  2:  (uint128[2])
    --  0: 0000000000000000000000000000000000000000000000000000000000000001
    --  1: 0000000000000000000000000000000000000000000000000000000000000002
    --  2: 0000000000000000000000000000000000000000000000000000000000000003
    --  3: 0000000000000000000000000000000000000000000000000000000000000004
    --  4: 0000000000000000000000000000000000000000000000000000000000000005
    --  5: 0000000000000000000000000000000000000000000000000000000000000006
    --  6: 0000000000000000000000000000000000000000000000000000000000000001
    --  7: 0000000000000000000000000000000000000000000000000000000000000002
    --  8: 0000000000000000000000000000000000000000000000000000000000000003
    --  9: 0000000000000000000000000000000000000000000000000000000000000004
    -- 10: 0000000000000000000000000000000000000000000000000000000000000005 <---
    -- 11: 0000000000000000000000000000000000000000000000000000000000000006
    -- 12: 000000000000000000000000000000000000000000000000000000000000000a
      --2 : 13 : 10
      --  0:  (uint128)
      --  1:  (uint128)
      --  0: 0000000000000000000000000000000000000000000000000000000000000001
      --  1: 0000000000000000000000000000000000000000000000000000000000000002
      --  2: 0000000000000000000000000000000000000000000000000000000000000003
      --  3: 0000000000000000000000000000000000000000000000000000000000000004
      --  4: 0000000000000000000000000000000000000000000000000000000000000005
      --  5: 0000000000000000000000000000000000000000000000000000000000000006
      --  6: 0000000000000000000000000000000000000000000000000000000000000001
      --  7: 0000000000000000000000000000000000000000000000000000000000000002
      --  8: 0000000000000000000000000000000000000000000000000000000000000003
      --  9: 0000000000000000000000000000000000000000000000000000000000000004
      -- 10: 0000000000000000000000000000000000000000000000000000000000000005 <---
      -- 11: 0000000000000000000000000000000000000000000000000000000000000006
      -- 12: 000000000000000000000000000000000000000000000000000000000000000a
      --2 : 13 : 11
      --  0:  (uint128) = 5
      --  1:  (uint128)
      --  0: 0000000000000000000000000000000000000000000000000000000000000001
      --  1: 0000000000000000000000000000000000000000000000000000000000000002
      --  2: 0000000000000000000000000000000000000000000000000000000000000003
      --  3: 0000000000000000000000000000000000000000000000000000000000000004
      --  4: 0000000000000000000000000000000000000000000000000000000000000005
      --  5: 0000000000000000000000000000000000000000000000000000000000000006
      --  6: 0000000000000000000000000000000000000000000000000000000000000001
      --  7: 0000000000000000000000000000000000000000000000000000000000000002
      --  8: 0000000000000000000000000000000000000000000000000000000000000003
      --  9: 0000000000000000000000000000000000000000000000000000000000000004
      -- 10: 0000000000000000000000000000000000000000000000000000000000000005
      -- 11: 0000000000000000000000000000000000000000000000000000000000000006 <---
      -- 12: 000000000000000000000000000000000000000000000000000000000000000a
--2 : 13 : 12
--  0: val_0 (uint128[2][3][2]) = [[[1, 2], [3, 4], [5, 6]], [[1, 2], [3, 4], [5, 6]]]
--  1: val_1 (uint256)
--  0: 0000000000000000000000000000000000000000000000000000000000000001
--  1: 0000000000000000000000000000000000000000000000000000000000000002
--  2: 0000000000000000000000000000000000000000000000000000000000000003
--  3: 0000000000000000000000000000000000000000000000000000000000000004
--  4: 0000000000000000000000000000000000000000000000000000000000000005
--  5: 0000000000000000000000000000000000000000000000000000000000000006
--  6: 0000000000000000000000000000000000000000000000000000000000000001
--  7: 0000000000000000000000000000000000000000000000000000000000000002
--  8: 0000000000000000000000000000000000000000000000000000000000000003
--  9: 0000000000000000000000000000000000000000000000000000000000000004
-- 10: 0000000000000000000000000000000000000000000000000000000000000005
-- 11: 0000000000000000000000000000000000000000000000000000000000000006
-- 12: 000000000000000000000000000000000000000000000000000000000000000a <---
expected: --[[[1, 2], [3, 4], [5, 6]], [[1, 2], [3, 4], [5, 6]]], 10--?
result:   --[[[1, 2], [3, 4], [5, 6]], [[1, 2], [3, 4], [5, 6]]], 10--? 1
testName: decoding (uint128[2][3][2], uint) two sets of three sets of two
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.065 test_65                          ==> 
line: decode|decoding uint[2] one set of two|function baz(uint[2]     )|0x000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000003|[1, 2]
testType: decode
testName: decoding uint[2] one set of two
signature: function baz(uint[2]     ) : function baz(uint256[2])

--------------------------------------------------
--1 : 3 : 0
--  0: val_0 (uint256[2])
--  0: 0000000000000000000000000000000000000000000000000000000000000001 <---
--  1: 0000000000000000000000000000000000000000000000000000000000000002
--  2: 0000000000000000000000000000000000000000000000000000000000000003
  --2 : 3 : 0
  --  0:  (uint256)
  --  1:  (uint256)
  --  0: 0000000000000000000000000000000000000000000000000000000000000001 <---
  --  1: 0000000000000000000000000000000000000000000000000000000000000002
  --  2: 0000000000000000000000000000000000000000000000000000000000000003
  --2 : 3 : 1
  --  0:  (uint256) = 1
  --  1:  (uint256)
  --  0: 0000000000000000000000000000000000000000000000000000000000000001
  --  1: 0000000000000000000000000000000000000000000000000000000000000002 <---
  --  2: 0000000000000000000000000000000000000000000000000000000000000003
expected: --[1, 2]--?
result:   --[1, 2]--? 1
testName: decoding uint[2] one set of two
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.066 test_66                          ==> 
line: decode|decoding address|function baz(address)|0x000000000000000000000000bb9bc244d798123fde783fcc1c72d3bb8c189413|0xbb9bc244d798123fde783fcc1c72d3bb8c189413
testType: decode
testName: decoding address
signature: function baz(address) : function baz(address)

--------------------------------------------------
expected: --0xbb9bc244d798123fde783fcc1c72d3bb8c189413--?
result:   --0xbb9bc244d798123fde783fcc1c72d3bb8c189413--? 1
testName: decoding address
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.067 test_67                          ==> 
line: decode|decoding address,address|function baz(  address,address )|0x000000000000000000000000bb9bc244d798123fde783fcc1c72d3bb8c189413000000000000000000000000b9e7f8568e08d5659f5d29c4997173d84cdf2607|0xbb9bc244d798123fde783fcc1c72d3bb8c189413, 0xb9e7f8568e08d5659f5d29c4997173d84cdf2607
testType: decode
testName: decoding address,address
signature: function baz(  address,address ) : function baz(address,address)

--------------------------------------------------
expected: --0xbb9bc244d798123fde783fcc1c72d3bb8c189413, 0xb9e7f8568e08d5659f5d29c4997173d84cdf2607--?
result:   --0xbb9bc244d798123fde783fcc1c72d3bb8c189413, 0xb9e7f8568e08d5659f5d29c4997173d84cdf2607--? 1
testName: decoding address,address
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.068 test_68                          ==> 
line: decode|decoding address[] one set of two addresses|function baz(address[])|0x00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000002000000000000000000000000bb9bc244d798123fde783fcc1c72d3bb8c189413000000000000000000000000b9e7f8568e08d5659f5d29c4997173d84cdf2607|[0xbb9bc244d798123fde783fcc1c72d3bb8c189413, 0xb9e7f8568e08d5659f5d29c4997173d84cdf2607]
testType: decode
testName: decoding address[] one set of two addresses
signature: function baz(address[]) : function baz(address[])

--------------------------------------------------
--1 : 4 : 0
--  0: val_0 (address[])
--  0: 0000000000000000000000000000000000000000000000000000000000000020 <---
--  1: 0000000000000000000000000000000000000000000000000000000000000002
--  2: 000000000000000000000000bb9bc244d798123fde783fcc1c72d3bb8c189413
--  3: 000000000000000000000000b9e7f8568e08d5659f5d29c4997173d84cdf2607
  --1 : 4 : 2 : 1
  --  0:  (address[2])
  --      address[][]
  --  0: 0000000000000000000000000000000000000000000000000000000000000020
  --  1: 0000000000000000000000000000000000000000000000000000000000000002 <===
  --  2: 000000000000000000000000bb9bc244d798123fde783fcc1c72d3bb8c189413 <---
  --  3: 000000000000000000000000b9e7f8568e08d5659f5d29c4997173d84cdf2607
    --2 : 4 : 2 : 1
    --  0:  (address)
    --  1:  (address)
    --  0: 0000000000000000000000000000000000000000000000000000000000000020
    --  1: 0000000000000000000000000000000000000000000000000000000000000002 <===
    --  2: 000000000000000000000000bb9bc244d798123fde783fcc1c72d3bb8c189413 <---
    --  3: 000000000000000000000000b9e7f8568e08d5659f5d29c4997173d84cdf2607
    --2 : 4 : 3 : 1
    --  0:  (address) = 0xbb9bc244d798123fde783fcc1c72d3bb8c189413
    --  1:  (address)
    --  0: 0000000000000000000000000000000000000000000000000000000000000020
    --  1: 0000000000000000000000000000000000000000000000000000000000000002 <===
    --  2: 000000000000000000000000bb9bc244d798123fde783fcc1c72d3bb8c189413
    --  3: 000000000000000000000000b9e7f8568e08d5659f5d29c4997173d84cdf2607 <---
expected: --[0xbb9bc244d798123fde783fcc1c72d3bb8c189413, 0xb9e7f8568e08d5659f5d29c4997173d84cdf2607]--?
result:   --[0xbb9bc244d798123fde783fcc1c72d3bb8c189413, 0xb9e7f8568e08d5659f5d29c4997173d84cdf2607]--? 1
testName: decoding address[] one set of two addresses
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.069 test_69                          ==> 
line: decode|decoding address[2] one set of two addresses|function baz(address[2])|0x000000000000000000000000bb9bc244d798123fde783fcc1c72d3bb8c189413000000000000000000000000b9e7f8568e08d5659f5d29c4997173d84cdf2607|[0xbb9bc244d798123fde783fcc1c72d3bb8c189413, 0xb9e7f8568e08d5659f5d29c4997173d84cdf2607]
testType: decode
testName: decoding address[2] one set of two addresses
signature: function baz(address[2]) : function baz(address[2])

--------------------------------------------------
--1 : 2 : 0
--  0: val_0 (address[2])
--  0: 000000000000000000000000bb9bc244d798123fde783fcc1c72d3bb8c189413 <---
--  1: 000000000000000000000000b9e7f8568e08d5659f5d29c4997173d84cdf2607
  --2 : 2 : 0
  --  0:  (address)
  --  1:  (address)
  --  0: 000000000000000000000000bb9bc244d798123fde783fcc1c72d3bb8c189413 <---
  --  1: 000000000000000000000000b9e7f8568e08d5659f5d29c4997173d84cdf2607
  --2 : 2 : 1
  --  0:  (address) = 0xbb9bc244d798123fde783fcc1c72d3bb8c189413
  --  1:  (address)
  --  0: 000000000000000000000000bb9bc244d798123fde783fcc1c72d3bb8c189413
  --  1: 000000000000000000000000b9e7f8568e08d5659f5d29c4997173d84cdf2607 <---
expected: --[0xbb9bc244d798123fde783fcc1c72d3bb8c189413, 0xb9e7f8568e08d5659f5d29c4997173d84cdf2607]--?
result:   --[0xbb9bc244d798123fde783fcc1c72d3bb8c189413, 0xb9e7f8568e08d5659f5d29c4997173d84cdf2607]--? 1
testName: decoding address[2] one set of two addresses
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.070 test_70                          ==> 
line: decode|decoding uint256[], uint[], uint256[] three sets of two items each|function baz(uint256[] a,uint[] b,uint256[] c)|0x000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000012000000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000500000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000015af1d78b58c400000000000000000000000000000000000000000000000000015af1d78b58c4000000000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000001bc16d674ec800000000000000000000000000000000000000000000000000001bc16d674ec80000|[6, 5], [25000000000000000000, 25000000000000000000], [2000000000000000000, 2000000000000000000]
testType: decode
testName: decoding uint256[], uint[], uint256[] three sets of two items each
signature: function baz(uint256[] a,uint[] b,uint256[] c) : function baz(uint256[],uint256[],uint256[])

--------------------------------------------------
--3 : 12 : 0
--  0: a (uint256[])
--  1: b (uint256[])
--  2: c (uint256[])
--  0: 0000000000000000000000000000000000000000000000000000000000000060 <---
--  1: 00000000000000000000000000000000000000000000000000000000000000c0
--  2: 0000000000000000000000000000000000000000000000000000000000000120
--  3: 0000000000000000000000000000000000000000000000000000000000000002
--  4: 0000000000000000000000000000000000000000000000000000000000000006
--  5: 0000000000000000000000000000000000000000000000000000000000000005
--  6: 0000000000000000000000000000000000000000000000000000000000000002
--  7: 0000000000000000000000000000000000000000000000015af1d78b58c40000
--  8: 0000000000000000000000000000000000000000000000015af1d78b58c40000
--  9: 0000000000000000000000000000000000000000000000000000000000000002
-- 10: 0000000000000000000000000000000000000000000000001bc16d674ec80000
-- 11: 0000000000000000000000000000000000000000000000001bc16d674ec80000
  --1 : 12 : 4 : 3
  --  0:  (uint256[2])
  --      uint256[][]
  --  0: 0000000000000000000000000000000000000000000000000000000000000060
  --  1: 00000000000000000000000000000000000000000000000000000000000000c0
  --  2: 0000000000000000000000000000000000000000000000000000000000000120
  --  3: 0000000000000000000000000000000000000000000000000000000000000002 <===
  --  4: 0000000000000000000000000000000000000000000000000000000000000006 <---
  --  5: 0000000000000000000000000000000000000000000000000000000000000005
  --  6: 0000000000000000000000000000000000000000000000000000000000000002
  --  7: 0000000000000000000000000000000000000000000000015af1d78b58c40000
  --  8: 0000000000000000000000000000000000000000000000015af1d78b58c40000
  --  9: 0000000000000000000000000000000000000000000000000000000000000002
  -- 10: 0000000000000000000000000000000000000000000000001bc16d674ec80000
  -- 11: 0000000000000000000000000000000000000000000000001bc16d674ec80000
    --2 : 12 : 4 : 3
    --  0:  (uint256)
    --  1:  (uint256)
    --  0: 0000000000000000000000000000000000000000000000000000000000000060
    --  1: 00000000000000000000000000000000000000000000000000000000000000c0
    --  2: 0000000000000000000000000000000000000000000000000000000000000120
    --  3: 0000000000000000000000000000000000000000000000000000000000000002 <===
    --  4: 0000000000000000000000000000000000000000000000000000000000000006 <---
    --  5: 0000000000000000000000000000000000000000000000000000000000000005
    --  6: 0000000000000000000000000000000000000000000000000000000000000002
    --  7: 0000000000000000000000000000000000000000000000015af1d78b58c40000
    --  8: 0000000000000000000000000000000000000000000000015af1d78b58c40000
    --  9: 0000000000000000000000000000000000000000000000000000000000000002
    -- 10: 0000000000000000000000000000000000000000000000001bc16d674ec80000
    -- 11: 0000000000000000000000000000000000000000000000001bc16d674ec80000
    --2 : 12 : 5 : 3
    --  0:  (uint256) = 6
    --  1:  (uint256)
    --  0: 0000000000000000000000000000000000000000000000000000000000000060
    --  1: 00000000000000000000000000000000000000000000000000000000000000c0
    --  2: 0000000000000000000000000000000000000000000000000000000000000120
    --  3: 0000000000000000000000000000000000000000000000000000000000000002 <===
    --  4: 0000000000000000000000000000000000000000000000000000000000000006
    --  5: 0000000000000000000000000000000000000000000000000000000000000005 <---
    --  6: 0000000000000000000000000000000000000000000000000000000000000002
    --  7: 0000000000000000000000000000000000000000000000015af1d78b58c40000
    --  8: 0000000000000000000000000000000000000000000000015af1d78b58c40000
    --  9: 0000000000000000000000000000000000000000000000000000000000000002
    -- 10: 0000000000000000000000000000000000000000000000001bc16d674ec80000
    -- 11: 0000000000000000000000000000000000000000000000001bc16d674ec80000
--3 : 12 : 1
--  0: a (uint256[]) = [6, 5]
--  1: b (uint256[])
--  2: c (uint256[])
--  0: 0000000000000000000000000000000000000000000000000000000000000060
--  1: 00000000000000000000000000000000000000000000000000000000000000c0 <---
--  2: 0000000000000000000000000000000000000000000000000000000000000120
--  3: 0000000000000000000000000000000000000000000000000000000000000002
--  4: 0000000000000000000000000000000000000000000000000000000000000006
--  5: 0000000000000000000000000000000000000000000000000000000000000005
--  6: 0000000000000000000000000000000000000000000000000000000000000002
--  7: 0000000000000000000000000000000000000000000000015af1d78b58c40000
--  8: 0000000000000000000000000000000000000000000000015af1d78b58c40000
--  9: 0000000000000000000000000000000000000000000000000000000000000002
-- 10: 0000000000000000000000000000000000000000000000001bc16d674ec80000
-- 11: 0000000000000000000000000000000000000000000000001bc16d674ec80000
  --1 : 12 : 7 : 6
  --  0:  (uint256[2])
  --      uint256[][]
  --  0: 0000000000000000000000000000000000000000000000000000000000000060
  --  1: 00000000000000000000000000000000000000000000000000000000000000c0
  --  2: 0000000000000000000000000000000000000000000000000000000000000120
  --  3: 0000000000000000000000000000000000000000000000000000000000000002
  --  4: 0000000000000000000000000000000000000000000000000000000000000006
  --  5: 0000000000000000000000000000000000000000000000000000000000000005
  --  6: 0000000000000000000000000000000000000000000000000000000000000002 <===
  --  7: 0000000000000000000000000000000000000000000000015af1d78b58c40000 <---
  --  8: 0000000000000000000000000000000000000000000000015af1d78b58c40000
  --  9: 0000000000000000000000000000000000000000000000000000000000000002
  -- 10: 0000000000000000000000000000000000000000000000001bc16d674ec80000
  -- 11: 0000000000000000000000000000000000000000000000001bc16d674ec80000
    --2 : 12 : 7 : 6
    --  0:  (uint256)
    --  1:  (uint256)
    --  0: 0000000000000000000000000000000000000000000000000000000000000060
    --  1: 00000000000000000000000000000000000000000000000000000000000000c0
    --  2: 0000000000000000000000000000000000000000000000000000000000000120
    --  3: 0000000000000000000000000000000000000000000000000000000000000002
    --  4: 0000000000000000000000000000000000000000000000000000000000000006
    --  5: 0000000000000000000000000000000000000000000000000000000000000005
    --  6: 0000000000000000000000000000000000000000000000000000000000000002 <===
    --  7: 0000000000000000000000000000000000000000000000015af1d78b58c40000 <---
    --  8: 0000000000000000000000000000000000000000000000015af1d78b58c40000
    --  9: 0000000000000000000000000000000000000000000000000000000000000002
    -- 10: 0000000000000000000000000000000000000000000000001bc16d674ec80000
    -- 11: 0000000000000000000000000000000000000000000000001bc16d674ec80000
    --2 : 12 : 8 : 6
    --  0:  (uint256) = 25000000000000000000
    --  1:  (uint256)
    --  0: 0000000000000000000000000000000000000000000000000000000000000060
    --  1: 00000000000000000000000000000000000000000000000000000000000000c0
    --  2: 0000000000000000000000000000000000000000000000000000000000000120
    --  3: 0000000000000000000000000000000000000000000000000000000000000002
    --  4: 0000000000000000000000000000000000000000000000000000000000000006
    --  5: 0000000000000000000000000000000000000000000000000000000000000005
    --  6: 0000000000000000000000000000000000000000000000000000000000000002 <===
    --  7: 0000000000000000000000000000000000000000000000015af1d78b58c40000
    --  8: 0000000000000000000000000000000000000000000000015af1d78b58c40000 <---
    --  9: 0000000000000000000000000000000000000000000000000000000000000002
    -- 10: 0000000000000000000000000000000000000000000000001bc16d674ec80000
    -- 11: 0000000000000000000000000000000000000000000000001bc16d674ec80000
--3 : 12 : 2
--  0: a (uint256[]) = [6, 5]
--  1: b (uint256[]) = [25000000000000000000, 25000000000000000000]
--  2: c (uint256[])
--  0: 0000000000000000000000000000000000000000000000000000000000000060
--  1: 00000000000000000000000000000000000000000000000000000000000000c0
--  2: 0000000000000000000000000000000000000000000000000000000000000120 <---
--  3: 0000000000000000000000000000000000000000000000000000000000000002
--  4: 0000000000000000000000000000000000000000000000000000000000000006
--  5: 0000000000000000000000000000000000000000000000000000000000000005
--  6: 0000000000000000000000000000000000000000000000000000000000000002
--  7: 0000000000000000000000000000000000000000000000015af1d78b58c40000
--  8: 0000000000000000000000000000000000000000000000015af1d78b58c40000
--  9: 0000000000000000000000000000000000000000000000000000000000000002
-- 10: 0000000000000000000000000000000000000000000000001bc16d674ec80000
-- 11: 0000000000000000000000000000000000000000000000001bc16d674ec80000
  --1 : 12 : 10 : 9
  --  0:  (uint256[2])
  --      uint256[][]
  --  0: 0000000000000000000000000000000000000000000000000000000000000060
  --  1: 00000000000000000000000000000000000000000000000000000000000000c0
  --  2: 0000000000000000000000000000000000000000000000000000000000000120
  --  3: 0000000000000000000000000000000000000000000000000000000000000002
  --  4: 0000000000000000000000000000000000000000000000000000000000000006
  --  5: 0000000000000000000000000000000000000000000000000000000000000005
  --  6: 0000000000000000000000000000000000000000000000000000000000000002
  --  7: 0000000000000000000000000000000000000000000000015af1d78b58c40000
  --  8: 0000000000000000000000000000000000000000000000015af1d78b58c40000
  --  9: 0000000000000000000000000000000000000000000000000000000000000002 <===
  -- 10: 0000000000000000000000000000000000000000000000001bc16d674ec80000 <---
  -- 11: 0000000000000000000000000000000000000000000000001bc16d674ec80000
    --2 : 12 : 10 : 9
    --  0:  (uint256)
    --  1:  (uint256)
    --  0: 0000000000000000000000000000000000000000000000000000000000000060
    --  1: 00000000000000000000000000000000000000000000000000000000000000c0
    --  2: 0000000000000000000000000000000000000000000000000000000000000120
    --  3: 0000000000000000000000000000000000000000000000000000000000000002
    --  4: 0000000000000000000000000000000000000000000000000000000000000006
    --  5: 0000000000000000000000000000000000000000000000000000000000000005
    --  6: 0000000000000000000000000000000000000000000000000000000000000002
    --  7: 0000000000000000000000000000000000000000000000015af1d78b58c40000
    --  8: 0000000000000000000000000000000000000000000000015af1d78b58c40000
    --  9: 0000000000000000000000000000000000000000000000000000000000000002 <===
    -- 10: 0000000000000000000000000000000000000000000000001bc16d674ec80000 <---
    -- 11: 0000000000000000000000000000000000000000000000001bc16d674ec80000
    --2 : 12 : 11 : 9
    --  0:  (uint256) = 2000000000000000000
    --  1:  (uint256)
    --  0: 0000000000000000000000000000000000000000000000000000000000000060
    --  1: 00000000000000000000000000000000000000000000000000000000000000c0
    --  2: 0000000000000000000000000000000000000000000000000000000000000120
    --  3: 0000000000000000000000000000000000000000000000000000000000000002
    --  4: 0000000000000000000000000000000000000000000000000000000000000006
    --  5: 0000000000000000000000000000000000000000000000000000000000000005
    --  6: 0000000000000000000000000000000000000000000000000000000000000002
    --  7: 0000000000000000000000000000000000000000000000015af1d78b58c40000
    --  8: 0000000000000000000000000000000000000000000000015af1d78b58c40000
    --  9: 0000000000000000000000000000000000000000000000000000000000000002 <===
    -- 10: 0000000000000000000000000000000000000000000000001bc16d674ec80000
    -- 11: 0000000000000000000000000000000000000000000000001bc16d674ec80000 <---
expected: --[6, 5], [25000000000000000000, 25000000000000000000], [2000000000000000000, 2000000000000000000]--?
result:   --[6, 5], [25000000000000000000, 25000000000000000000], [2000000000000000000, 2000000000000000000]--? 1
testName: decoding uint256[], uint[], uint256[] three sets of two items each
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.071 test_71                          ==> 
line: decode|decoding bool[] one set of two|function baz(bool[])|0x0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001|[false, true]
testType: decode
testName: decoding bool[] one set of two
signature: function baz(bool[]) : function baz(bool[])

--------------------------------------------------
--1 : 4 : 0
--  0: val_0 (bool[])
--  0: 0000000000000000000000000000000000000000000000000000000000000020 <---
--  1: 0000000000000000000000000000000000000000000000000000000000000002
--  2: 0000000000000000000000000000000000000000000000000000000000000000
--  3: 0000000000000000000000000000000000000000000000000000000000000001
  --1 : 4 : 2 : 1
  --  0:  (bool[2])
  --      bool[][]
  --  0: 0000000000000000000000000000000000000000000000000000000000000020
  --  1: 0000000000000000000000000000000000000000000000000000000000000002 <===
  --  2: 0000000000000000000000000000000000000000000000000000000000000000 <---
  --  3: 0000000000000000000000000000000000000000000000000000000000000001
    --2 : 4 : 2 : 1
    --  0:  (bool)
    --  1:  (bool)
    --  0: 0000000000000000000000000000000000000000000000000000000000000020
    --  1: 0000000000000000000000000000000000000000000000000000000000000002 <===
    --  2: 0000000000000000000000000000000000000000000000000000000000000000 <---
    --  3: 0000000000000000000000000000000000000000000000000000000000000001
    --2 : 4 : 3 : 1
    --  0:  (bool) = false
    --  1:  (bool)
    --  0: 0000000000000000000000000000000000000000000000000000000000000020
    --  1: 0000000000000000000000000000000000000000000000000000000000000002 <===
    --  2: 0000000000000000000000000000000000000000000000000000000000000000
    --  3: 0000000000000000000000000000000000000000000000000000000000000001 <---
expected: --[false, true]--?
result:   --[false, true]--? 1
testName: decoding bool[] one set of two
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.072 test_72                          ==> 
line: decode|decoding bool[], address[] one set of two bools and one set of three addrs|function baz(bool[], address[])|0x000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000003000000000000000000000000bb9bc244d798123fde783fcc1c72d3bb8c189413000000000000000000000000b9e7f8568e08d5659f5d29c4997173d84cdf2607000000000000000000000000bb9bc244d798123fde783fcc1c72d3bb8c189413|[false, true], [0xbb9bc244d798123fde783fcc1c72d3bb8c189413, 0xb9e7f8568e08d5659f5d29c4997173d84cdf2607, 0xbb9bc244d798123fde783fcc1c72d3bb8c189413]
testType: decode
testName: decoding bool[], address[] one set of two bools and one set of three addrs
signature: function baz(bool[], address[]) : function baz(bool[],address[])

--------------------------------------------------
--2 : 9 : 0
--  0: val_0 (bool[])
--  1: val_1 (address[])
--  0: 0000000000000000000000000000000000000000000000000000000000000040 <---
--  1: 00000000000000000000000000000000000000000000000000000000000000a0
--  2: 0000000000000000000000000000000000000000000000000000000000000002
--  3: 0000000000000000000000000000000000000000000000000000000000000000
--  4: 0000000000000000000000000000000000000000000000000000000000000001
--  5: 0000000000000000000000000000000000000000000000000000000000000003
--  6: 000000000000000000000000bb9bc244d798123fde783fcc1c72d3bb8c189413
--  7: 000000000000000000000000b9e7f8568e08d5659f5d29c4997173d84cdf2607
--  8: 000000000000000000000000bb9bc244d798123fde783fcc1c72d3bb8c189413
  --1 : 9 : 3 : 2
  --  0:  (bool[2])
  --      bool[][]
  --  0: 0000000000000000000000000000000000000000000000000000000000000040
  --  1: 00000000000000000000000000000000000000000000000000000000000000a0
  --  2: 0000000000000000000000000000000000000000000000000000000000000002 <===
  --  3: 0000000000000000000000000000000000000000000000000000000000000000 <---
  --  4: 0000000000000000000000000000000000000000000000000000000000000001
  --  5: 0000000000000000000000000000000000000000000000000000000000000003
  --  6: 000000000000000000000000bb9bc244d798123fde783fcc1c72d3bb8c189413
  --  7: 000000000000000000000000b9e7f8568e08d5659f5d29c4997173d84cdf2607
  --  8: 000000000000000000000000bb9bc244d798123fde783fcc1c72d3bb8c189413
    --2 : 9 : 3 : 2
    --  0:  (bool)
    --  1:  (bool)
    --  0: 0000000000000000000000000000000000000000000000000000000000000040
    --  1: 00000000000000000000000000000000000000000000000000000000000000a0
    --  2: 0000000000000000000000000000000000000000000000000000000000000002 <===
    --  3: 0000000000000000000000000000000000000000000000000000000000000000 <---
    --  4: 0000000000000000000000000000000000000000000000000000000000000001
    --  5: 0000000000000000000000000000000000000000000000000000000000000003
    --  6: 000000000000000000000000bb9bc244d798123fde783fcc1c72d3bb8c189413
    --  7: 000000000000000000000000b9e7f8568e08d5659f5d29c4997173d84cdf2607
    --  8: 000000000000000000000000bb9bc244d798123fde783fcc1c72d3bb8c189413
    --2 : 9 : 4 : 2
    --  0:  (bool) = false
    --  1:  (bool)
    --  0: 0000000000000000000000000000000000000000000000000000000000000040
    --  1: 00000000000000000000000000000000000000000000000000000000000000a0
    --  2: 0000000000000000000000000000000000000000000000000000000000000002 <===
    --  3: 0000000000000000000000000000000000000000000000000000000000000000
    --  4: 0000000000000000000000000000000000000000000000000000000000000001 <---
    --  5: 0000000000000000000000000000000000000000000000000000000000000003
    --  6: 000000000000000000000000bb9bc244d798123fde783fcc1c72d3bb8c189413
    --  7: 000000000000000000000000b9e7f8568e08d5659f5d29c4997173d84cdf2607
    --  8: 000000000000000000000000bb9bc244d798123fde783fcc1c72d3bb8c189413
--2 : 9 : 1
--  0: val_0 (bool[]) = [false, true]
--  1: val_1 (address[])
--  0: 0000000000000000000000000000000000000000000000000000000000000040
--  1: 00000000000000000000000000000000000000000000000000000000000000a0 <---
--  2: 0000000000000000000000000000000000000000000000000000000000000002
--  3: 0000000000000000000000000000000000000000000000000000000000000000
--  4: 0000000000000000000000000000000000000000000000000000000000000001
--  5: 0000000000000000000000000000000000000000000000000000000000000003
--  6: 000000000000000000000000bb9bc244d798123fde783fcc1c72d3bb8c189413
--  7: 000000000000000000000000b9e7f8568e08d5659f5d29c4997173d84cdf2607
--  8: 000000000000000000000000bb9bc244d798123fde783fcc1c72d3bb8c189413
  --1 : 9 : 6 : 5
  --  0:  (address[3])
  --      address[][]
  --  0: 0000000000000000000000000000000000000000000000000000000000000040
  --  1: 00000000000000000000000000000000000000000000000000000000000000a0
  --  2: 0000000000000000000000000000000000000000000000000000000000000002
  --  3: 0000000000000000000000000000000000000000000000000000000000000000
  --  4: 0000000000000000000000000000000000000000000000000000000000000001
  --  5: 0000000000000000000000000000000000000000000000000000000000000003 <===
  --  6: 000000000000000000000000bb9bc244d798123fde783fcc1c72d3bb8c189413 <---
  --  7: 000000000000000000000000b9e7f8568e08d5659f5d29c4997173d84cdf2607
  --  8: 000000000000000000000000bb9bc244d798123fde783fcc1c72d3bb8c189413
    --3 : 9 : 6 : 5
    --  0:  (address)
    --  1:  (address)
    --  2:  (address)
    --  0: 0000000000000000000000000000000000000000000000000000000000000040
    --  1: 00000000000000000000000000000000000000000000000000000000000000a0
    --  2: 0000000000000000000000000000000000000000000000000000000000000002
    --  3: 0000000000000000000000000000000000000000000000000000000000000000
    --  4: 0000000000000000000000000000000000000000000000000000000000000001
    --  5: 0000000000000000000000000000000000000000000000000000000000000003 <===
    --  6: 000000000000000000000000bb9bc244d798123fde783fcc1c72d3bb8c189413 <---
    --  7: 000000000000000000000000b9e7f8568e08d5659f5d29c4997173d84cdf2607
    --  8: 000000000000000000000000bb9bc244d798123fde783fcc1c72d3bb8c189413
    --3 : 9 : 7 : 5
    --  0:  (address) = 0xbb9bc244d798123fde783fcc1c72d3bb8c189413
    --  1:  (address)
    --  2:  (address)
    --  0: 0000000000000000000000000000000000000000000000000000000000000040
    --  1: 00000000000000000000000000000000000000000000000000000000000000a0
    --  2: 0000000000000000000000000000000000000000000000000000000000000002
    --  3: 0000000000000000000000000000000000000000000000000000000000000000
    --  4: 0000000000000000000000000000000000000000000000000000000000000001
    --  5: 0000000000000000000000000000000000000000000000000000000000000003 <===
    --  6: 000000000000000000000000bb9bc244d798123fde783fcc1c72d3bb8c189413
    --  7: 000000000000000000000000b9e7f8568e08d5659f5d29c4997173d84cdf2607 <---
    --  8: 000000000000000000000000bb9bc244d798123fde783fcc1c72d3bb8c189413
    --3 : 9 : 8 : 5
    --  0:  (address) = 0xbb9bc244d798123fde783fcc1c72d3bb8c189413
    --  1:  (address) = 0xb9e7f8568e08d5659f5d29c4997173d84cdf2607
    --  2:  (address)
    --  0: 0000000000000000000000000000000000000000000000000000000000000040
    --  1: 00000000000000000000000000000000000000000000000000000000000000a0
    --  2: 0000000000000000000000000000000000000000000000000000000000000002
    --  3: 0000000000000000000000000000000000000000000000000000000000000000
    --  4: 0000000000000000000000000000000000000000000000000000000000000001
    --  5: 0000000000000000000000000000000000000000000000000000000000000003 <===
    --  6: 000000000000000000000000bb9bc244d798123fde783fcc1c72d3bb8c189413
    --  7: 000000000000000000000000b9e7f8568e08d5659f5d29c4997173d84cdf2607
    --  8: 000000000000000000000000bb9bc244d798123fde783fcc1c72d3bb8c189413 <---
expected: --[false, true], [0xbb9bc244d798123fde783fcc1c72d3bb8c189413, 0xb9e7f8568e08d5659f5d29c4997173d84cdf2607, 0xbb9bc244d798123fde783fcc1c72d3bb8c189413]--?
result:   --[false, true], [0xbb9bc244d798123fde783fcc1c72d3bb8c189413, 0xb9e7f8568e08d5659f5d29c4997173d84cdf2607, 0xbb9bc244d798123fde783fcc1c72d3bb8c189413]--? 1
testName: decoding bool[], address[] one set of two bools and one set of three addrs
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.073 test_73                          ==> 
line: decode|decoding address,address,uint256,string (see issue #1013)|function baz(address,address,uint256,string)|0x000000000000000000000000f3c9c5719eb4f26a3ab45cb86771827629f9a99900000000000000000000000071d402ac181de4a8739a15f5a56141f64fc522f80000000000000000000000000000000000000000000000190b89b838167800000000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000001f486920426f62202d2d20486572652061726520796f757220746f6b656e732100|0xf3c9c5719eb4f26a3ab45cb86771827629f9a999, 0x71d402ac181de4a8739a15f5a56141f64fc522f8, 462000000000000000000, Hi Bob -- Here are your tokens!
testType: decode
testName: decoding address,address,uint256,string (see issue #1013)
signature: function baz(address,address,uint256,string) : function baz(address,address,uint256,string)

--------------------------------------------------
--4 : 6 : 0
--  0: val_0 (address)
--  1: val_1 (address)
--  2: val_2 (uint256)
--  3: val_3 (string)
--  0: 000000000000000000000000f3c9c5719eb4f26a3ab45cb86771827629f9a999 <---
--  1: 00000000000000000000000071d402ac181de4a8739a15f5a56141f64fc522f8
--  2: 0000000000000000000000000000000000000000000000190b89b83816780000
--  3: 0000000000000000000000000000000000000000000000000000000000000080
--  4: 000000000000000000000000000000000000000000000000000000000000001f
--  5: 486920426f62202d2d20486572652061726520796f757220746f6b656e732100
--4 : 6 : 1
--  0: val_0 (address) = 0xf3c9c5719eb4f26a3ab45cb86771827629f9a999
--  1: val_1 (address)
--  2: val_2 (uint256)
--  3: val_3 (string)
--  0: 000000000000000000000000f3c9c5719eb4f26a3ab45cb86771827629f9a999
--  1: 00000000000000000000000071d402ac181de4a8739a15f5a56141f64fc522f8 <---
--  2: 0000000000000000000000000000000000000000000000190b89b83816780000
--  3: 0000000000000000000000000000000000000000000000000000000000000080
--  4: 000000000000000000000000000000000000000000000000000000000000001f
--  5: 486920426f62202d2d20486572652061726520796f757220746f6b656e732100
--4 : 6 : 2
--  0: val_0 (address) = 0xf3c9c5719eb4f26a3ab45cb86771827629f9a999
--  1: val_1 (address) = 0x71d402ac181de4a8739a15f5a56141f64fc522f8
--  2: val_2 (uint256)
--  3: val_3 (string)
--  0: 000000000000000000000000f3c9c5719eb4f26a3ab45cb86771827629f9a999
--  1: 00000000000000000000000071d402ac181de4a8739a15f5a56141f64fc522f8
--  2: 0000000000000000000000000000000000000000000000190b89b83816780000 <---
--  3: 0000000000000000000000000000000000000000000000000000000000000080
--  4: 000000000000000000000000000000000000000000000000000000000000001f
--  5: 486920426f62202d2d20486572652061726520796f757220746f6b656e732100
--4 : 6 : 3
--  0: val_0 (address) = 0xf3c9c5719eb4f26a3ab45cb86771827629f9a999
--  1: val_1 (address) = 0x71d402ac181de4a8739a15f5a56141f64fc522f8
--  2: val_2 (uint256) = 462000000000000000000
--  3: val_3 (string)
--  0: 000000000000000000000000f3c9c5719eb4f26a3ab45cb86771827629f9a999
--  1: 00000000000000000000000071d402ac181de4a8739a15f5a56141f64fc522f8
--  2: 0000000000000000000000000000000000000000000000190b89b83816780000
--  3: 0000000000000000000000000000000000000000000000000000000000000080 <---
--  4: 000000000000000000000000000000000000000000000000000000000000001f
--  5: 486920426f62202d2d20486572652061726520796f757220746f6b656e732100
expected: --0xf3c9c5719eb4f26a3ab45cb86771827629f9a999, 0x71d402ac181de4a8739a15f5a56141f64fc522f8, 462000000000000000000, Hi Bob -- Here are your tokens!--?
result:   --0xf3c9c5719eb4f26a3ab45cb86771827629f9a999, 0x71d402ac181de4a8739a15f5a56141f64fc522f8, 462000000000000000000, Hi Bob -- Here are your tokens!--? 1
testName: decoding address,address,uint256,string (see issue #1013)
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.074 test_74                          ==> 
line: decode|decode uint8, uint32, uin64, uint128|function baz(uint8, uint32, uint64, uint128)|0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe|254, 4294967294, 18446744073709551614, 340282366920938463463374607431768211454
testType: decode
testName: decode uint8, uint32, uin64, uint128
signature: function baz(uint8, uint32, uint64, uint128) : function baz(uint8,uint32,uint64,uint128)

--------------------------------------------------
--4 : 4 : 0
--  0: val_0 (uint8)
--  1: val_1 (uint32)
--  2: val_2 (uint64)
--  3: val_3 (uint128)
--  0: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe <---
--  1: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe
--  2: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe
--  3: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe
--4 : 4 : 1
--  0: val_0 (uint8) = 254
--  1: val_1 (uint32)
--  2: val_2 (uint64)
--  3: val_3 (uint128)
--  0: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe
--  1: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe <---
--  2: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe
--  3: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe
--4 : 4 : 2
--  0: val_0 (uint8) = 254
--  1: val_1 (uint32) = 4294967294
--  2: val_2 (uint64)
--  3: val_3 (uint128)
--  0: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe
--  1: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe
--  2: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe <---
--  3: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe
--4 : 4 : 3
--  0: val_0 (uint8) = 254
--  1: val_1 (uint32) = 4294967294
--  2: val_2 (uint64) = 18446744073709551614
--  3: val_3 (uint128)
--  0: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe
--  1: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe
--  2: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe
--  3: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe <---
expected: --254, 4294967294, 18446744073709551614, 340282366920938463463374607431768211454--?
result:   --254, 4294967294, 18446744073709551614, 340282366920938463463374607431768211454--? 1
testName: decode uint8, uint32, uin64, uint128
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.075 test_75                          ==> 
line: decode|decode int8, int32, int64, int128, int256|function baz(int8, int32, int64, int128, int256)|0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe|-2, -2, -2, -2, -2
testType: decode
testName: decode int8, int32, int64, int128, int256
signature: function baz(int8, int32, int64, int128, int256) : function baz(int8,int32,int64,int128,int256)

--------------------------------------------------
--5 : 5 : 0
--  0: val_0 (int8)
--  1: val_1 (int32)
--  2: val_2 (int64)
--  3: val_3 (int128)
--  4: val_4 (int256)
--  0: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe <---
--  1: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe
--  2: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe
--  3: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe
--  4: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe
--5 : 5 : 1
--  0: val_0 (int8) = -2
--  1: val_1 (int32)
--  2: val_2 (int64)
--  3: val_3 (int128)
--  4: val_4 (int256)
--  0: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe
--  1: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe <---
--  2: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe
--  3: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe
--  4: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe
--5 : 5 : 2
--  0: val_0 (int8) = -2
--  1: val_1 (int32) = -2
--  2: val_2 (int64)
--  3: val_3 (int128)
--  4: val_4 (int256)
--  0: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe
--  1: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe
--  2: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe <---
--  3: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe
--  4: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe
--5 : 5 : 3
--  0: val_0 (int8) = -2
--  1: val_1 (int32) = -2
--  2: val_2 (int64) = -2
--  3: val_3 (int128)
--  4: val_4 (int256)
--  0: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe
--  1: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe
--  2: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe
--  3: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe <---
--  4: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe
--5 : 5 : 4
--  0: val_0 (int8) = -2
--  1: val_1 (int32) = -2
--  2: val_2 (int64) = -2
--  3: val_3 (int128) = -2
--  4: val_4 (int256)
--  0: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe
--  1: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe
--  2: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe
--  3: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe
--  4: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe <---
expected: ---2, -2, -2, -2, -2--?
result:   ---2, -2, -2, -2, -2--? 1
testName: decode int8, int32, int64, int128, int256
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.076 test_76                          ==> 
line: decode|decode uint128[2][3], uint three sets of two|function baz(uint128[2][3], uint)|0x000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000050000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a|[[1, 2], [3, 4], [5, 6]], 10
testType: decode
testName: decode uint128[2][3], uint three sets of two
signature: function baz(uint128[2][3], uint) : function baz(uint128[2][3],uint256)

--------------------------------------------------
--2 : 7 : 0
--  0: val_0 (uint128[2][3])
--  1: val_1 (uint256)
--  0: 0000000000000000000000000000000000000000000000000000000000000001 <---
--  1: 0000000000000000000000000000000000000000000000000000000000000002
--  2: 0000000000000000000000000000000000000000000000000000000000000003
--  3: 0000000000000000000000000000000000000000000000000000000000000004
--  4: 0000000000000000000000000000000000000000000000000000000000000005
--  5: 0000000000000000000000000000000000000000000000000000000000000006
--  6: 000000000000000000000000000000000000000000000000000000000000000a
  --3 : 7 : 0
  --  0:  (uint128[2])
  --  1:  (uint128[2])
  --  2:  (uint128[2])
  --  0: 0000000000000000000000000000000000000000000000000000000000000001 <---
  --  1: 0000000000000000000000000000000000000000000000000000000000000002
  --  2: 0000000000000000000000000000000000000000000000000000000000000003
  --  3: 0000000000000000000000000000000000000000000000000000000000000004
  --  4: 0000000000000000000000000000000000000000000000000000000000000005
  --  5: 0000000000000000000000000000000000000000000000000000000000000006
  --  6: 000000000000000000000000000000000000000000000000000000000000000a
    --2 : 7 : 0
    --  0:  (uint128)
    --  1:  (uint128)
    --  0: 0000000000000000000000000000000000000000000000000000000000000001 <---
    --  1: 0000000000000000000000000000000000000000000000000000000000000002
    --  2: 0000000000000000000000000000000000000000000000000000000000000003
    --  3: 0000000000000000000000000000000000000000000000000000000000000004
    --  4: 0000000000000000000000000000000000000000000000000000000000000005
    --  5: 0000000000000000000000000000000000000000000000000000000000000006
    --  6: 000000000000000000000000000000000000000000000000000000000000000a
    --2 : 7 : 1
    --  0:  (uint128) = 1
    --  1:  (uint128)
    --  0: 0000000000000000000000000000000000000000000000000000000000000001
    --  1: 0000000000000000000000000000000000000000000000000000000000000002 <---
    --  2: 0000000000000000000000000000000000000000000000000000000000000003
    --  3: 0000000000000000000000000000000000000000000000000000000000000004
    --  4: 0000000000000000000000000000000000000000000000000000000000000005
    --  5: 0000000000000000000000000000000000000000000000000000000000000006
    --  6: 000000000000000000000000000000000000000000000000000000000000000a
  --3 : 7 : 2
  --  0:  (uint128[2]) = [1, 2]
  --  1:  (uint128[2])
  --  2:  (uint128[2])
  --  0: 0000000000000000000000000000000000000000000000000000000000000001
  --  1: 0000000000000000000000000000000000000000000000000000000000000002
  --  2: 0000000000000000000000000000000000000000000000000000000000000003 <---
  --  3: 0000000000000000000000000000000000000000000000000000000000000004
  --  4: 0000000000000000000000000000000000000000000000000000000000000005
  --  5: 0000000000000000000000000000000000000000000000000000000000000006
  --  6: 000000000000000000000000000000000000000000000000000000000000000a
    --2 : 7 : 2
    --  0:  (uint128)
    --  1:  (uint128)
    --  0: 0000000000000000000000000000000000000000000000000000000000000001
    --  1: 0000000000000000000000000000000000000000000000000000000000000002
    --  2: 0000000000000000000000000000000000000000000000000000000000000003 <---
    --  3: 0000000000000000000000000000000000000000000000000000000000000004
    --  4: 0000000000000000000000000000000000000000000000000000000000000005
    --  5: 0000000000000000000000000000000000000000000000000000000000000006
    --  6: 000000000000000000000000000000000000000000000000000000000000000a
    --2 : 7 : 3
    --  0:  (uint128) = 3
    --  1:  (uint128)
    --  0: 0000000000000000000000000000000000000000000000000000000000000001
    --  1: 0000000000000000000000000000000000000000000000000000000000000002
    --  2: 0000000000000000000000000000000000000000000000000000000000000003
    --  3: 0000000000000000000000000000000000000000000000000000000000000004 <---
    --  4: 0000000000000000000000000000000000000000000000000000000000000005
    --  5: 0000000000000000000000000000000000000000000000000000000000000006
    --  6: 000000000000000000000000000000000000000000000000000000000000000a
  --3 : 7 : 4
  --  0:  (uint128[2]) = [1, 2]
  --  1:  (uint128[2]) = [3, 4]
  --  2:  (uint128[2])
  --  0: 0000000000000000000000000000000000000000000000000000000000000001
  --  1: 0000000000000000000000000000000000000000000000000000000000000002
  --  2: 0000000000000000000000000000000000000000000000000000000000000003
  --  3: 0000000000000000000000000000000000000000000000000000000000000004
  --  4: 0000000000000000000000000000000000000000000000000000000000000005 <---
  --  5: 0000000000000000000000000000000000000000000000000000000000000006
  --  6: 000000000000000000000000000000000000000000000000000000000000000a
    --2 : 7 : 4
    --  0:  (uint128)
    --  1:  (uint128)
    --  0: 0000000000000000000000000000000000000000000000000000000000000001
    --  1: 0000000000000000000000000000000000000000000000000000000000000002
    --  2: 0000000000000000000000000000000000000000000000000000000000000003
    --  3: 0000000000000000000000000000000000000000000000000000000000000004
    --  4: 0000000000000000000000000000000000000000000000000000000000000005 <---
    --  5: 0000000000000000000000000000000000000000000000000000000000000006
    --  6: 000000000000000000000000000000000000000000000000000000000000000a
    --2 : 7 : 5
    --  0:  (uint128) = 5
    --  1:  (uint128)
    --  0: 0000000000000000000000000000000000000000000000000000000000000001
    --  1: 0000000000000000000000000000000000000000000000000000000000000002
    --  2: 0000000000000000000000000000000000000000000000000000000000000003
    --  3: 0000000000000000000000000000000000000000000000000000000000000004
    --  4: 0000000000000000000000000000000000000000000000000000000000000005
    --  5: 0000000000000000000000000000000000000000000000000000000000000006 <---
    --  6: 000000000000000000000000000000000000000000000000000000000000000a
--2 : 7 : 6
--  0: val_0 (uint128[2][3]) = [[1, 2], [3, 4], [5, 6]]
--  1: val_1 (uint256)
--  0: 0000000000000000000000000000000000000000000000000000000000000001
--  1: 0000000000000000000000000000000000000000000000000000000000000002
--  2: 0000000000000000000000000000000000000000000000000000000000000003
--  3: 0000000000000000000000000000000000000000000000000000000000000004
--  4: 0000000000000000000000000000000000000000000000000000000000000005
--  5: 0000000000000000000000000000000000000000000000000000000000000006
--  6: 000000000000000000000000000000000000000000000000000000000000000a <---
expected: --[[1, 2], [3, 4], [5, 6]], 10--?
result:   --[[1, 2], [3, 4], [5, 6]], 10--? 1
testName: decode uint128[2][3], uint three sets of two
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.077 test_77                          ==> 
line: decode|decode uint128[2][3][2], uint two sets of three sets of two|function baz(uint128[2][3][2], uint)|0xa|[[[1, 2], [3, 4], [5, 6]], [[1, 2], [3, 4], [5, 6]]], 10
testType: decode
testName: decode uint128[2][3][2], uint two sets of three sets of two
signature: function baz(uint128[2][3][2], uint) : function baz(uint128[2][3][2],uint256)

--------------------------------------------------
--2 : 13 : 0
--  0: val_0 (uint128[2][3][2])
--  1: val_1 (uint256)
--  0: 0000000000000000000000000000000000000000000000000000000000000001 <---
--  1: 0000000000000000000000000000000000000000000000000000000000000002
--  2: 0000000000000000000000000000000000000000000000000000000000000003
--  3: 0000000000000000000000000000000000000000000000000000000000000004
--  4: 0000000000000000000000000000000000000000000000000000000000000005
--  5: 0000000000000000000000000000000000000000000000000000000000000006
--  6: 0000000000000000000000000000000000000000000000000000000000000001
--  7: 0000000000000000000000000000000000000000000000000000000000000002
--  8: 0000000000000000000000000000000000000000000000000000000000000003
--  9: 0000000000000000000000000000000000000000000000000000000000000004
-- 10: 0000000000000000000000000000000000000000000000000000000000000005
-- 11: 0000000000000000000000000000000000000000000000000000000000000006
-- 12: 000000000000000000000000000000000000000000000000000000000000000a
  --2 : 13 : 0
  --  0:  (uint128[2][3])
  --  1:  (uint128[2][3])
  --  0: 0000000000000000000000000000000000000000000000000000000000000001 <---
  --  1: 0000000000000000000000000000000000000000000000000000000000000002
  --  2: 0000000000000000000000000000000000000000000000000000000000000003
  --  3: 0000000000000000000000000000000000000000000000000000000000000004
  --  4: 0000000000000000000000000000000000000000000000000000000000000005
  --  5: 0000000000000000000000000000000000000000000000000000000000000006
  --  6: 0000000000000000000000000000000000000000000000000000000000000001
  --  7: 0000000000000000000000000000000000000000000000000000000000000002
  --  8: 0000000000000000000000000000000000000000000000000000000000000003
  --  9: 0000000000000000000000000000000000000000000000000000000000000004
  -- 10: 0000000000000000000000000000000000000000000000000000000000000005
  -- 11: 0000000000000000000000000000000000000000000000000000000000000006
  -- 12: 000000000000000000000000000000000000000000000000000000000000000a
    --3 : 13 : 0
    --  0:  (uint128[2])
    --  1:  (uint128[2])
    --  2:  (uint128[2])
    --  0: 0000000000000000000000000000000000000000000000000000000000000001 <---
    --  1: 0000000000000000000000000000000000000000000000000000000000000002
    --  2: 0000000000000000000000000000000000000000000000000000000000000003
    --  3: 0000000000000000000000000000000000000000000000000000000000000004
    --  4: 0000000000000000000000000000000000000000000000000000000000000005
    --  5: 0000000000000000000000000000000000000000000000000000000000000006
    --  6: 0000000000000000000000000000000000000000000000000000000000000001
    --  7: 0000000000000000000000000000000000000000000000000000000000000002
    --  8: 0000000000000000000000000000000000000000000000000000000000000003
    --  9: 0000000000000000000000000000000000000000000000000000000000000004
    -- 10: 0000000000000000000000000000000000000000000000000000000000000005
    -- 11: 0000000000000000000000000000000000000000000000000000000000000006
    -- 12: 000000000000000000000000000000000000000000000000000000000000000a
      --2 : 13 : 0
      --  0:  (uint128)
      --  1:  (uint128)
      --  0: 0000000000000000000000000000000000000000000000000000000000000001 <---
      --  1: 0000000000000000000000000000000000000000000000000000000000000002
      --  2: 0000000000000000000000000000000000000000000000000000000000000003
      --  3: 0000000000000000000000000000000000000000000000000000000000000004
      --  4: 0000000000000000000000000000000000000000000000000000000000000005
      --  5: 0000000000000000000000000000000000000000000000000000000000000006
      --  6: 0000000000000000000000000000000000000000000000000000000000000001
      --  7: 0000000000000000000000000000000000000000000000000000000000000002
      --  8: 0000000000000000000000000000000000000000000000000000000000000003
      --  9: 0000000000000000000000000000000000000000000000000000000000000004
      -- 10: 0000000000000000000000000000000000000000000000000000000000000005
      -- 11: 0000000000000000000000000000000000000000000000000000000000000006
      -- 12: 000000000000000000000000000000000000000000000000000000000000000a
      --2 : 13 : 1
      --  0:  (uint128) = 1
      --  1:  (uint128)
      --  0: 0000000000000000000000000000000000000000000000000000000000000001
      --  1: 0000000000000000000000000000000000000000000000000000000000000002 <---
      --  2: 0000000000000000000000000000000000000000000000000000000000000003
      --  3: 0000000000000000000000000000000000000000000000000000000000000004
      --  4: 0000000000000000000000000000000000000000000000000000000000000005
      --  5: 0000000000000000000000000000000000000000000000000000000000000006
      --  6: 0000000000000000000000000000000000000000000000000000000000000001
      --  7: 0000000000000000000000000000000000000000000000000000000000000002
      --  8: 0000000000000000000000000000000000000000000000000000000000000003
      --  9: 0000000000000000000000000000000000000000000000000000000000000004
      -- 10: 0000000000000000000000000000000000000000000000000000000000000005
      -- 11: 0000000000000000000000000000000000000000000000000000000000000006
      -- 12: 000000000000000000000000000000000000000000000000000000000000000a
    --3 : 13 : 2
    --  0:  (uint128[2]) = [1, 2]
    --  1:  (uint128[2])
    --  2:  (uint128[2])
    --  0: 0000000000000000000000000000000000000000000000000000000000000001
    --  1: 0000000000000000000000000000000000000000000000000000000000000002
    --  2: 0000000000000000000000000000000000000000000000000000000000000003 <---
    --  3: 0000000000000000000000000000000000000000000000000000000000000004
    --  4: 0000000000000000000000000000000000000000000000000000000000000005
    --  5: 0000000000000000000000000000000000000000000000000000000000000006
    --  6: 0000000000000000000000000000000000000000000000000000000000000001
    --  7: 0000000000000000000000000000000000000000000000000000000000000002
    --  8: 0000000000000000000000000000000000000000000000000000000000000003
    --  9: 0000000000000000000000000000000000000000000000000000000000000004
    -- 10: 0000000000000000000000000000000000000000000000000000000000000005
    -- 11: 0000000000000000000000000000000000000000000000000000000000000006
    -- 12: 000000000000000000000000000000000000000000000000000000000000000a
      --2 : 13 : 2
      --  0:  (uint128)
      --  1:  (uint128)
      --  0: 0000000000000000000000000000000000000000000000000000000000000001
      --  1: 0000000000000000000000000000000000000000000000000000000000000002
      --  2: 0000000000000000000000000000000000000000000000000000000000000003 <---
      --  3: 0000000000000000000000000000000000000000000000000000000000000004
      --  4: 0000000000000000000000000000000000000000000000000000000000000005
      --  5: 0000000000000000000000000000000000000000000000000000000000000006
      --  6: 0000000000000000000000000000000000000000000000000000000000000001
      --  7: 0000000000000000000000000000000000000000000000000000000000000002
      --  8: 0000000000000000000000000000000000000000000000000000000000000003
      --  9: 0000000000000000000000000000000000000000000000000000000000000004
      -- 10: 0000000000000000000000000000000000000000000000000000000000000005
      -- 11: 0000000000000000000000000000000000000000000000000000000000000006
      -- 12: 000000000000000000000000000000000000000000000000000000000000000a
      --2 : 13 : 3
      --  0:  (uint128) = 3
      --  1:  (uint128)
      --  0: 0000000000000000000000000000000000000000000000000000000000000001
      --  1: 0000000000000000000000000000000000000000000000000000000000000002
      --  2: 0000000000000000000000000000000000000000000000000000000000000003
      --  3: 0000000000000000000000000000000000000000000000000000000000000004 <---
      --  4: 0000000000000000000000000000000000000000000000000000000000000005
      --  5: 0000000000000000000000000000000000000000000000000000000000000006
      --  6: 0000000000000000000000000000000000000000000000000000000000000001
      --  7: 0000000000000000000000000000000000000000000000000000000000000002
      --  8: 0000000000000000000000000000000000000000000000000000000000000003
      --  9: 0000000000000000000000000000000000000000000000000000000000000004
      -- 10: 0000000000000000000000000000000000000000000000000000000000000005
      -- 11: 0000000000000000000000000000000000000000000000000000000000000006
      -- 12: 000000000000000000000000000000000000000000000000000000000000000a
    --3 : 13 : 4
    --  0:  (uint128[2]) = [1, 2]
    --  1:  (uint128[2]) = [3, 4]
    --  2:  (uint128[2])
    --  0: 0000000000000000000000000000000000000000000000000000000000000001
    --  1: 0000000000000000000000000000000000000000000000000000000000000002
    --  2: 0000000000000000000000000000000000000000000000000000000000000003
    --  3: 0000000000000000000000000000000000000000000000000000000000000004
    --  4: 0000000000000000000000000000000000000000000000000000000000000005 <---
    --  5: 0000000000000000000000000000000000000000000000000000000000000006
    --  6: 0000000000000000000000000000000000000000000000000000000000000001
    --  7: 0000000000000000000000000000000000000000000000000000000000000002
    --  8: 0000000000000000000000000000000000000000000000000000000000000003
    --  9: 0000000000000000000000000000000000000000000000000000000000000004
    -- 10: 0000000000000000000000000000000000000000000000000000000000000005
    -- 11: 0000000000000000000000000000000000000000000000000000000000000006
    -- 12: 000000000000000000000000000000000000000000000000000000000000000a
      --2 : 13 : 4
      --  0:  (uint128)
      --  1:  (uint128)
      --  0: 0000000000000000000000000000000000000000000000000000000000000001
      --  1: 0000000000000000000000000000000000000000000000000000000000000002
      --  2: 0000000000000000000000000000000000000000000000000000000000000003
      --  3: 0000000000000000000000000000000000000000000000000000000000000004
      --  4: 0000000000000000000000000000000000000000000000000000000000000005 <---
      --  5: 0000000000000000000000000000000000000000000000000000000000000006
      --  6: 0000000000000000000000000000000000000000000000000000000000000001
      --  7: 0000000000000000000000000000000000000000000000000000000000000002
      --  8: 0000000000000000000000000000000000000000000000000000000000000003
      --  9: 0000000000000000000000000000000000000000000000000000000000000004
      -- 10: 0000000000000000000000000000000000000000000000000000000000000005
      -- 11: 0000000000000000000000000000000000000000000000000000000000000006
      -- 12: 000000000000000000000000000000000000000000000000000000000000000a
      --2 : 13 : 5
      --  0:  (uint128) = 5
      --  1:  (uint128)
      --  0: 0000000000000000000000000000000000000000000000000000000000000001
      --  1: 0000000000000000000000000000000000000000000000000000000000000002
      --  2: 0000000000000000000000000000000000000000000000000000000000000003
      --  3: 0000000000000000000000000000000000000000000000000000000000000004
      --  4: 0000000000000000000000000000000000000000000000000000000000000005
      --  5: 0000000000000000000000000000000000000000000000000000000000000006 <---
      --  6: 0000000000000000000000000000000000000000000000000000000000000001
      --  7: 0000000000000000000000000000000000000000000000000000000000000002
      --  8: 0000000000000000000000000000000000000000000000000000000000000003
      --  9: 0000000000000000000000000000000000000000000000000000000000000004
      -- 10: 0000000000000000000000000000000000000000000000000000000000000005
      -- 11: 0000000000000000000000000000000000000000000000000000000000000006
      -- 12: 000000000000000000000000000000000000000000000000000000000000000a
  --2 : 13 : 6
  --  0:  (uint128[2][3]) = [[1, 2], [3, 4], [5, 6]]
  --  1:  (uint128[2][3])
  --  0: 0000000000000000000000000000000000000000000000000000000000000001
  --  1: 0000000000000000000000000000000000000000000000000000000000000002
  --  2: 0000000000000000000000000000000000000000000000000000000000000003
  --  3: 0000000000000000000000000000000000000000000000000000000000000004
  --  4: 0000000000000000000000000000000000000000000000000000000000000005
  --  5: 0000000000000000000000000000000000000000000000000000000000000006
  --  6: 0000000000000000000000000000000000000000000000000000000000000001 <---
  --  7: 0000000000000000000000000000000000000000000000000000000000000002
  --  8: 0000000000000000000000000000000000000000000000000000000000000003
  --  9: 0000000000000000000000000000000000000000000000000000000000000004
  -- 10: 0000000000000000000000000000000000000000000000000000000000000005
  -- 11: 0000000000000000000000000000000000000000000000000000000000000006
  -- 12: 000000000000000000000000000000000000000000000000000000000000000a
    --3 : 13 : 6
    --  0:  (uint128[2])
    --  1:  (uint128[2])
    --  2:  (uint128[2])
    --  0: 0000000000000000000000000000000000000000000000000000000000000001
    --  1: 0000000000000000000000000000000000000000000000000000000000000002
    --  2: 0000000000000000000000000000000000000000000000000000000000000003
    --  3: 0000000000000000000000000000000000000000000000000000000000000004
    --  4: 0000000000000000000000000000000000000000000000000000000000000005
    --  5: 0000000000000000000000000000000000000000000000000000000000000006
    --  6: 0000000000000000000000000000000000000000000000000000000000000001 <---
    --  7: 0000000000000000000000000000000000000000000000000000000000000002
    --  8: 0000000000000000000000000000000000000000000000000000000000000003
    --  9: 0000000000000000000000000000000000000000000000000000000000000004
    -- 10: 0000000000000000000000000000000000000000000000000000000000000005
    -- 11: 0000000000000000000000000000000000000000000000000000000000000006
    -- 12: 000000000000000000000000000000000000000000000000000000000000000a
      --2 : 13 : 6
      --  0:  (uint128)
      --  1:  (uint128)
      --  0: 0000000000000000000000000000000000000000000000000000000000000001
      --  1: 0000000000000000000000000000000000000000000000000000000000000002
      --  2: 0000000000000000000000000000000000000000000000000000000000000003
      --  3: 0000000000000000000000000000000000000000000000000000000000000004
      --  4: 0000000000000000000000000000000000000000000000000000000000000005
      --  5: 0000000000000000000000000000000000000000000000000000000000000006
      --  6: 0000000000000000000000000000000000000000000000000000000000000001 <---
      --  7: 0000000000000000000000000000000000000000000000000000000000000002
      --  8: 0000000000000000000000000000000000000000000000000000000000000003
      --  9: 0000000000000000000000000000000000000000000000000000000000000004
      -- 10: 0000000000000000000000000000000000000000000000000000000000000005
      -- 11: 0000000000000000000000000000000000000000000000000000000000000006
      -- 12: 000000000000000000000000000000000000000000000000000000000000000a
      --2 : 13 : 7
      --  0:  (uint128) = 1
      --  1:  (uint128)
      --  0: 0000000000000000000000000000000000000000000000000000000000000001
      --  1: 0000000000000000000000000000000000000000000000000000000000000002
      --  2: 0000000000000000000000000000000000000000000000000000000000000003
      --  3: 0000000000000000000000000000000000000000000000000000000000000004
      --  4: 0000000000000000000000000000000000000000000000000000000000000005
      --  5: 0000000000000000000000000000000000000000000000000000000000000006
      --  6: 0000000000000000000000000000000000000000000000000000000000000001
      --  7: 0000000000000000000000000000000000000000000000000000000000000002 <---
      --  8: 0000000000000000000000000000000000000000000000000000000000000003
      --  9: 0000000000000000000000000000000000000000000000000000000000000004
      -- 10: 0000000000000000000000000000000000000000000000000000000000000005
      -- 11: 0000000000000000000000000000000000000000000000000000000000000006
      -- 12: 000000000000000000000000000000000000000000000000000000000000000a
    --3 : 13 : 8
    --  0:  (uint128[2]) = [1, 2]
    --  1:  (uint128[2])
    --  2:  (uint128[2])
    --  0: 0000000000000000000000000000000000000000000000000000000000000001
    --  1: 0000000000000000000000000000000000000000000000000000000000000002
    --  2: 0000000000000000000000000000000000000000000000000000000000000003
    --  3: 0000000000000000000000000000000000000000000000000000000000000004
    --  4: 0000000000000000000000000000000000000000000000000000000000000005
    --  5: 0000000000000000000000000000000000000000000000000000000000000006
    --  6: 0000000000000000000000000000000000000000000000000000000000000001
    --  7: 0000000000000000000000000000000000000000000000000000000000000002
    --  8: 0000000000000000000000000000000000000000000000000000000000000003 <---
    --  9: 0000000000000000000000000000000000000000000000000000000000000004
    -- 10: 0000000000000000000000000000000000000000000000000000000000000005
    -- 11: 0000000000000000000000000000000000000000000000000000000000000006
    -- 12: 000000000000000000000000000000000000000000000000000000000000000a
      --2 : 13 : 8
      --  0:  (uint128)
      --  1:  (uint128)
      --  0: 0000000000000000000000000000000000000000000000000000000000000001
      --  1: 0000000000000000000000000000000000000000000000000000000000000002
      --  2: 0000000000000000000000000000000000000000000000000000000000000003
      --  3: 0000000000000000000000000000000000000000000000000000000000000004
      --  4: 0000000000000000000000000000000000000000000000000000000000000005
      --  5: 0000000000000000000000000000000000000000000000000000000000000006
      --  6: 0000000000000000000000000000000000000000000000000000000000000001
      --  7: 0000000000000000000000000000000000000000000000000000000000000002
      --  8: 0000000000000000000000000000000000000000000000000000000000000003 <---
      --  9: 0000000000000000000000000000000000000000000000000000000000000004
      -- 10: 0000000000000000000000000000000000000000000000000000000000000005
      -- 11: 0000000000000000000000000000000000000000000000000000000000000006
      -- 12: 000000000000000000000000000000000000000000000000000000000000000a
      --2 : 13 : 9
      --  0:  (uint128) = 3
      --  1:  (uint128)
      --  0: 0000000000000000000000000000000000000000000000000000000000000001
      --  1: 0000000000000000000000000000000000000000000000000000000000000002
      --  2: 0000000000000000000000000000000000000000000000000000000000000003
      --  3: 0000000000000000000000000000000000000000000000000000000000000004
      --  4: 0000000000000000000000000000000000000000000000000000000000000005
      --  5: 0000000000000000000000000000000000000000000000000000000000000006
      --  6: 0000000000000000000000000000000000000000000000000000000000000001
      --  7: 0000000000000000000000000000000000000000000000000000000000000002
      --  8: 0000000000000000000000000000000000000000000000000000000000000003
      --  9: 0000000000000000000000000000000000000000000000000000000000000004 <---
      -- 10: 0000000000000000000000000000000000000000000000000000000000000005
      -- 11: 0000000000000000000000000000000000000000000000000000000000000006
      -- 12: 000000000000000000000000000000000000000000000000000000000000000a
    --3 : 13 : 10
    --  0:  (uint128[2]) = [1, 2]
    --  1:  (uint128[2]) = [3, 4]
    --  2:  (uint128[2])
    --  0: 0000000000000000000000000000000000000000000000000000000000000001
    --  1: 0000000000000000000000000000000000000000000000000000000000000002
    --  2: 0000000000000000000000000000000000000000000000000000000000000003
    --  3: 0000000000000000000000000000000000000000000000000000000000000004
    --  4: 0000000000000000000000000000000000000000000000000000000000000005
    --  5: 0000000000000000000000000000000000000000000000000000000000000006
    --  6: 0000000000000000000000000000000000000000000000000000000000000001
    --  7: 0000000000000000000000000000000000000000000000000000000000000002
    --  8: 0000000000000000000000000000000000000000000000000000000000000003
    --  9: 0000000000000000000000000000000000000000000000000000000000000004
    -- 10: 0000000000000000000000000000000000000000000000000000000000000005 <---
    -- 11: 0000000000000000000000000000000000000000000000000000000000000006
    -- 12: 000000000000000000000000000000000000000000000000000000000000000a
      --2 : 13 : 10
      --  0:  (uint128)
      --  1:  (uint128)
      --  0: 0000000000000000000000000000000000000000000000000000000000000001
      --  1: 0000000000000000000000000000000000000000000000000000000000000002
      --  2: 0000000000000000000000000000000000000000000000000000000000000003
      --  3: 0000000000000000000000000000000000000000000000000000000000000004
      --  4: 0000000000000000000000000000000000000000000000000000000000000005
      --  5: 0000000000000000000000000000000000000000000000000000000000000006
      --  6: 0000000000000000000000000000000000000000000000000000000000000001
      --  7: 0000000000000000000000000000000000000000000000000000000000000002
      --  8: 0000000000000000000000000000000000000000000000000000000000000003
      --  9: 0000000000000000000000000000000000000000000000000000000000000004
      -- 10: 0000000000000000000000000000000000000000000000000000000000000005 <---
      -- 11: 0000000000000000000000000000000000000000000000000000000000000006
      -- 12: 000000000000000000000000000000000000000000000000000000000000000a
      --2 : 13 : 11
      --  0:  (uint128) = 5
      --  1:  (uint128)
      --  0: 0000000000000000000000000000000000000000000000000000000000000001
      --  1: 0000000000000000000000000000000000000000000000000000000000000002
      --  2: 0000000000000000000000000000000000000000000000000000000000000003
      --  3: 0000000000000000000000000000000000000000000000000000000000000004
      --  4: 0000000000000000000000000000000000000000000000000000000000000005
      --  5: 0000000000000000000000000000000000000000000000000000000000000006
      --  6: 0000000000000000000000000000000000000000000000000000000000000001
      --  7: 0000000000000000000000000000000000000000000000000000000000000002
      --  8: 0000000000000000000000000000000000000000000000000000000000000003
      --  9: 0000000000000000000000000000000000000000000000000000000000000004
      -- 10: 0000000000000000000000000000000000000000000000000000000000000005
      -- 11: 0000000000000000000000000000000000000000000000000000000000000006 <---
      -- 12: 000000000000000000000000000000000000000000000000000000000000000a
--2 : 13 : 12
--  0: val_0 (uint128[2][3][2]) = [[[1, 2], [3, 4], [5, 6]], [[1, 2], [3, 4], [5, 6]]]
--  1: val_1 (uint256)
--  0: 0000000000000000000000000000000000000000000000000000000000000001
--  1: 0000000000000000000000000000000000000000000000000000000000000002
--  2: 0000000000000000000000000000000000000000000000000000000000000003
--  3: 0000000000000000000000000000000000000000000000000000000000000004
--  4: 0000000000000000000000000000000000000000000000000000000000000005
--  5: 0000000000000000000000000000000000000000000000000000000000000006
--  6: 0000000000000000000000000000000000000000000000000000000000000001
--  7: 0000000000000000000000000000000000000000000000000000000000000002
--  8: 0000000000000000000000000000000000000000000000000000000000000003
--  9: 0000000000000000000000000000000000000000000000000000000000000004
-- 10: 0000000000000000000000000000000000000000000000000000000000000005
-- 11: 0000000000000000000000000000000000000000000000000000000000000006
-- 12: 000000000000000000000000000000000000000000000000000000000000000a <---
expected: --[[[1, 2], [3, 4], [5, 6]], [[1, 2], [3, 4], [5, 6]]], 10--?
result:   --[[[1, 2], [3, 4], [5, 6]], [[1, 2], [3, 4], [5, 6]]], 10--? 1
testName: decode uint128[2][3][2], uint two sets of three sets of two
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.078 test_78                          ==> 
line: decode|decode donation tuple array (address token, uint256 amount, address recipient)[]|function donate((address+uint256+address)[])|0x000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000020000000000000000000000006b175474e89094c44da98b954eedeac495271d0f000000000000000000000000000000000000000000000000869d529b714a0000000000000000000000000000f503017d7baf7fbc0fff7492b751025c6a78179b0000000000000000000000006b175474e89094c44da98b954eedeac495271d0f00000000000000000000000000000000000000000000000003782dace9d9000000000000000000000000000000de4b13153673bcae2616b67bf822500d325fc3|[{"val_1":"0x6b175474e89094c44da98b954eedeac495271d0f", "val_2":"9700000000000000000", "val_3":"0xf503017d7baf7fbc0fff7492b751025c6a78179b"}, {"val_1":"0x6b175474e89094c44da98b954eedeac495271d0f", "val_2":"250000000000000000", "val_3":"0x00de4b13153673bcae2616b67bf822500d325fc3"}]
testType: decode
testName: decode donation tuple array (address token, uint256 amount, address recipient)[]
signature: function donate((address+uint256+address)[]) : function donate((address,uint256,address)[])

--------------------------------------------------
--1 : 8 : 0
--  0: val_0 (tuple[])
--  0: 0000000000000000000000000000000000000000000000000000000000000020 <---
--  1: 0000000000000000000000000000000000000000000000000000000000000002
--  2: 0000000000000000000000006b175474e89094c44da98b954eedeac495271d0f
--  3: 000000000000000000000000000000000000000000000000869d529b714a0000
--  4: 000000000000000000000000f503017d7baf7fbc0fff7492b751025c6a78179b
--  5: 0000000000000000000000006b175474e89094c44da98b954eedeac495271d0f
--  6: 00000000000000000000000000000000000000000000000003782dace9d90000
--  7: 00000000000000000000000000de4b13153673bcae2616b67bf822500d325fc3
  --1 : 8 : 2 : 1
  --  0:  (tuple[2])
  --      tuple[][val_1(address) val_2(uint256) val_3(address) ]
  --  0: 0000000000000000000000000000000000000000000000000000000000000020
  --  1: 0000000000000000000000000000000000000000000000000000000000000002 <===
  --  2: 0000000000000000000000006b175474e89094c44da98b954eedeac495271d0f <---
  --  3: 000000000000000000000000000000000000000000000000869d529b714a0000
  --  4: 000000000000000000000000f503017d7baf7fbc0fff7492b751025c6a78179b
  --  5: 0000000000000000000000006b175474e89094c44da98b954eedeac495271d0f
  --  6: 00000000000000000000000000000000000000000000000003782dace9d90000
  --  7: 00000000000000000000000000de4b13153673bcae2616b67bf822500d325fc3
    --2 : 8 : 2 : 1
    --  0:  (tuple)
    --  1:  (tuple)
    --  0: 0000000000000000000000000000000000000000000000000000000000000020
    --  1: 0000000000000000000000000000000000000000000000000000000000000002 <===
    --  2: 0000000000000000000000006b175474e89094c44da98b954eedeac495271d0f <---
    --  3: 000000000000000000000000000000000000000000000000869d529b714a0000
    --  4: 000000000000000000000000f503017d7baf7fbc0fff7492b751025c6a78179b
    --  5: 0000000000000000000000006b175474e89094c44da98b954eedeac495271d0f
    --  6: 00000000000000000000000000000000000000000000000003782dace9d90000
    --  7: 00000000000000000000000000de4b13153673bcae2616b67bf822500d325fc3
      --3 : 8 : 2 : 1
      --  0: val_1 (address)
      --  1: val_2 (uint256)
      --  2: val_3 (address)
      --  0: 0000000000000000000000000000000000000000000000000000000000000020
      --  1: 0000000000000000000000000000000000000000000000000000000000000002 <===
      --  2: 0000000000000000000000006b175474e89094c44da98b954eedeac495271d0f <---
      --  3: 000000000000000000000000000000000000000000000000869d529b714a0000
      --  4: 000000000000000000000000f503017d7baf7fbc0fff7492b751025c6a78179b
      --  5: 0000000000000000000000006b175474e89094c44da98b954eedeac495271d0f
      --  6: 00000000000000000000000000000000000000000000000003782dace9d90000
      --  7: 00000000000000000000000000de4b13153673bcae2616b67bf822500d325fc3
      --3 : 8 : 3 : 1
      --  0: val_1 (address) = 0x6b175474e89094c44da98b954eedeac495271d0f
      --  1: val_2 (uint256)
      --  2: val_3 (address)
      --  0: 0000000000000000000000000000000000000000000000000000000000000020
      --  1: 0000000000000000000000000000000000000000000000000000000000000002 <===
      --  2: 0000000000000000000000006b175474e89094c44da98b954eedeac495271d0f
      --  3: 000000000000000000000000000000000000000000000000869d529b714a0000 <---
      --  4: 000000000000000000000000f503017d7baf7fbc0fff7492b751025c6a78179b
      --  5: 0000000000000000000000006b175474e89094c44da98b954eedeac495271d0f
      --  6: 00000000000000000000000000000000000000000000000003782dace9d90000
      --  7: 00000000000000000000000000de4b13153673bcae2616b67bf822500d325fc3
      --3 : 8 : 4 : 1
      --  0: val_1 (address) = 0x6b175474e89094c44da98b954eedeac495271d0f
      --  1: val_2 (uint256) = 9700000000000000000
      --  2: val_3 (address)
      --  0: 0000000000000000000000000000000000000000000000000000000000000020
      --  1: 0000000000000000000000000000000000000000000000000000000000000002 <===
      --  2: 0000000000000000000000006b175474e89094c44da98b954eedeac495271d0f
      --  3: 000000000000000000000000000000000000000000000000869d529b714a0000
      --  4: 000000000000000000000000f503017d7baf7fbc0fff7492b751025c6a78179b <---
      --  5: 0000000000000000000000006b175474e89094c44da98b954eedeac495271d0f
      --  6: 00000000000000000000000000000000000000000000000003782dace9d90000
      --  7: 00000000000000000000000000de4b13153673bcae2616b67bf822500d325fc3
    --2 : 8 : 5 : 1
    --  0:  (tuple) = {"val_1":"0x6b175474e89094c44da98b954eedeac495271d0f", "val_2":"9700000000000000000", "val_3":"0xf503017d7baf7fbc0fff7492b751025c6a78179b"}
    --  1:  (tuple)
    --  0: 0000000000000000000000000000000000000000000000000000000000000020
    --  1: 0000000000000000000000000000000000000000000000000000000000000002 <===
    --  2: 0000000000000000000000006b175474e89094c44da98b954eedeac495271d0f
    --  3: 000000000000000000000000000000000000000000000000869d529b714a0000
    --  4: 000000000000000000000000f503017d7baf7fbc0fff7492b751025c6a78179b
    --  5: 0000000000000000000000006b175474e89094c44da98b954eedeac495271d0f <---
    --  6: 00000000000000000000000000000000000000000000000003782dace9d90000
    --  7: 00000000000000000000000000de4b13153673bcae2616b67bf822500d325fc3
      --3 : 8 : 5 : 1
      --  0: val_1 (address)
      --  1: val_2 (uint256)
      --  2: val_3 (address)
      --  0: 0000000000000000000000000000000000000000000000000000000000000020
      --  1: 0000000000000000000000000000000000000000000000000000000000000002 <===
      --  2: 0000000000000000000000006b175474e89094c44da98b954eedeac495271d0f
      --  3: 000000000000000000000000000000000000000000000000869d529b714a0000
      --  4: 000000000000000000000000f503017d7baf7fbc0fff7492b751025c6a78179b
      --  5: 0000000000000000000000006b175474e89094c44da98b954eedeac495271d0f <---
      --  6: 00000000000000000000000000000000000000000000000003782dace9d90000
      --  7: 00000000000000000000000000de4b13153673bcae2616b67bf822500d325fc3
      --3 : 8 : 6 : 1
      --  0: val_1 (address) = 0x6b175474e89094c44da98b954eedeac495271d0f
      --  1: val_2 (uint256)
      --  2: val_3 (address)
      --  0: 0000000000000000000000000000000000000000000000000000000000000020
      --  1: 0000000000000000000000000000000000000000000000000000000000000002 <===
      --  2: 0000000000000000000000006b175474e89094c44da98b954eedeac495271d0f
      --  3: 000000000000000000000000000000000000000000000000869d529b714a0000
      --  4: 000000000000000000000000f503017d7baf7fbc0fff7492b751025c6a78179b
      --  5: 0000000000000000000000006b175474e89094c44da98b954eedeac495271d0f
      --  6: 00000000000000000000000000000000000000000000000003782dace9d90000 <---
      --  7: 00000000000000000000000000de4b13153673bcae2616b67bf822500d325fc3
      --3 : 8 : 7 : 1
      --  0: val_1 (address) = 0x6b175474e89094c44da98b954eedeac495271d0f
      --  1: val_2 (uint256) = 250000000000000000
      --  2: val_3 (address)
      --  0: 0000000000000000000000000000000000000000000000000000000000000020
      --  1: 0000000000000000000000000000000000000000000000000000000000000002 <===
      --  2: 0000000000000000000000006b175474e89094c44da98b954eedeac495271d0f
      --  3: 000000000000000000000000000000000000000000000000869d529b714a0000
      --  4: 000000000000000000000000f503017d7baf7fbc0fff7492b751025c6a78179b
      --  5: 0000000000000000000000006b175474e89094c44da98b954eedeac495271d0f
      --  6: 00000000000000000000000000000000000000000000000003782dace9d90000
      --  7: 00000000000000000000000000de4b13153673bcae2616b67bf822500d325fc3 <---
expected: --[{"val_1":"0x6b175474e89094c44da98b954eedeac495271d0f", "val_2":"9700000000000000000", "val_3":"0xf503017d7baf7fbc0fff7492b751025c6a78179b"}, {"val_1":"0x6b175474e89094c44da98b954eedeac495271d0f", "val_2":"250000000000000000", "val_3":"0x00de4b13153673bcae2616b67bf822500d325fc3"}]--?
result:   --[{"val_1":"0x6b175474e89094c44da98b954eedeac495271d0f", "val_2":"9700000000000000000", "val_3":"0xf503017d7baf7fbc0fff7492b751025c6a78179b"}, {"val_1":"0x6b175474e89094c44da98b954eedeac495271d0f", "val_2":"250000000000000000", "val_3":"0x00de4b13153673bcae2616b67bf822500d325fc3"}]--? 1
testName: decode donation tuple array (address token, uint256 amount, address recipient)[]
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.079 test_79                          ==> 
line: decode|decode complicated multi level tuple|function operate((address+uint256)[] accounts,(uint8+uint256,(bool+uint8+uint8+uint256),uint256+uint256+address+uint256+bytes)[] actions)|0x000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000002000000000000000000000000370e4d84b8e8bf093856d23cb4043b095214c3340b2691ef8672010ee086710f419be9e6c33654a11624d2877a8f5770096d102a000000000000000000000000370e4d84b8e8bf093856d23cb4043b095214c33400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000001e000000000000000000000000000000000000000000000000000000000000003a0000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000009002bab9a0f5d00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000160000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001aa535d3d0c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000ab33e884ec8fed4f5867246e4300228f3d6665610000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000016000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000097f769f05a23980000000000000000000000000000000000000000000000000000de0b6b3aece224fbc24d40b446c6a94a142dc41fae76f2d0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000016000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000005cdb5c15|[{"val_1":"0x370e4d84b8e8bf093856d23cb4043b095214c334", "val_2":"5043588733683792621175946945497712124696440476173407745608908406314328985642"}, {"val_1":"0x370e4d84b8e8bf093856d23cb4043b095214c334", "val_2":"0"}], 0, {"val_1":"false", "val_2":"52", "val_3":"42", "val_4":"314313455637166220426001862249185256324161913652"}, []
testType: decode
testName: decode complicated multi level tuple
signature: function operate((address+uint256)[] accounts,(uint8+uint256,(bool+uint8+uint8+uint256),uint256+uint256+address+uint256+bytes)[] actions) : function operate((address,uint256)[],(uint8,uint256)<(uint8,uint256)>uint8+uint256,(bool,uint8,uint8,uint256),uint256+uint256+address+uint256+bytes)[])

--------------------------------------------------
--4 : 51 : 0
--  0: accounts (tuple[])
--  1: val_0 (tuple<tuple>uint8+uint256)
--  2: val_1 (tuple)
--  3: actions (uint256+uint256+address+uint256+bytes)[])
--  0: 0000000000000000000000000000000000000000000000000000000000000040 <---
--  1: 00000000000000000000000000000000000000000000000000000000000000e0
--  2: 0000000000000000000000000000000000000000000000000000000000000002
--  3: 000000000000000000000000370e4d84b8e8bf093856d23cb4043b095214c334
--  4: 0b2691ef8672010ee086710f419be9e6c33654a11624d2877a8f5770096d102a
--  5: 000000000000000000000000370e4d84b8e8bf093856d23cb4043b095214c334
--  6: 0000000000000000000000000000000000000000000000000000000000000000
--  7: 0000000000000000000000000000000000000000000000000000000000000003
--  8: 0000000000000000000000000000000000000000000000000000000000000060
--  9: 00000000000000000000000000000000000000000000000000000000000001e0
-- 10: 00000000000000000000000000000000000000000000000000000000000003a0
-- 11: 0000000000000000000000000000000000000000000000000000000000000002
-- 12: 0000000000000000000000000000000000000000000000000000000000000001
-- 13: 0000000000000000000000000000000000000000000000000000000000000000
-- 14: 0000000000000000000000000000000000000000000000000000000000000000
-- 15: 0000000000000000000000000000000000000000000000000000000000000000
-- 16: 0000000000000000000000000000000000000000000000000009002bab9a0f5d
-- 17: 0000000000000000000000000000000000000000000000000000000000000000
-- 18: 0000000000000000000000000000000000000000000000000000000000000000
-- 19: 0000000000000000000000000000000000000000000000000000000000000000
-- 20: 0000000000000000000000000000000000000000000000000000000000000000
-- 21: 0000000000000000000000000000000000000000000000000000000000000160
-- 22: 0000000000000000000000000000000000000000000000000000000000000000
-- 23: 0000000000000000000000000000000000000000000000000000000000000003
-- 24: 0000000000000000000000000000000000000000000000000000000000000000
-- 25: 0000000000000000000000000000000000000000000000000000000000000001
-- 26: 0000000000000000000000000000000000000000000000000000000000000000
-- 27: 0000000000000000000000000000000000000000000000000000000000000000
-- 28: 000000000000000000000000000000000000000000000000001aa535d3d0c000
-- 29: 0000000000000000000000000000000000000000000000000000000000000000
-- 30: 0000000000000000000000000000000000000000000000000000000000000001
-- 31: 000000000000000000000000ab33e884ec8fed4f5867246e4300228f3d666561
-- 32: 0000000000000000000000000000000000000000000000000000000000000000
-- 33: 0000000000000000000000000000000000000000000000000000000000000160
-- 34: 0000000000000000000000000000000000000000000000000000000000000040
-- 35: 0000000000000000000000000000000000000000000000097f769f05a2398000
-- 36: 0000000000000000000000000000000000000000000000000de0b6b3a7640000
-- 37: 0000000000000000000000000000000000000000000000000000000000000008
-- 38: 0000000000000000000000000000000000000000000000000000000000000000
-- 39: 0000000000000000000000000000000000000000000000000000000000000000
-- 40: 0000000000000000000000000000000000000000000000000000000000000000
-- 41: 0000000000000000000000000000000000000000000000000000000000000000
-- 42: 0000000000000000000000000000000000000000000000000000000000000000
-- 43: 0000000000000000000000000000000000000000000000000000000000000000
-- 44: 0000000000000000000000000000000000000000000000000000000000000000
-- 45: 0000000000000000000000000ece224fbc24d40b446c6a94a142dc41fae76f2d
-- 46: 0000000000000000000000000000000000000000000000000000000000000000
-- 47: 0000000000000000000000000000000000000000000000000000000000000160
-- 48: 0000000000000000000000000000000000000000000000000000000000000040
-- 49: 0000000000000000000000000000000000000000000000000000000000000001
-- 50: 000000000000000000000000000000000000000000000000000000005cdb5c15
  --1 : 51 : 3 : 2
  --  0:  (tuple[2])
  --      tuple[][val_1(address) val_2(uint256) ]
  --  0: 0000000000000000000000000000000000000000000000000000000000000040
  --  1: 00000000000000000000000000000000000000000000000000000000000000e0
  --  2: 0000000000000000000000000000000000000000000000000000000000000002 <===
  --  3: 000000000000000000000000370e4d84b8e8bf093856d23cb4043b095214c334 <---
  --  4: 0b2691ef8672010ee086710f419be9e6c33654a11624d2877a8f5770096d102a
  --  5: 000000000000000000000000370e4d84b8e8bf093856d23cb4043b095214c334
  --  6: 0000000000000000000000000000000000000000000000000000000000000000
  --  7: 0000000000000000000000000000000000000000000000000000000000000003
  --  8: 0000000000000000000000000000000000000000000000000000000000000060
  --  9: 00000000000000000000000000000000000000000000000000000000000001e0
  -- 10: 00000000000000000000000000000000000000000000000000000000000003a0
  -- 11: 0000000000000000000000000000000000000000000000000000000000000002
  -- 12: 0000000000000000000000000000000000000000000000000000000000000001
  -- 13: 0000000000000000000000000000000000000000000000000000000000000000
  -- 14: 0000000000000000000000000000000000000000000000000000000000000000
  -- 15: 0000000000000000000000000000000000000000000000000000000000000000
  -- 16: 0000000000000000000000000000000000000000000000000009002bab9a0f5d
  -- 17: 0000000000000000000000000000000000000000000000000000000000000000
  -- 18: 0000000000000000000000000000000000000000000000000000000000000000
  -- 19: 0000000000000000000000000000000000000000000000000000000000000000
  -- 20: 0000000000000000000000000000000000000000000000000000000000000000
  -- 21: 0000000000000000000000000000000000000000000000000000000000000160
  -- 22: 0000000000000000000000000000000000000000000000000000000000000000
  -- 23: 0000000000000000000000000000000000000000000000000000000000000003
  -- 24: 0000000000000000000000000000000000000000000000000000000000000000
  -- 25: 0000000000000000000000000000000000000000000000000000000000000001
  -- 26: 0000000000000000000000000000000000000000000000000000000000000000
  -- 27: 0000000000000000000000000000000000000000000000000000000000000000
  -- 28: 000000000000000000000000000000000000000000000000001aa535d3d0c000
  -- 29: 0000000000000000000000000000000000000000000000000000000000000000
  -- 30: 0000000000000000000000000000000000000000000000000000000000000001
  -- 31: 000000000000000000000000ab33e884ec8fed4f5867246e4300228f3d666561
  -- 32: 0000000000000000000000000000000000000000000000000000000000000000
  -- 33: 0000000000000000000000000000000000000000000000000000000000000160
  -- 34: 0000000000000000000000000000000000000000000000000000000000000040
  -- 35: 0000000000000000000000000000000000000000000000097f769f05a2398000
  -- 36: 0000000000000000000000000000000000000000000000000de0b6b3a7640000
  -- 37: 0000000000000000000000000000000000000000000000000000000000000008
  -- 38: 0000000000000000000000000000000000000000000000000000000000000000
  -- 39: 0000000000000000000000000000000000000000000000000000000000000000
  -- 40: 0000000000000000000000000000000000000000000000000000000000000000
  -- 41: 0000000000000000000000000000000000000000000000000000000000000000
  -- 42: 0000000000000000000000000000000000000000000000000000000000000000
  -- 43: 0000000000000000000000000000000000000000000000000000000000000000
  -- 44: 0000000000000000000000000000000000000000000000000000000000000000
  -- 45: 0000000000000000000000000ece224fbc24d40b446c6a94a142dc41fae76f2d
  -- 46: 0000000000000000000000000000000000000000000000000000000000000000
  -- 47: 0000000000000000000000000000000000000000000000000000000000000160
  -- 48: 0000000000000000000000000000000000000000000000000000000000000040
  -- 49: 0000000000000000000000000000000000000000000000000000000000000001
  -- 50: 000000000000000000000000000000000000000000000000000000005cdb5c15
    --2 : 51 : 3 : 2
    --  0:  (tuple)
    --  1:  (tuple)
    --  0: 0000000000000000000000000000000000000000000000000000000000000040
    --  1: 00000000000000000000000000000000000000000000000000000000000000e0
    --  2: 0000000000000000000000000000000000000000000000000000000000000002 <===
    --  3: 000000000000000000000000370e4d84b8e8bf093856d23cb4043b095214c334 <---
    --  4: 0b2691ef8672010ee086710f419be9e6c33654a11624d2877a8f5770096d102a
    --  5: 000000000000000000000000370e4d84b8e8bf093856d23cb4043b095214c334
    --  6: 0000000000000000000000000000000000000000000000000000000000000000
    --  7: 0000000000000000000000000000000000000000000000000000000000000003
    --  8: 0000000000000000000000000000000000000000000000000000000000000060
    --  9: 00000000000000000000000000000000000000000000000000000000000001e0
    -- 10: 00000000000000000000000000000000000000000000000000000000000003a0
    -- 11: 0000000000000000000000000000000000000000000000000000000000000002
    -- 12: 0000000000000000000000000000000000000000000000000000000000000001
    -- 13: 0000000000000000000000000000000000000000000000000000000000000000
    -- 14: 0000000000000000000000000000000000000000000000000000000000000000
    -- 15: 0000000000000000000000000000000000000000000000000000000000000000
    -- 16: 0000000000000000000000000000000000000000000000000009002bab9a0f5d
    -- 17: 0000000000000000000000000000000000000000000000000000000000000000
    -- 18: 0000000000000000000000000000000000000000000000000000000000000000
    -- 19: 0000000000000000000000000000000000000000000000000000000000000000
    -- 20: 0000000000000000000000000000000000000000000000000000000000000000
    -- 21: 0000000000000000000000000000000000000000000000000000000000000160
    -- 22: 0000000000000000000000000000000000000000000000000000000000000000
    -- 23: 0000000000000000000000000000000000000000000000000000000000000003
    -- 24: 0000000000000000000000000000000000000000000000000000000000000000
    -- 25: 0000000000000000000000000000000000000000000000000000000000000001
    -- 26: 0000000000000000000000000000000000000000000000000000000000000000
    -- 27: 0000000000000000000000000000000000000000000000000000000000000000
    -- 28: 000000000000000000000000000000000000000000000000001aa535d3d0c000
    -- 29: 0000000000000000000000000000000000000000000000000000000000000000
    -- 30: 0000000000000000000000000000000000000000000000000000000000000001
    -- 31: 000000000000000000000000ab33e884ec8fed4f5867246e4300228f3d666561
    -- 32: 0000000000000000000000000000000000000000000000000000000000000000
    -- 33: 0000000000000000000000000000000000000000000000000000000000000160
    -- 34: 0000000000000000000000000000000000000000000000000000000000000040
    -- 35: 0000000000000000000000000000000000000000000000097f769f05a2398000
    -- 36: 0000000000000000000000000000000000000000000000000de0b6b3a7640000
    -- 37: 0000000000000000000000000000000000000000000000000000000000000008
    -- 38: 0000000000000000000000000000000000000000000000000000000000000000
    -- 39: 0000000000000000000000000000000000000000000000000000000000000000
    -- 40: 0000000000000000000000000000000000000000000000000000000000000000
    -- 41: 0000000000000000000000000000000000000000000000000000000000000000
    -- 42: 0000000000000000000000000000000000000000000000000000000000000000
    -- 43: 0000000000000000000000000000000000000000000000000000000000000000
    -- 44: 0000000000000000000000000000000000000000000000000000000000000000
    -- 45: 0000000000000000000000000ece224fbc24d40b446c6a94a142dc41fae76f2d
    -- 46: 0000000000000000000000000000000000000000000000000000000000000000
    -- 47: 0000000000000000000000000000000000000000000000000000000000000160
    -- 48: 0000000000000000000000000000000000000000000000000000000000000040
    -- 49: 0000000000000000000000000000000000000000000000000000000000000001
    -- 50: 000000000000000000000000000000000000000000000000000000005cdb5c15
      --2 : 51 : 3 : 2
      --  0: val_1 (address)
      --  1: val_2 (uint256)
      --  0: 0000000000000000000000000000000000000000000000000000000000000040
      --  1: 00000000000000000000000000000000000000000000000000000000000000e0
      --  2: 0000000000000000000000000000000000000000000000000000000000000002 <===
      --  3: 000000000000000000000000370e4d84b8e8bf093856d23cb4043b095214c334 <---
      --  4: 0b2691ef8672010ee086710f419be9e6c33654a11624d2877a8f5770096d102a
      --  5: 000000000000000000000000370e4d84b8e8bf093856d23cb4043b095214c334
      --  6: 0000000000000000000000000000000000000000000000000000000000000000
      --  7: 0000000000000000000000000000000000000000000000000000000000000003
      --  8: 0000000000000000000000000000000000000000000000000000000000000060
      --  9: 00000000000000000000000000000000000000000000000000000000000001e0
      -- 10: 00000000000000000000000000000000000000000000000000000000000003a0
      -- 11: 0000000000000000000000000000000000000000000000000000000000000002
      -- 12: 0000000000000000000000000000000000000000000000000000000000000001
      -- 13: 0000000000000000000000000000000000000000000000000000000000000000
      -- 14: 0000000000000000000000000000000000000000000000000000000000000000
      -- 15: 0000000000000000000000000000000000000000000000000000000000000000
      -- 16: 0000000000000000000000000000000000000000000000000009002bab9a0f5d
      -- 17: 0000000000000000000000000000000000000000000000000000000000000000
      -- 18: 0000000000000000000000000000000000000000000000000000000000000000
      -- 19: 0000000000000000000000000000000000000000000000000000000000000000
      -- 20: 0000000000000000000000000000000000000000000000000000000000000000
      -- 21: 0000000000000000000000000000000000000000000000000000000000000160
      -- 22: 0000000000000000000000000000000000000000000000000000000000000000
      -- 23: 0000000000000000000000000000000000000000000000000000000000000003
      -- 24: 0000000000000000000000000000000000000000000000000000000000000000
      -- 25: 0000000000000000000000000000000000000000000000000000000000000001
      -- 26: 0000000000000000000000000000000000000000000000000000000000000000
      -- 27: 0000000000000000000000000000000000000000000000000000000000000000
      -- 28: 000000000000000000000000000000000000000000000000001aa535d3d0c000
      -- 29: 0000000000000000000000000000000000000000000000000000000000000000
      -- 30: 0000000000000000000000000000000000000000000000000000000000000001
      -- 31: 000000000000000000000000ab33e884ec8fed4f5867246e4300228f3d666561
      -- 32: 0000000000000000000000000000000000000000000000000000000000000000
      -- 33: 0000000000000000000000000000000000000000000000000000000000000160
      -- 34: 0000000000000000000000000000000000000000000000000000000000000040
      -- 35: 0000000000000000000000000000000000000000000000097f769f05a2398000
      -- 36: 0000000000000000000000000000000000000000000000000de0b6b3a7640000
      -- 37: 0000000000000000000000000000000000000000000000000000000000000008
      -- 38: 0000000000000000000000000000000000000000000000000000000000000000
      -- 39: 0000000000000000000000000000000000000000000000000000000000000000
      -- 40: 0000000000000000000000000000000000000000000000000000000000000000
      -- 41: 0000000000000000000000000000000000000000000000000000000000000000
      -- 42: 0000000000000000000000000000000000000000000000000000000000000000
      -- 43: 0000000000000000000000000000000000000000000000000000000000000000
      -- 44: 0000000000000000000000000000000000000000000000000000000000000000
      -- 45: 0000000000000000000000000ece224fbc24d40b446c6a94a142dc41fae76f2d
      -- 46: 0000000000000000000000000000000000000000000000000000000000000000
      -- 47: 0000000000000000000000000000000000000000000000000000000000000160
      -- 48: 0000000000000000000000000000000000000000000000000000000000000040
      -- 49: 0000000000000000000000000000000000000000000000000000000000000001
      -- 50: 000000000000000000000000000000000000000000000000000000005cdb5c15
      --2 : 51 : 4 : 2
      --  0: val_1 (address) = 0x370e4d84b8e8bf093856d23cb4043b095214c334
      --  1: val_2 (uint256)
      --  0: 0000000000000000000000000000000000000000000000000000000000000040
      --  1: 00000000000000000000000000000000000000000000000000000000000000e0
      --  2: 0000000000000000000000000000000000000000000000000000000000000002 <===
      --  3: 000000000000000000000000370e4d84b8e8bf093856d23cb4043b095214c334
      --  4: 0b2691ef8672010ee086710f419be9e6c33654a11624d2877a8f5770096d102a <---
      --  5: 000000000000000000000000370e4d84b8e8bf093856d23cb4043b095214c334
      --  6: 0000000000000000000000000000000000000000000000000000000000000000
      --  7: 0000000000000000000000000000000000000000000000000000000000000003
      --  8: 0000000000000000000000000000000000000000000000000000000000000060
      --  9: 00000000000000000000000000000000000000000000000000000000000001e0
      -- 10: 00000000000000000000000000000000000000000000000000000000000003a0
      -- 11: 0000000000000000000000000000000000000000000000000000000000000002
      -- 12: 0000000000000000000000000000000000000000000000000000000000000001
      -- 13: 0000000000000000000000000000000000000000000000000000000000000000
      -- 14: 0000000000000000000000000000000000000000000000000000000000000000
      -- 15: 0000000000000000000000000000000000000000000000000000000000000000
      -- 16: 0000000000000000000000000000000000000000000000000009002bab9a0f5d
      -- 17: 0000000000000000000000000000000000000000000000000000000000000000
      -- 18: 0000000000000000000000000000000000000000000000000000000000000000
      -- 19: 0000000000000000000000000000000000000000000000000000000000000000
      -- 20: 0000000000000000000000000000000000000000000000000000000000000000
      -- 21: 0000000000000000000000000000000000000000000000000000000000000160
      -- 22: 0000000000000000000000000000000000000000000000000000000000000000
      -- 23: 0000000000000000000000000000000000000000000000000000000000000003
      -- 24: 0000000000000000000000000000000000000000000000000000000000000000
      -- 25: 0000000000000000000000000000000000000000000000000000000000000001
      -- 26: 0000000000000000000000000000000000000000000000000000000000000000
      -- 27: 0000000000000000000000000000000000000000000000000000000000000000
      -- 28: 000000000000000000000000000000000000000000000000001aa535d3d0c000
      -- 29: 0000000000000000000000000000000000000000000000000000000000000000
      -- 30: 0000000000000000000000000000000000000000000000000000000000000001
      -- 31: 000000000000000000000000ab33e884ec8fed4f5867246e4300228f3d666561
      -- 32: 0000000000000000000000000000000000000000000000000000000000000000
      -- 33: 0000000000000000000000000000000000000000000000000000000000000160
      -- 34: 0000000000000000000000000000000000000000000000000000000000000040
      -- 35: 0000000000000000000000000000000000000000000000097f769f05a2398000
      -- 36: 0000000000000000000000000000000000000000000000000de0b6b3a7640000
      -- 37: 0000000000000000000000000000000000000000000000000000000000000008
      -- 38: 0000000000000000000000000000000000000000000000000000000000000000
      -- 39: 0000000000000000000000000000000000000000000000000000000000000000
      -- 40: 0000000000000000000000000000000000000000000000000000000000000000
      -- 41: 0000000000000000000000000000000000000000000000000000000000000000
      -- 42: 0000000000000000000000000000000000000000000000000000000000000000
      -- 43: 0000000000000000000000000000000000000000000000000000000000000000
      -- 44: 0000000000000000000000000000000000000000000000000000000000000000
      -- 45: 0000000000000000000000000ece224fbc24d40b446c6a94a142dc41fae76f2d
      -- 46: 0000000000000000000000000000000000000000000000000000000000000000
      -- 47: 0000000000000000000000000000000000000000000000000000000000000160
      -- 48: 0000000000000000000000000000000000000000000000000000000000000040
      -- 49: 0000000000000000000000000000000000000000000000000000000000000001
      -- 50: 000000000000000000000000000000000000000000000000000000005cdb5c15
    --2 : 51 : 5 : 2
    --  0:  (tuple) = {"val_1":"0x370e4d84b8e8bf093856d23cb4043b095214c334", "val_2":"5043588733683792621175946945497712124696440476173407745608908406314328985642"}
    --  1:  (tuple)
    --  0: 0000000000000000000000000000000000000000000000000000000000000040
    --  1: 00000000000000000000000000000000000000000000000000000000000000e0
    --  2: 0000000000000000000000000000000000000000000000000000000000000002 <===
    --  3: 000000000000000000000000370e4d84b8e8bf093856d23cb4043b095214c334
    --  4: 0b2691ef8672010ee086710f419be9e6c33654a11624d2877a8f5770096d102a
    --  5: 000000000000000000000000370e4d84b8e8bf093856d23cb4043b095214c334 <---
    --  6: 0000000000000000000000000000000000000000000000000000000000000000
    --  7: 0000000000000000000000000000000000000000000000000000000000000003
    --  8: 0000000000000000000000000000000000000000000000000000000000000060
    --  9: 00000000000000000000000000000000000000000000000000000000000001e0
    -- 10: 00000000000000000000000000000000000000000000000000000000000003a0
    -- 11: 0000000000000000000000000000000000000000000000000000000000000002
    -- 12: 0000000000000000000000000000000000000000000000000000000000000001
    -- 13: 0000000000000000000000000000000000000000000000000000000000000000
    -- 14: 0000000000000000000000000000000000000000000000000000000000000000
    -- 15: 0000000000000000000000000000000000000000000000000000000000000000
    -- 16: 0000000000000000000000000000000000000000000000000009002bab9a0f5d
    -- 17: 0000000000000000000000000000000000000000000000000000000000000000
    -- 18: 0000000000000000000000000000000000000000000000000000000000000000
    -- 19: 0000000000000000000000000000000000000000000000000000000000000000
    -- 20: 0000000000000000000000000000000000000000000000000000000000000000
    -- 21: 0000000000000000000000000000000000000000000000000000000000000160
    -- 22: 0000000000000000000000000000000000000000000000000000000000000000
    -- 23: 0000000000000000000000000000000000000000000000000000000000000003
    -- 24: 0000000000000000000000000000000000000000000000000000000000000000
    -- 25: 0000000000000000000000000000000000000000000000000000000000000001
    -- 26: 0000000000000000000000000000000000000000000000000000000000000000
    -- 27: 0000000000000000000000000000000000000000000000000000000000000000
    -- 28: 000000000000000000000000000000000000000000000000001aa535d3d0c000
    -- 29: 0000000000000000000000000000000000000000000000000000000000000000
    -- 30: 0000000000000000000000000000000000000000000000000000000000000001
    -- 31: 000000000000000000000000ab33e884ec8fed4f5867246e4300228f3d666561
    -- 32: 0000000000000000000000000000000000000000000000000000000000000000
    -- 33: 0000000000000000000000000000000000000000000000000000000000000160
    -- 34: 0000000000000000000000000000000000000000000000000000000000000040
    -- 35: 0000000000000000000000000000000000000000000000097f769f05a2398000
    -- 36: 0000000000000000000000000000000000000000000000000de0b6b3a7640000
    -- 37: 0000000000000000000000000000000000000000000000000000000000000008
    -- 38: 0000000000000000000000000000000000000000000000000000000000000000
    -- 39: 0000000000000000000000000000000000000000000000000000000000000000
    -- 40: 0000000000000000000000000000000000000000000000000000000000000000
    -- 41: 0000000000000000000000000000000000000000000000000000000000000000
    -- 42: 0000000000000000000000000000000000000000000000000000000000000000
    -- 43: 0000000000000000000000000000000000000000000000000000000000000000
    -- 44: 0000000000000000000000000000000000000000000000000000000000000000
    -- 45: 0000000000000000000000000ece224fbc24d40b446c6a94a142dc41fae76f2d
    -- 46: 0000000000000000000000000000000000000000000000000000000000000000
    -- 47: 0000000000000000000000000000000000000000000000000000000000000160
    -- 48: 0000000000000000000000000000000000000000000000000000000000000040
    -- 49: 0000000000000000000000000000000000000000000000000000000000000001
    -- 50: 000000000000000000000000000000000000000000000000000000005cdb5c15
      --2 : 51 : 5 : 2
      --  0: val_1 (address)
      --  1: val_2 (uint256)
      --  0: 0000000000000000000000000000000000000000000000000000000000000040
      --  1: 00000000000000000000000000000000000000000000000000000000000000e0
      --  2: 0000000000000000000000000000000000000000000000000000000000000002 <===
      --  3: 000000000000000000000000370e4d84b8e8bf093856d23cb4043b095214c334
      --  4: 0b2691ef8672010ee086710f419be9e6c33654a11624d2877a8f5770096d102a
      --  5: 000000000000000000000000370e4d84b8e8bf093856d23cb4043b095214c334 <---
      --  6: 0000000000000000000000000000000000000000000000000000000000000000
      --  7: 0000000000000000000000000000000000000000000000000000000000000003
      --  8: 0000000000000000000000000000000000000000000000000000000000000060
      --  9: 00000000000000000000000000000000000000000000000000000000000001e0
      -- 10: 00000000000000000000000000000000000000000000000000000000000003a0
      -- 11: 0000000000000000000000000000000000000000000000000000000000000002
      -- 12: 0000000000000000000000000000000000000000000000000000000000000001
      -- 13: 0000000000000000000000000000000000000000000000000000000000000000
      -- 14: 0000000000000000000000000000000000000000000000000000000000000000
      -- 15: 0000000000000000000000000000000000000000000000000000000000000000
      -- 16: 0000000000000000000000000000000000000000000000000009002bab9a0f5d
      -- 17: 0000000000000000000000000000000000000000000000000000000000000000
      -- 18: 0000000000000000000000000000000000000000000000000000000000000000
      -- 19: 0000000000000000000000000000000000000000000000000000000000000000
      -- 20: 0000000000000000000000000000000000000000000000000000000000000000
      -- 21: 0000000000000000000000000000000000000000000000000000000000000160
      -- 22: 0000000000000000000000000000000000000000000000000000000000000000
      -- 23: 0000000000000000000000000000000000000000000000000000000000000003
      -- 24: 0000000000000000000000000000000000000000000000000000000000000000
      -- 25: 0000000000000000000000000000000000000000000000000000000000000001
      -- 26: 0000000000000000000000000000000000000000000000000000000000000000
      -- 27: 0000000000000000000000000000000000000000000000000000000000000000
      -- 28: 000000000000000000000000000000000000000000000000001aa535d3d0c000
      -- 29: 0000000000000000000000000000000000000000000000000000000000000000
      -- 30: 0000000000000000000000000000000000000000000000000000000000000001
      -- 31: 000000000000000000000000ab33e884ec8fed4f5867246e4300228f3d666561
      -- 32: 0000000000000000000000000000000000000000000000000000000000000000
      -- 33: 0000000000000000000000000000000000000000000000000000000000000160
      -- 34: 0000000000000000000000000000000000000000000000000000000000000040
      -- 35: 0000000000000000000000000000000000000000000000097f769f05a2398000
      -- 36: 0000000000000000000000000000000000000000000000000de0b6b3a7640000
      -- 37: 0000000000000000000000000000000000000000000000000000000000000008
      -- 38: 0000000000000000000000000000000000000000000000000000000000000000
      -- 39: 0000000000000000000000000000000000000000000000000000000000000000
      -- 40: 0000000000000000000000000000000000000000000000000000000000000000
      -- 41: 0000000000000000000000000000000000000000000000000000000000000000
      -- 42: 0000000000000000000000000000000000000000000000000000000000000000
      -- 43: 0000000000000000000000000000000000000000000000000000000000000000
      -- 44: 0000000000000000000000000000000000000000000000000000000000000000
      -- 45: 0000000000000000000000000ece224fbc24d40b446c6a94a142dc41fae76f2d
      -- 46: 0000000000000000000000000000000000000000000000000000000000000000
      -- 47: 0000000000000000000000000000000000000000000000000000000000000160
      -- 48: 0000000000000000000000000000000000000000000000000000000000000040
      -- 49: 0000000000000000000000000000000000000000000000000000000000000001
      -- 50: 000000000000000000000000000000000000000000000000000000005cdb5c15
      --2 : 51 : 6 : 2
      --  0: val_1 (address) = 0x370e4d84b8e8bf093856d23cb4043b095214c334
      --  1: val_2 (uint256)
      --  0: 0000000000000000000000000000000000000000000000000000000000000040
      --  1: 00000000000000000000000000000000000000000000000000000000000000e0
      --  2: 0000000000000000000000000000000000000000000000000000000000000002 <===
      --  3: 000000000000000000000000370e4d84b8e8bf093856d23cb4043b095214c334
      --  4: 0b2691ef8672010ee086710f419be9e6c33654a11624d2877a8f5770096d102a
      --  5: 000000000000000000000000370e4d84b8e8bf093856d23cb4043b095214c334
      --  6: 0000000000000000000000000000000000000000000000000000000000000000 <---
      --  7: 0000000000000000000000000000000000000000000000000000000000000003
      --  8: 0000000000000000000000000000000000000000000000000000000000000060
      --  9: 00000000000000000000000000000000000000000000000000000000000001e0
      -- 10: 00000000000000000000000000000000000000000000000000000000000003a0
      -- 11: 0000000000000000000000000000000000000000000000000000000000000002
      -- 12: 0000000000000000000000000000000000000000000000000000000000000001
      -- 13: 0000000000000000000000000000000000000000000000000000000000000000
      -- 14: 0000000000000000000000000000000000000000000000000000000000000000
      -- 15: 0000000000000000000000000000000000000000000000000000000000000000
      -- 16: 0000000000000000000000000000000000000000000000000009002bab9a0f5d
      -- 17: 0000000000000000000000000000000000000000000000000000000000000000
      -- 18: 0000000000000000000000000000000000000000000000000000000000000000
      -- 19: 0000000000000000000000000000000000000000000000000000000000000000
      -- 20: 0000000000000000000000000000000000000000000000000000000000000000
      -- 21: 0000000000000000000000000000000000000000000000000000000000000160
      -- 22: 0000000000000000000000000000000000000000000000000000000000000000
      -- 23: 0000000000000000000000000000000000000000000000000000000000000003
      -- 24: 0000000000000000000000000000000000000000000000000000000000000000
      -- 25: 0000000000000000000000000000000000000000000000000000000000000001
      -- 26: 0000000000000000000000000000000000000000000000000000000000000000
      -- 27: 0000000000000000000000000000000000000000000000000000000000000000
      -- 28: 000000000000000000000000000000000000000000000000001aa535d3d0c000
      -- 29: 0000000000000000000000000000000000000000000000000000000000000000
      -- 30: 0000000000000000000000000000000000000000000000000000000000000001
      -- 31: 000000000000000000000000ab33e884ec8fed4f5867246e4300228f3d666561
      -- 32: 0000000000000000000000000000000000000000000000000000000000000000
      -- 33: 0000000000000000000000000000000000000000000000000000000000000160
      -- 34: 0000000000000000000000000000000000000000000000000000000000000040
      -- 35: 0000000000000000000000000000000000000000000000097f769f05a2398000
      -- 36: 0000000000000000000000000000000000000000000000000de0b6b3a7640000
      -- 37: 0000000000000000000000000000000000000000000000000000000000000008
      -- 38: 0000000000000000000000000000000000000000000000000000000000000000
      -- 39: 0000000000000000000000000000000000000000000000000000000000000000
      -- 40: 0000000000000000000000000000000000000000000000000000000000000000
      -- 41: 0000000000000000000000000000000000000000000000000000000000000000
      -- 42: 0000000000000000000000000000000000000000000000000000000000000000
      -- 43: 0000000000000000000000000000000000000000000000000000000000000000
      -- 44: 0000000000000000000000000000000000000000000000000000000000000000
      -- 45: 0000000000000000000000000ece224fbc24d40b446c6a94a142dc41fae76f2d
      -- 46: 0000000000000000000000000000000000000000000000000000000000000000
      -- 47: 0000000000000000000000000000000000000000000000000000000000000160
      -- 48: 0000000000000000000000000000000000000000000000000000000000000040
      -- 49: 0000000000000000000000000000000000000000000000000000000000000001
      -- 50: 000000000000000000000000000000000000000000000000000000005cdb5c15
--4 : 51 : 1
--  0: accounts (tuple[]) = [{"val_1":"0x370e4d84b8e8bf093856d23cb4043b095214c334", "val_2":"5043588733683792621175946945497712124696440476173407745608908406314328985642"}, {"val_1":"0x370e4d84b8e8bf093856d23cb4043b095214c334", "val_2":"0"}]
--  1: val_0 (tuple<tuple>uint8+uint256)
--  2: val_1 (tuple)
--  3: actions (uint256+uint256+address+uint256+bytes)[])
--  0: 0000000000000000000000000000000000000000000000000000000000000040
--  1: 00000000000000000000000000000000000000000000000000000000000000e0 <---
--  2: 0000000000000000000000000000000000000000000000000000000000000002
--  3: 000000000000000000000000370e4d84b8e8bf093856d23cb4043b095214c334
--  4: 0b2691ef8672010ee086710f419be9e6c33654a11624d2877a8f5770096d102a
--  5: 000000000000000000000000370e4d84b8e8bf093856d23cb4043b095214c334
--  6: 0000000000000000000000000000000000000000000000000000000000000000
--  7: 0000000000000000000000000000000000000000000000000000000000000003
--  8: 0000000000000000000000000000000000000000000000000000000000000060
--  9: 00000000000000000000000000000000000000000000000000000000000001e0
-- 10: 00000000000000000000000000000000000000000000000000000000000003a0
-- 11: 0000000000000000000000000000000000000000000000000000000000000002
-- 12: 0000000000000000000000000000000000000000000000000000000000000001
-- 13: 0000000000000000000000000000000000000000000000000000000000000000
-- 14: 0000000000000000000000000000000000000000000000000000000000000000
-- 15: 0000000000000000000000000000000000000000000000000000000000000000
-- 16: 0000000000000000000000000000000000000000000000000009002bab9a0f5d
-- 17: 0000000000000000000000000000000000000000000000000000000000000000
-- 18: 0000000000000000000000000000000000000000000000000000000000000000
-- 19: 0000000000000000000000000000000000000000000000000000000000000000
-- 20: 0000000000000000000000000000000000000000000000000000000000000000
-- 21: 0000000000000000000000000000000000000000000000000000000000000160
-- 22: 0000000000000000000000000000000000000000000000000000000000000000
-- 23: 0000000000000000000000000000000000000000000000000000000000000003
-- 24: 0000000000000000000000000000000000000000000000000000000000000000
-- 25: 0000000000000000000000000000000000000000000000000000000000000001
-- 26: 0000000000000000000000000000000000000000000000000000000000000000
-- 27: 0000000000000000000000000000000000000000000000000000000000000000
-- 28: 000000000000000000000000000000000000000000000000001aa535d3d0c000
-- 29: 0000000000000000000000000000000000000000000000000000000000000000
-- 30: 0000000000000000000000000000000000000000000000000000000000000001
-- 31: 000000000000000000000000ab33e884ec8fed4f5867246e4300228f3d666561
-- 32: 0000000000000000000000000000000000000000000000000000000000000000
-- 33: 0000000000000000000000000000000000000000000000000000000000000160
-- 34: 0000000000000000000000000000000000000000000000000000000000000040
-- 35: 0000000000000000000000000000000000000000000000097f769f05a2398000
-- 36: 0000000000000000000000000000000000000000000000000de0b6b3a7640000
-- 37: 0000000000000000000000000000000000000000000000000000000000000008
-- 38: 0000000000000000000000000000000000000000000000000000000000000000
-- 39: 0000000000000000000000000000000000000000000000000000000000000000
-- 40: 0000000000000000000000000000000000000000000000000000000000000000
-- 41: 0000000000000000000000000000000000000000000000000000000000000000
-- 42: 0000000000000000000000000000000000000000000000000000000000000000
-- 43: 0000000000000000000000000000000000000000000000000000000000000000
-- 44: 0000000000000000000000000000000000000000000000000000000000000000
-- 45: 0000000000000000000000000ece224fbc24d40b446c6a94a142dc41fae76f2d
-- 46: 0000000000000000000000000000000000000000000000000000000000000000
-- 47: 0000000000000000000000000000000000000000000000000000000000000160
-- 48: 0000000000000000000000000000000000000000000000000000000000000040
-- 49: 0000000000000000000000000000000000000000000000000000000000000001
-- 50: 000000000000000000000000000000000000000000000000000000005cdb5c15
--4 : 51 : 2
--  0: accounts (tuple[]) = [{"val_1":"0x370e4d84b8e8bf093856d23cb4043b095214c334", "val_2":"5043588733683792621175946945497712124696440476173407745608908406314328985642"}, {"val_1":"0x370e4d84b8e8bf093856d23cb4043b095214c334", "val_2":"0"}]
--  1: val_0 (tuple<tuple>uint8+uint256) = 0
--  2: val_1 (tuple)
--  3: actions (uint256+uint256+address+uint256+bytes)[])
--  0: 0000000000000000000000000000000000000000000000000000000000000040
--  1: 00000000000000000000000000000000000000000000000000000000000000e0
--  2: 0000000000000000000000000000000000000000000000000000000000000002 <---
--  3: 000000000000000000000000370e4d84b8e8bf093856d23cb4043b095214c334
--  4: 0b2691ef8672010ee086710f419be9e6c33654a11624d2877a8f5770096d102a
--  5: 000000000000000000000000370e4d84b8e8bf093856d23cb4043b095214c334
--  6: 0000000000000000000000000000000000000000000000000000000000000000
--  7: 0000000000000000000000000000000000000000000000000000000000000003
--  8: 0000000000000000000000000000000000000000000000000000000000000060
--  9: 00000000000000000000000000000000000000000000000000000000000001e0
-- 10: 00000000000000000000000000000000000000000000000000000000000003a0
-- 11: 0000000000000000000000000000000000000000000000000000000000000002
-- 12: 0000000000000000000000000000000000000000000000000000000000000001
-- 13: 0000000000000000000000000000000000000000000000000000000000000000
-- 14: 0000000000000000000000000000000000000000000000000000000000000000
-- 15: 0000000000000000000000000000000000000000000000000000000000000000
-- 16: 0000000000000000000000000000000000000000000000000009002bab9a0f5d
-- 17: 0000000000000000000000000000000000000000000000000000000000000000
-- 18: 0000000000000000000000000000000000000000000000000000000000000000
-- 19: 0000000000000000000000000000000000000000000000000000000000000000
-- 20: 0000000000000000000000000000000000000000000000000000000000000000
-- 21: 0000000000000000000000000000000000000000000000000000000000000160
-- 22: 0000000000000000000000000000000000000000000000000000000000000000
-- 23: 0000000000000000000000000000000000000000000000000000000000000003
-- 24: 0000000000000000000000000000000000000000000000000000000000000000
-- 25: 0000000000000000000000000000000000000000000000000000000000000001
-- 26: 0000000000000000000000000000000000000000000000000000000000000000
-- 27: 0000000000000000000000000000000000000000000000000000000000000000
-- 28: 000000000000000000000000000000000000000000000000001aa535d3d0c000
-- 29: 0000000000000000000000000000000000000000000000000000000000000000
-- 30: 0000000000000000000000000000000000000000000000000000000000000001
-- 31: 000000000000000000000000ab33e884ec8fed4f5867246e4300228f3d666561
-- 32: 0000000000000000000000000000000000000000000000000000000000000000
-- 33: 0000000000000000000000000000000000000000000000000000000000000160
-- 34: 0000000000000000000000000000000000000000000000000000000000000040
-- 35: 0000000000000000000000000000000000000000000000097f769f05a2398000
-- 36: 0000000000000000000000000000000000000000000000000de0b6b3a7640000
-- 37: 0000000000000000000000000000000000000000000000000000000000000008
-- 38: 0000000000000000000000000000000000000000000000000000000000000000
-- 39: 0000000000000000000000000000000000000000000000000000000000000000
-- 40: 0000000000000000000000000000000000000000000000000000000000000000
-- 41: 0000000000000000000000000000000000000000000000000000000000000000
-- 42: 0000000000000000000000000000000000000000000000000000000000000000
-- 43: 0000000000000000000000000000000000000000000000000000000000000000
-- 44: 0000000000000000000000000000000000000000000000000000000000000000
-- 45: 0000000000000000000000000ece224fbc24d40b446c6a94a142dc41fae76f2d
-- 46: 0000000000000000000000000000000000000000000000000000000000000000
-- 47: 0000000000000000000000000000000000000000000000000000000000000160
-- 48: 0000000000000000000000000000000000000000000000000000000000000040
-- 49: 0000000000000000000000000000000000000000000000000000000000000001
-- 50: 000000000000000000000000000000000000000000000000000000005cdb5c15
  --4 : 51 : 2
  --  0: val_1 (bool)
  --  1: val_2 (uint8)
  --  2: val_3 (uint8)
  --  3: val_4 (uint256)
  --  0: 0000000000000000000000000000000000000000000000000000000000000040
  --  1: 00000000000000000000000000000000000000000000000000000000000000e0
  --  2: 0000000000000000000000000000000000000000000000000000000000000002 <---
  --  3: 000000000000000000000000370e4d84b8e8bf093856d23cb4043b095214c334
  --  4: 0b2691ef8672010ee086710f419be9e6c33654a11624d2877a8f5770096d102a
  --  5: 000000000000000000000000370e4d84b8e8bf093856d23cb4043b095214c334
  --  6: 0000000000000000000000000000000000000000000000000000000000000000
  --  7: 0000000000000000000000000000000000000000000000000000000000000003
  --  8: 0000000000000000000000000000000000000000000000000000000000000060
  --  9: 00000000000000000000000000000000000000000000000000000000000001e0
  -- 10: 00000000000000000000000000000000000000000000000000000000000003a0
  -- 11: 0000000000000000000000000000000000000000000000000000000000000002
  -- 12: 0000000000000000000000000000000000000000000000000000000000000001
  -- 13: 0000000000000000000000000000000000000000000000000000000000000000
  -- 14: 0000000000000000000000000000000000000000000000000000000000000000
  -- 15: 0000000000000000000000000000000000000000000000000000000000000000
  -- 16: 0000000000000000000000000000000000000000000000000009002bab9a0f5d
  -- 17: 0000000000000000000000000000000000000000000000000000000000000000
  -- 18: 0000000000000000000000000000000000000000000000000000000000000000
  -- 19: 0000000000000000000000000000000000000000000000000000000000000000
  -- 20: 0000000000000000000000000000000000000000000000000000000000000000
  -- 21: 0000000000000000000000000000000000000000000000000000000000000160
  -- 22: 0000000000000000000000000000000000000000000000000000000000000000
  -- 23: 0000000000000000000000000000000000000000000000000000000000000003
  -- 24: 0000000000000000000000000000000000000000000000000000000000000000
  -- 25: 0000000000000000000000000000000000000000000000000000000000000001
  -- 26: 0000000000000000000000000000000000000000000000000000000000000000
  -- 27: 0000000000000000000000000000000000000000000000000000000000000000
  -- 28: 000000000000000000000000000000000000000000000000001aa535d3d0c000
  -- 29: 0000000000000000000000000000000000000000000000000000000000000000
  -- 30: 0000000000000000000000000000000000000000000000000000000000000001
  -- 31: 000000000000000000000000ab33e884ec8fed4f5867246e4300228f3d666561
  -- 32: 0000000000000000000000000000000000000000000000000000000000000000
  -- 33: 0000000000000000000000000000000000000000000000000000000000000160
  -- 34: 0000000000000000000000000000000000000000000000000000000000000040
  -- 35: 0000000000000000000000000000000000000000000000097f769f05a2398000
  -- 36: 0000000000000000000000000000000000000000000000000de0b6b3a7640000
  -- 37: 0000000000000000000000000000000000000000000000000000000000000008
  -- 38: 0000000000000000000000000000000000000000000000000000000000000000
  -- 39: 0000000000000000000000000000000000000000000000000000000000000000
  -- 40: 0000000000000000000000000000000000000000000000000000000000000000
  -- 41: 0000000000000000000000000000000000000000000000000000000000000000
  -- 42: 0000000000000000000000000000000000000000000000000000000000000000
  -- 43: 0000000000000000000000000000000000000000000000000000000000000000
  -- 44: 0000000000000000000000000000000000000000000000000000000000000000
  -- 45: 0000000000000000000000000ece224fbc24d40b446c6a94a142dc41fae76f2d
  -- 46: 0000000000000000000000000000000000000000000000000000000000000000
  -- 47: 0000000000000000000000000000000000000000000000000000000000000160
  -- 48: 0000000000000000000000000000000000000000000000000000000000000040
  -- 49: 0000000000000000000000000000000000000000000000000000000000000001
  -- 50: 000000000000000000000000000000000000000000000000000000005cdb5c15
  --4 : 51 : 3
  --  0: val_1 (bool) = false
  --  1: val_2 (uint8)
  --  2: val_3 (uint8)
  --  3: val_4 (uint256)
  --  0: 0000000000000000000000000000000000000000000000000000000000000040
  --  1: 00000000000000000000000000000000000000000000000000000000000000e0
  --  2: 0000000000000000000000000000000000000000000000000000000000000002
  --  3: 000000000000000000000000370e4d84b8e8bf093856d23cb4043b095214c334 <---
  --  4: 0b2691ef8672010ee086710f419be9e6c33654a11624d2877a8f5770096d102a
  --  5: 000000000000000000000000370e4d84b8e8bf093856d23cb4043b095214c334
  --  6: 0000000000000000000000000000000000000000000000000000000000000000
  --  7: 0000000000000000000000000000000000000000000000000000000000000003
  --  8: 0000000000000000000000000000000000000000000000000000000000000060
  --  9: 00000000000000000000000000000000000000000000000000000000000001e0
  -- 10: 00000000000000000000000000000000000000000000000000000000000003a0
  -- 11: 0000000000000000000000000000000000000000000000000000000000000002
  -- 12: 0000000000000000000000000000000000000000000000000000000000000001
  -- 13: 0000000000000000000000000000000000000000000000000000000000000000
  -- 14: 0000000000000000000000000000000000000000000000000000000000000000
  -- 15: 0000000000000000000000000000000000000000000000000000000000000000
  -- 16: 0000000000000000000000000000000000000000000000000009002bab9a0f5d
  -- 17: 0000000000000000000000000000000000000000000000000000000000000000
  -- 18: 0000000000000000000000000000000000000000000000000000000000000000
  -- 19: 0000000000000000000000000000000000000000000000000000000000000000
  -- 20: 0000000000000000000000000000000000000000000000000000000000000000
  -- 21: 0000000000000000000000000000000000000000000000000000000000000160
  -- 22: 0000000000000000000000000000000000000000000000000000000000000000
  -- 23: 0000000000000000000000000000000000000000000000000000000000000003
  -- 24: 0000000000000000000000000000000000000000000000000000000000000000
  -- 25: 0000000000000000000000000000000000000000000000000000000000000001
  -- 26: 0000000000000000000000000000000000000000000000000000000000000000
  -- 27: 0000000000000000000000000000000000000000000000000000000000000000
  -- 28: 000000000000000000000000000000000000000000000000001aa535d3d0c000
  -- 29: 0000000000000000000000000000000000000000000000000000000000000000
  -- 30: 0000000000000000000000000000000000000000000000000000000000000001
  -- 31: 000000000000000000000000ab33e884ec8fed4f5867246e4300228f3d666561
  -- 32: 0000000000000000000000000000000000000000000000000000000000000000
  -- 33: 0000000000000000000000000000000000000000000000000000000000000160
  -- 34: 0000000000000000000000000000000000000000000000000000000000000040
  -- 35: 0000000000000000000000000000000000000000000000097f769f05a2398000
  -- 36: 0000000000000000000000000000000000000000000000000de0b6b3a7640000
  -- 37: 0000000000000000000000000000000000000000000000000000000000000008
  -- 38: 0000000000000000000000000000000000000000000000000000000000000000
  -- 39: 0000000000000000000000000000000000000000000000000000000000000000
  -- 40: 0000000000000000000000000000000000000000000000000000000000000000
  -- 41: 0000000000000000000000000000000000000000000000000000000000000000
  -- 42: 0000000000000000000000000000000000000000000000000000000000000000
  -- 43: 0000000000000000000000000000000000000000000000000000000000000000
  -- 44: 0000000000000000000000000000000000000000000000000000000000000000
  -- 45: 0000000000000000000000000ece224fbc24d40b446c6a94a142dc41fae76f2d
  -- 46: 0000000000000000000000000000000000000000000000000000000000000000
  -- 47: 0000000000000000000000000000000000000000000000000000000000000160
  -- 48: 0000000000000000000000000000000000000000000000000000000000000040
  -- 49: 0000000000000000000000000000000000000000000000000000000000000001
  -- 50: 000000000000000000000000000000000000000000000000000000005cdb5c15
  --4 : 51 : 4
  --  0: val_1 (bool) = false
  --  1: val_2 (uint8) = 52
  --  2: val_3 (uint8)
  --  3: val_4 (uint256)
  --  0: 0000000000000000000000000000000000000000000000000000000000000040
  --  1: 00000000000000000000000000000000000000000000000000000000000000e0
  --  2: 0000000000000000000000000000000000000000000000000000000000000002
  --  3: 000000000000000000000000370e4d84b8e8bf093856d23cb4043b095214c334
  --  4: 0b2691ef8672010ee086710f419be9e6c33654a11624d2877a8f5770096d102a <---
  --  5: 000000000000000000000000370e4d84b8e8bf093856d23cb4043b095214c334
  --  6: 0000000000000000000000000000000000000000000000000000000000000000
  --  7: 0000000000000000000000000000000000000000000000000000000000000003
  --  8: 0000000000000000000000000000000000000000000000000000000000000060
  --  9: 00000000000000000000000000000000000000000000000000000000000001e0
  -- 10: 00000000000000000000000000000000000000000000000000000000000003a0
  -- 11: 0000000000000000000000000000000000000000000000000000000000000002
  -- 12: 0000000000000000000000000000000000000000000000000000000000000001
  -- 13: 0000000000000000000000000000000000000000000000000000000000000000
  -- 14: 0000000000000000000000000000000000000000000000000000000000000000
  -- 15: 0000000000000000000000000000000000000000000000000000000000000000
  -- 16: 0000000000000000000000000000000000000000000000000009002bab9a0f5d
  -- 17: 0000000000000000000000000000000000000000000000000000000000000000
  -- 18: 0000000000000000000000000000000000000000000000000000000000000000
  -- 19: 0000000000000000000000000000000000000000000000000000000000000000
  -- 20: 0000000000000000000000000000000000000000000000000000000000000000
  -- 21: 0000000000000000000000000000000000000000000000000000000000000160
  -- 22: 0000000000000000000000000000000000000000000000000000000000000000
  -- 23: 0000000000000000000000000000000000000000000000000000000000000003
  -- 24: 0000000000000000000000000000000000000000000000000000000000000000
  -- 25: 0000000000000000000000000000000000000000000000000000000000000001
  -- 26: 0000000000000000000000000000000000000000000000000000000000000000
  -- 27: 0000000000000000000000000000000000000000000000000000000000000000
  -- 28: 000000000000000000000000000000000000000000000000001aa535d3d0c000
  -- 29: 0000000000000000000000000000000000000000000000000000000000000000
  -- 30: 0000000000000000000000000000000000000000000000000000000000000001
  -- 31: 000000000000000000000000ab33e884ec8fed4f5867246e4300228f3d666561
  -- 32: 0000000000000000000000000000000000000000000000000000000000000000
  -- 33: 0000000000000000000000000000000000000000000000000000000000000160
  -- 34: 0000000000000000000000000000000000000000000000000000000000000040
  -- 35: 0000000000000000000000000000000000000000000000097f769f05a2398000
  -- 36: 0000000000000000000000000000000000000000000000000de0b6b3a7640000
  -- 37: 0000000000000000000000000000000000000000000000000000000000000008
  -- 38: 0000000000000000000000000000000000000000000000000000000000000000
  -- 39: 0000000000000000000000000000000000000000000000000000000000000000
  -- 40: 0000000000000000000000000000000000000000000000000000000000000000
  -- 41: 0000000000000000000000000000000000000000000000000000000000000000
  -- 42: 0000000000000000000000000000000000000000000000000000000000000000
  -- 43: 0000000000000000000000000000000000000000000000000000000000000000
  -- 44: 0000000000000000000000000000000000000000000000000000000000000000
  -- 45: 0000000000000000000000000ece224fbc24d40b446c6a94a142dc41fae76f2d
  -- 46: 0000000000000000000000000000000000000000000000000000000000000000
  -- 47: 0000000000000000000000000000000000000000000000000000000000000160
  -- 48: 0000000000000000000000000000000000000000000000000000000000000040
  -- 49: 0000000000000000000000000000000000000000000000000000000000000001
  -- 50: 000000000000000000000000000000000000000000000000000000005cdb5c15
  --4 : 51 : 5
  --  0: val_1 (bool) = false
  --  1: val_2 (uint8) = 52
  --  2: val_3 (uint8) = 42
  --  3: val_4 (uint256)
  --  0: 0000000000000000000000000000000000000000000000000000000000000040
  --  1: 00000000000000000000000000000000000000000000000000000000000000e0
  --  2: 0000000000000000000000000000000000000000000000000000000000000002
  --  3: 000000000000000000000000370e4d84b8e8bf093856d23cb4043b095214c334
  --  4: 0b2691ef8672010ee086710f419be9e6c33654a11624d2877a8f5770096d102a
  --  5: 000000000000000000000000370e4d84b8e8bf093856d23cb4043b095214c334 <---
  --  6: 0000000000000000000000000000000000000000000000000000000000000000
  --  7: 0000000000000000000000000000000000000000000000000000000000000003
  --  8: 0000000000000000000000000000000000000000000000000000000000000060
  --  9: 00000000000000000000000000000000000000000000000000000000000001e0
  -- 10: 00000000000000000000000000000000000000000000000000000000000003a0
  -- 11: 0000000000000000000000000000000000000000000000000000000000000002
  -- 12: 0000000000000000000000000000000000000000000000000000000000000001
  -- 13: 0000000000000000000000000000000000000000000000000000000000000000
  -- 14: 0000000000000000000000000000000000000000000000000000000000000000
  -- 15: 0000000000000000000000000000000000000000000000000000000000000000
  -- 16: 0000000000000000000000000000000000000000000000000009002bab9a0f5d
  -- 17: 0000000000000000000000000000000000000000000000000000000000000000
  -- 18: 0000000000000000000000000000000000000000000000000000000000000000
  -- 19: 0000000000000000000000000000000000000000000000000000000000000000
  -- 20: 0000000000000000000000000000000000000000000000000000000000000000
  -- 21: 0000000000000000000000000000000000000000000000000000000000000160
  -- 22: 0000000000000000000000000000000000000000000000000000000000000000
  -- 23: 0000000000000000000000000000000000000000000000000000000000000003
  -- 24: 0000000000000000000000000000000000000000000000000000000000000000
  -- 25: 0000000000000000000000000000000000000000000000000000000000000001
  -- 26: 0000000000000000000000000000000000000000000000000000000000000000
  -- 27: 0000000000000000000000000000000000000000000000000000000000000000
  -- 28: 000000000000000000000000000000000000000000000000001aa535d3d0c000
  -- 29: 0000000000000000000000000000000000000000000000000000000000000000
  -- 30: 0000000000000000000000000000000000000000000000000000000000000001
  -- 31: 000000000000000000000000ab33e884ec8fed4f5867246e4300228f3d666561
  -- 32: 0000000000000000000000000000000000000000000000000000000000000000
  -- 33: 0000000000000000000000000000000000000000000000000000000000000160
  -- 34: 0000000000000000000000000000000000000000000000000000000000000040
  -- 35: 0000000000000000000000000000000000000000000000097f769f05a2398000
  -- 36: 0000000000000000000000000000000000000000000000000de0b6b3a7640000
  -- 37: 0000000000000000000000000000000000000000000000000000000000000008
  -- 38: 0000000000000000000000000000000000000000000000000000000000000000
  -- 39: 0000000000000000000000000000000000000000000000000000000000000000
  -- 40: 0000000000000000000000000000000000000000000000000000000000000000
  -- 41: 0000000000000000000000000000000000000000000000000000000000000000
  -- 42: 0000000000000000000000000000000000000000000000000000000000000000
  -- 43: 0000000000000000000000000000000000000000000000000000000000000000
  -- 44: 0000000000000000000000000000000000000000000000000000000000000000
  -- 45: 0000000000000000000000000ece224fbc24d40b446c6a94a142dc41fae76f2d
  -- 46: 0000000000000000000000000000000000000000000000000000000000000000
  -- 47: 0000000000000000000000000000000000000000000000000000000000000160
  -- 48: 0000000000000000000000000000000000000000000000000000000000000040
  -- 49: 0000000000000000000000000000000000000000000000000000000000000001
  -- 50: 000000000000000000000000000000000000000000000000000000005cdb5c15
--4 : 51 : 6
--  0: accounts (tuple[]) = [{"val_1":"0x370e4d84b8e8bf093856d23cb4043b095214c334", "val_2":"5043588733683792621175946945497712124696440476173407745608908406314328985642"}, {"val_1":"0x370e4d84b8e8bf093856d23cb4043b095214c334", "val_2":"0"}]
--  1: val_0 (tuple<tuple>uint8+uint256) = 0
--  2: val_1 (tuple) = {"val_1":"false", "val_2":"52", "val_3":"42", "val_4":"314313455637166220426001862249185256324161913652"}
--  3: actions (uint256+uint256+address+uint256+bytes)[])
--  0: 0000000000000000000000000000000000000000000000000000000000000040
--  1: 00000000000000000000000000000000000000000000000000000000000000e0
--  2: 0000000000000000000000000000000000000000000000000000000000000002
--  3: 000000000000000000000000370e4d84b8e8bf093856d23cb4043b095214c334
--  4: 0b2691ef8672010ee086710f419be9e6c33654a11624d2877a8f5770096d102a
--  5: 000000000000000000000000370e4d84b8e8bf093856d23cb4043b095214c334
--  6: 0000000000000000000000000000000000000000000000000000000000000000 <---
--  7: 0000000000000000000000000000000000000000000000000000000000000003
--  8: 0000000000000000000000000000000000000000000000000000000000000060
--  9: 00000000000000000000000000000000000000000000000000000000000001e0
-- 10: 00000000000000000000000000000000000000000000000000000000000003a0
-- 11: 0000000000000000000000000000000000000000000000000000000000000002
-- 12: 0000000000000000000000000000000000000000000000000000000000000001
-- 13: 0000000000000000000000000000000000000000000000000000000000000000
-- 14: 0000000000000000000000000000000000000000000000000000000000000000
-- 15: 0000000000000000000000000000000000000000000000000000000000000000
-- 16: 0000000000000000000000000000000000000000000000000009002bab9a0f5d
-- 17: 0000000000000000000000000000000000000000000000000000000000000000
-- 18: 0000000000000000000000000000000000000000000000000000000000000000
-- 19: 0000000000000000000000000000000000000000000000000000000000000000
-- 20: 0000000000000000000000000000000000000000000000000000000000000000
-- 21: 0000000000000000000000000000000000000000000000000000000000000160
-- 22: 0000000000000000000000000000000000000000000000000000000000000000
-- 23: 0000000000000000000000000000000000000000000000000000000000000003
-- 24: 0000000000000000000000000000000000000000000000000000000000000000
-- 25: 0000000000000000000000000000000000000000000000000000000000000001
-- 26: 0000000000000000000000000000000000000000000000000000000000000000
-- 27: 0000000000000000000000000000000000000000000000000000000000000000
-- 28: 000000000000000000000000000000000000000000000000001aa535d3d0c000
-- 29: 0000000000000000000000000000000000000000000000000000000000000000
-- 30: 0000000000000000000000000000000000000000000000000000000000000001
-- 31: 000000000000000000000000ab33e884ec8fed4f5867246e4300228f3d666561
-- 32: 0000000000000000000000000000000000000000000000000000000000000000
-- 33: 0000000000000000000000000000000000000000000000000000000000000160
-- 34: 0000000000000000000000000000000000000000000000000000000000000040
-- 35: 0000000000000000000000000000000000000000000000097f769f05a2398000
-- 36: 0000000000000000000000000000000000000000000000000de0b6b3a7640000
-- 37: 0000000000000000000000000000000000000000000000000000000000000008
-- 38: 0000000000000000000000000000000000000000000000000000000000000000
-- 39: 0000000000000000000000000000000000000000000000000000000000000000
-- 40: 0000000000000000000000000000000000000000000000000000000000000000
-- 41: 0000000000000000000000000000000000000000000000000000000000000000
-- 42: 0000000000000000000000000000000000000000000000000000000000000000
-- 43: 0000000000000000000000000000000000000000000000000000000000000000
-- 44: 0000000000000000000000000000000000000000000000000000000000000000
-- 45: 0000000000000000000000000ece224fbc24d40b446c6a94a142dc41fae76f2d
-- 46: 0000000000000000000000000000000000000000000000000000000000000000
-- 47: 0000000000000000000000000000000000000000000000000000000000000160
-- 48: 0000000000000000000000000000000000000000000000000000000000000040
-- 49: 0000000000000000000000000000000000000000000000000000000000000001
-- 50: 000000000000000000000000000000000000000000000000000000005cdb5c15
  --1 : 51 : 1 : 0
  --  0:  (uint256+uint256+address+uint256+bytes)[64])
  --      uint256+uint256+address+uint256+bytes)[][]
  --  0: 0000000000000000000000000000000000000000000000000000000000000040 <===
  --  1: 00000000000000000000000000000000000000000000000000000000000000e0 <---
  --  2: 0000000000000000000000000000000000000000000000000000000000000002
  --  3: 000000000000000000000000370e4d84b8e8bf093856d23cb4043b095214c334
  --  4: 0b2691ef8672010ee086710f419be9e6c33654a11624d2877a8f5770096d102a
  --  5: 000000000000000000000000370e4d84b8e8bf093856d23cb4043b095214c334
  --  6: 0000000000000000000000000000000000000000000000000000000000000000
  --  7: 0000000000000000000000000000000000000000000000000000000000000003
  --  8: 0000000000000000000000000000000000000000000000000000000000000060
  --  9: 00000000000000000000000000000000000000000000000000000000000001e0
  -- 10: 00000000000000000000000000000000000000000000000000000000000003a0
  -- 11: 0000000000000000000000000000000000000000000000000000000000000002
  -- 12: 0000000000000000000000000000000000000000000000000000000000000001
  -- 13: 0000000000000000000000000000000000000000000000000000000000000000
  -- 14: 0000000000000000000000000000000000000000000000000000000000000000
  -- 15: 0000000000000000000000000000000000000000000000000000000000000000
  -- 16: 0000000000000000000000000000000000000000000000000009002bab9a0f5d
  -- 17: 0000000000000000000000000000000000000000000000000000000000000000
  -- 18: 0000000000000000000000000000000000000000000000000000000000000000
  -- 19: 0000000000000000000000000000000000000000000000000000000000000000
  -- 20: 0000000000000000000000000000000000000000000000000000000000000000
  -- 21: 0000000000000000000000000000000000000000000000000000000000000160
  -- 22: 0000000000000000000000000000000000000000000000000000000000000000
  -- 23: 0000000000000000000000000000000000000000000000000000000000000003
  -- 24: 0000000000000000000000000000000000000000000000000000000000000000
  -- 25: 0000000000000000000000000000000000000000000000000000000000000001
  -- 26: 0000000000000000000000000000000000000000000000000000000000000000
  -- 27: 0000000000000000000000000000000000000000000000000000000000000000
  -- 28: 000000000000000000000000000000000000000000000000001aa535d3d0c000
  -- 29: 0000000000000000000000000000000000000000000000000000000000000000
  -- 30: 0000000000000000000000000000000000000000000000000000000000000001
  -- 31: 000000000000000000000000ab33e884ec8fed4f5867246e4300228f3d666561
  -- 32: 0000000000000000000000000000000000000000000000000000000000000000
  -- 33: 0000000000000000000000000000000000000000000000000000000000000160
  -- 34: 0000000000000000000000000000000000000000000000000000000000000040
  -- 35: 0000000000000000000000000000000000000000000000097f769f05a2398000
  -- 36: 0000000000000000000000000000000000000000000000000de0b6b3a7640000
  -- 37: 0000000000000000000000000000000000000000000000000000000000000008
  -- 38: 0000000000000000000000000000000000000000000000000000000000000000
  -- 39: 0000000000000000000000000000000000000000000000000000000000000000
  -- 40: 0000000000000000000000000000000000000000000000000000000000000000
  -- 41: 0000000000000000000000000000000000000000000000000000000000000000
  -- 42: 0000000000000000000000000000000000000000000000000000000000000000
  -- 43: 0000000000000000000000000000000000000000000000000000000000000000
  -- 44: 0000000000000000000000000000000000000000000000000000000000000000
  -- 45: 0000000000000000000000000ece224fbc24d40b446c6a94a142dc41fae76f2d
  -- 46: 0000000000000000000000000000000000000000000000000000000000000000
  -- 47: 0000000000000000000000000000000000000000000000000000000000000160
  -- 48: 0000000000000000000000000000000000000000000000000000000000000040
  -- 49: 0000000000000000000000000000000000000000000000000000000000000001
  -- 50: 000000000000000000000000000000000000000000000000000000005cdb5c15
TIME ~ CLOCK - <WARNG> : dataStart(64) larger than nDataItems(51). Ignoring...
expected: --[{"val_1":"0x370e4d84b8e8bf093856d23cb4043b095214c334", "val_2":"5043588733683792621175946945497712124696440476173407745608908406314328985642"}, {"val_1":"0x370e4d84b8e8bf093856d23cb4043b095214c334", "val_2":"0"}], 0, {"val_1":"false", "val_2":"52", "val_3":"42", "val_4":"314313455637166220426001862249185256324161913652"}, []--?
result:   --[{"val_1":"0x370e4d84b8e8bf093856d23cb4043b095214c334", "val_2":"5043588733683792621175946945497712124696440476173407745608908406314328985642"}, {"val_1":"0x370e4d84b8e8bf093856d23cb4043b095214c334", "val_2":"0"}], 0, {"val_1":"false", "val_2":"52", "val_3":"42", "val_4":"314313455637166220426001862249185256324161913652"},--? 0
testName: decode complicated multi level tuple
passed 'func.doTest(line)' is true
...passed

Done...
