abiTest argc: 3 [1:generation] [2:encoding] 
abiTest generation encoding 
Generation test...
Testing of already sorted JSON
{
  "address": "0x0",
  "interfaces": [
    {
      "name": "a",
      "type": "function",
      "stateMutability": "nonpayable",
      "signature": "a()",
      "encoding": "0x0dbe671f"
    },
    {
      "name": "c",
      "type": "function",
      "stateMutability": "nonpayable",
      "signature": "c()",
      "encoding": "0xc3da42b8"
    },
    {
      "name": "e",
      "type": "function",
      "stateMutability": "nonpayable",
      "signature": "e()",
      "encoding": "0xffae15ba"
    },
    {
      "name": "m",
      "type": "function",
      "stateMutability": "nonpayable",
      "signature": "m()",
      "encoding": "0x5a2ee019"
    },
    {
      "name": "d",
      "type": "event",
      "stateMutability": "nonpayable",
      "signature": "d()",
      "encoding": "0x8a054ac2e444b80bc3fb604e855f19d395adb9d8fc51ab7f53cbd727f64b91f2"
    }
  ]
}

Testing of not sorted JSON
{
  "address": "0x0",
  "interfaces": [
    {
      "name": "a",
      "type": "function",
      "stateMutability": "nonpayable",
      "signature": "a()",
      "encoding": "0x0dbe671f"
    },
    {
      "name": "aa1",
      "type": "function",
      "stateMutability": "nonpayable",
      "signature": "aa1()",
      "encoding": "0x74d0d855"
    },
    {
      "name": "az",
      "type": "function",
      "stateMutability": "nonpayable",
      "signature": "az()",
      "encoding": "0x73fc24ec"
    },
    {
      "name": "ba1",
      "type": "function",
      "stateMutability": "nonpayable",
      "signature": "ba1()",
      "encoding": "0x53241b65"
    },
    {
      "name": "z",
      "type": "function",
      "stateMutability": "nonpayable",
      "signature": "z()",
      "encoding": "0xc5d7802e"
    },
    {
      "name": "za1",
      "type": "function",
      "stateMutability": "nonpayable",
      "signature": "za1()",
      "encoding": "0xb7938cb5"
    },
    {
      "name": "zz",
      "type": "function",
      "stateMutability": "nonpayable",
      "signature": "zz()",
      "encoding": "0xfa14c2df"
    },
    {
      "name": "b",
      "type": "event",
      "stateMutability": "nonpayable",
      "signature": "b()",
      "encoding": "0x4df7e3d0fdffd35719c59893b4839a04b686be9ac7bec9cdd04a272e9ad7c628"
    },
    {
      "name": "bz",
      "type": "event",
      "stateMutability": "nonpayable",
      "signature": "bz()",
      "encoding": "0x3c7df70c450c6c7f893b4418119a685152cc821c054129201df48ec660f69273"
    }
  ]
}

...passed

Done...
Encodings test...
	event: ContributionMade(address) encoding: 0x97a3367c201ad38e0d37322fd0ffa1b93457541ae8baf20eb9aa50bb83fcabef ✓
	event: RefundPayoutClaimed(uint256) encoding: 0x5e5c64a3ed3fb7fd17b9ca165f3ebe344a48d7c845dc947fc27249da676e7fbd ✓
	event: BeneficiaryPayoutClaimed(address,uint256) encoding: 0x22c1e24047f1e0c1af6f78290547f44645cdd2ad4d06b09115a162e41460c4d5 ✓
	function: emergencyCall() encoding: 0x299ed37a ✓
	function: setup(address,address) encoding: 0x2d34ba79 ✓
	function: withdrawFunding() encoding: 0x30b9af98 ✓
	function: changeBaseValue(uint256) encoding: 0x92a781d8 ✓
	function: fund() encoding: 0xb60d4288 ✓
	function: updateStage() encoding: 0xc062f578 ✓
	function: withdrawForWorkshop() encoding: 0xf3a44fe1 ✓
	function: issueTokens(address,uint256) encoding: 0x475a9fa9 ✓
	function: depositRevenue() encoding: 0x44e43cb8 ✓
	function: withdrawRevenue() encoding: 0x4f573cb2 ✓
	function: softWithdrawRevenueFor(address) encoding: 0x5d0be9de ✓
	event: Transfer(address,address,uint256) encoding: 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef ✓
	event: Approval(address,address,uint256) encoding: 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925 ✓
	function: transferFrom(address,address,uint256) encoding: 0x23b872dd ✓
	function: approve(address,uint256) encoding: 0x095ea7b3 ✓
	function: transfer(address,uint256) encoding: 0xa9059cbb ✓
...passed

Done...
