getTrans argc: 5 [1:0xfa62ab036f36b4755bfa0d6e3e641d08daa7e41e95b0c1f2246485702319efb8] [2:--fmt] [3:json] [4:--articulate] 
getTrans 0xfa62ab036f36b4755bfa0d6e3e641d08daa7e41e95b0c1f2246485702319efb8 --fmt json --articulate 
TIME ~ CLOCK - <INFO>  : Loaded 1685 interfaces from: $CACHE/abis/known.bin
{ "data": [
TIME ~ CLOCK - <INFO>  : loadAbiFromFile: $CACHE/abis/0x1e0447b19bb6ecfdae1e4ae1694b0c3659614e4e.json
TIME ~ CLOCK - <INFO>  : Inserting: function-ownerSetSpreadPremium(uint256,(uint256))
TIME ~ CLOCK - <INFO>  : Inserting: function-getIsGlobalOperator(address)
TIME ~ CLOCK - <INFO>  : Inserting: function-getMarketTokenAddress(uint256)
TIME ~ CLOCK - <INFO>  : Inserting: function-ownerSetInterestSetter(uint256,address)
TIME ~ CLOCK - <INFO>  : Inserting: function-getAccountValues((address,uint256))
TIME ~ CLOCK - <INFO>  : Inserting: function-getMarketPriceOracle(uint256)
TIME ~ CLOCK - <INFO>  : Inserting: function-getMarketInterestSetter(uint256)
TIME ~ CLOCK - <INFO>  : Inserting: function-getMarketSpreadPremium(uint256)
TIME ~ CLOCK - <INFO>  : Inserting: function-getNumMarkets()
TIME ~ CLOCK - <INFO>  : Inserting: function-ownerWithdrawUnsupportedTokens(address,address)
TIME ~ CLOCK - <INFO>  : Inserting: function-ownerSetMinBorrowedValue((uint256))
TIME ~ CLOCK - <INFO>  : Inserting: function-ownerSetLiquidationSpread((uint256))
TIME ~ CLOCK - <INFO>  : Inserting: function-ownerSetEarningsRate((uint256))
TIME ~ CLOCK - <INFO>  : Inserting: function-getIsLocalOperator(address,address)
TIME ~ CLOCK - <INFO>  : Inserting: function-getAccountPar((address,uint256),uint256)
TIME ~ CLOCK - <INFO>  : Inserting: function-ownerSetMarginPremium(uint256,(uint256))
TIME ~ CLOCK - <INFO>  : Inserting: function-getMarginRatio()
TIME ~ CLOCK - <INFO>  : Inserting: function-getMarketCurrentIndex(uint256)
TIME ~ CLOCK - <INFO>  : Inserting: function-getMarketIsClosing(uint256)
TIME ~ CLOCK - <INFO>  : Inserting: function-getRiskParams()
TIME ~ CLOCK - <INFO>  : Inserting: function-getAccountBalances((address,uint256))
TIME ~ CLOCK - <INFO>  : Inserting: function-renounceOwnership()
TIME ~ CLOCK - <INFO>  : Inserting: function-getMinBorrowedValue()
TIME ~ CLOCK - <INFO>  : Inserting: function-setOperators((address,bool)[])
TIME ~ CLOCK - <INFO>  : Inserting: function-getMarketPrice(uint256)
TIME ~ CLOCK - <INFO>  : Inserting: function-owner()
TIME ~ CLOCK - <INFO>  : Inserting: function-isOwner()
TIME ~ CLOCK - <INFO>  : Inserting: function-ownerWithdrawExcessTokens(uint256,address)
TIME ~ CLOCK - <INFO>  : Inserting: function-ownerAddMarket(address,address,address,(uint256),(uint256))
TIME ~ CLOCK - <INFO>  : Inserting: function-operate((address,uint256)[],(uint8,uint256,(bool,uint8,uint8,uint256),uint256,uint256,address,uint256,bytes)[])
TIME ~ CLOCK - <INFO>  : Inserting: function-getMarketWithInfo(uint256)
TIME ~ CLOCK - <INFO>  : Inserting: function-ownerSetMarginRatio((uint256))
TIME ~ CLOCK - <INFO>  : Inserting: function-getLiquidationSpread()
TIME ~ CLOCK - <INFO>  : Inserting: function-getAccountWei((address,uint256),uint256)
TIME ~ CLOCK - <INFO>  : Inserting: function-getMarketTotalPar(uint256)
TIME ~ CLOCK - <INFO>  : Inserting: function-getLiquidationSpreadForPair(uint256,uint256)
TIME ~ CLOCK - <INFO>  : Inserting: function-getNumExcessTokens(uint256)
TIME ~ CLOCK - <INFO>  : Inserting: function-getMarketCachedIndex(uint256)
TIME ~ CLOCK - <INFO>  : Inserting: function-getAccountStatus((address,uint256))
TIME ~ CLOCK - <INFO>  : Inserting: function-getEarningsRate()
TIME ~ CLOCK - <INFO>  : Inserting: function-ownerSetPriceOracle(uint256,address)
TIME ~ CLOCK - <INFO>  : Inserting: function-getRiskLimits()
TIME ~ CLOCK - <INFO>  : Inserting: function-getMarket(uint256)
TIME ~ CLOCK - <INFO>  : Inserting: function-ownerSetIsClosing(uint256,bool)
TIME ~ CLOCK - <INFO>  : Inserting: function-ownerSetGlobalOperator(address,bool)
TIME ~ CLOCK - <INFO>  : Inserting: function-transferOwnership(address)
TIME ~ CLOCK - <INFO>  : Inserting: function-getAdjustedAccountValues((address,uint256))
TIME ~ CLOCK - <INFO>  : Inserting: function-getMarketMarginPremium(uint256)
TIME ~ CLOCK - <INFO>  : Inserting: function-getMarketInterestRate(uint256)
TIME ~ CLOCK - <INFO>  : Inserting: constructor-(((uint256),(uint256),(uint256),(uint256)),(uint64,uint64,uint64,uint64,uint64,uint128))
TIME ~ CLOCK - <INFO>  : Inserting: event-LogOperatorSet(address,address,bool)
TIME ~ CLOCK - <INFO>  : Inserting: event-OwnershipTransferred(address,address)
TIME ~ CLOCK - <INFO>  : loadAbiFromFile: $CACHE/abis/0x1e0447b19bb6ecfdae1e4ae1694b0c3659614e4e.json
TIME ~ CLOCK - <INFO>  : Skipping: function-ownerSetSpreadPremium(uint256,(uint256))
TIME ~ CLOCK - <INFO>  : Skipping: function-getIsGlobalOperator(address)
TIME ~ CLOCK - <INFO>  : Skipping: function-getMarketTokenAddress(uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-ownerSetInterestSetter(uint256,address)
TIME ~ CLOCK - <INFO>  : Skipping: function-getAccountValues((address,uint256))
TIME ~ CLOCK - <INFO>  : Skipping: function-getMarketPriceOracle(uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-getMarketInterestSetter(uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-getMarketSpreadPremium(uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-getNumMarkets()
TIME ~ CLOCK - <INFO>  : Skipping: function-ownerWithdrawUnsupportedTokens(address,address)
TIME ~ CLOCK - <INFO>  : Skipping: function-ownerSetMinBorrowedValue((uint256))
TIME ~ CLOCK - <INFO>  : Skipping: function-ownerSetLiquidationSpread((uint256))
TIME ~ CLOCK - <INFO>  : Skipping: function-ownerSetEarningsRate((uint256))
TIME ~ CLOCK - <INFO>  : Skipping: function-getIsLocalOperator(address,address)
TIME ~ CLOCK - <INFO>  : Skipping: function-getAccountPar((address,uint256),uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-ownerSetMarginPremium(uint256,(uint256))
TIME ~ CLOCK - <INFO>  : Skipping: function-getMarginRatio()
TIME ~ CLOCK - <INFO>  : Skipping: function-getMarketCurrentIndex(uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-getMarketIsClosing(uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-getRiskParams()
TIME ~ CLOCK - <INFO>  : Skipping: function-getAccountBalances((address,uint256))
TIME ~ CLOCK - <INFO>  : Skipping: function-renounceOwnership()
TIME ~ CLOCK - <INFO>  : Skipping: function-getMinBorrowedValue()
TIME ~ CLOCK - <INFO>  : Skipping: function-setOperators((address,bool)[])
TIME ~ CLOCK - <INFO>  : Skipping: function-getMarketPrice(uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-owner()
TIME ~ CLOCK - <INFO>  : Skipping: function-isOwner()
TIME ~ CLOCK - <INFO>  : Skipping: function-ownerWithdrawExcessTokens(uint256,address)
TIME ~ CLOCK - <INFO>  : Skipping: function-ownerAddMarket(address,address,address,(uint256),(uint256))
TIME ~ CLOCK - <INFO>  : Skipping: function-operate((address,uint256)[],(uint8,uint256,(bool,uint8,uint8,uint256),uint256,uint256,address,uint256,bytes)[])
TIME ~ CLOCK - <INFO>  : Skipping: function-getMarketWithInfo(uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-ownerSetMarginRatio((uint256))
TIME ~ CLOCK - <INFO>  : Skipping: function-getLiquidationSpread()
TIME ~ CLOCK - <INFO>  : Skipping: function-getAccountWei((address,uint256),uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-getMarketTotalPar(uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-getLiquidationSpreadForPair(uint256,uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-getNumExcessTokens(uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-getMarketCachedIndex(uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-getAccountStatus((address,uint256))
TIME ~ CLOCK - <INFO>  : Skipping: function-getEarningsRate()
TIME ~ CLOCK - <INFO>  : Skipping: function-ownerSetPriceOracle(uint256,address)
TIME ~ CLOCK - <INFO>  : Skipping: function-getRiskLimits()
TIME ~ CLOCK - <INFO>  : Skipping: function-getMarket(uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-ownerSetIsClosing(uint256,bool)
TIME ~ CLOCK - <INFO>  : Skipping: function-ownerSetGlobalOperator(address,bool)
TIME ~ CLOCK - <INFO>  : Skipping: function-transferOwnership(address)
TIME ~ CLOCK - <INFO>  : Skipping: function-getAdjustedAccountValues((address,uint256))
TIME ~ CLOCK - <INFO>  : Skipping: function-getMarketMarginPremium(uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-getMarketInterestRate(uint256)
TIME ~ CLOCK - <INFO>  : Skipping: constructor-(((uint256),(uint256),(uint256),(uint256)),(uint64,uint64,uint64,uint64,uint64,uint128))
TIME ~ CLOCK - <INFO>  : Skipping: event-LogOperatorSet(address,address,bool)
TIME ~ CLOCK - <INFO>  : Skipping: event-OwnershipTransferred(address,address)
TIME ~ CLOCK - <INFO>  : loadAbiFromFile: $CACHE/abis/0x1e0447b19bb6ecfdae1e4ae1694b0c3659614e4e.json
TIME ~ CLOCK - <INFO>  : Skipping: function-ownerSetSpreadPremium(uint256,(uint256))
TIME ~ CLOCK - <INFO>  : Skipping: function-getIsGlobalOperator(address)
TIME ~ CLOCK - <INFO>  : Skipping: function-getMarketTokenAddress(uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-ownerSetInterestSetter(uint256,address)
TIME ~ CLOCK - <INFO>  : Skipping: function-getAccountValues((address,uint256))
TIME ~ CLOCK - <INFO>  : Skipping: function-getMarketPriceOracle(uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-getMarketInterestSetter(uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-getMarketSpreadPremium(uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-getNumMarkets()
TIME ~ CLOCK - <INFO>  : Skipping: function-ownerWithdrawUnsupportedTokens(address,address)
TIME ~ CLOCK - <INFO>  : Skipping: function-ownerSetMinBorrowedValue((uint256))
TIME ~ CLOCK - <INFO>  : Skipping: function-ownerSetLiquidationSpread((uint256))
TIME ~ CLOCK - <INFO>  : Skipping: function-ownerSetEarningsRate((uint256))
TIME ~ CLOCK - <INFO>  : Skipping: function-getIsLocalOperator(address,address)
TIME ~ CLOCK - <INFO>  : Skipping: function-getAccountPar((address,uint256),uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-ownerSetMarginPremium(uint256,(uint256))
TIME ~ CLOCK - <INFO>  : Skipping: function-getMarginRatio()
TIME ~ CLOCK - <INFO>  : Skipping: function-getMarketCurrentIndex(uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-getMarketIsClosing(uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-getRiskParams()
TIME ~ CLOCK - <INFO>  : Skipping: function-getAccountBalances((address,uint256))
TIME ~ CLOCK - <INFO>  : Skipping: function-renounceOwnership()
TIME ~ CLOCK - <INFO>  : Skipping: function-getMinBorrowedValue()
TIME ~ CLOCK - <INFO>  : Skipping: function-setOperators((address,bool)[])
TIME ~ CLOCK - <INFO>  : Skipping: function-getMarketPrice(uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-owner()
TIME ~ CLOCK - <INFO>  : Skipping: function-isOwner()
TIME ~ CLOCK - <INFO>  : Skipping: function-ownerWithdrawExcessTokens(uint256,address)
TIME ~ CLOCK - <INFO>  : Skipping: function-ownerAddMarket(address,address,address,(uint256),(uint256))
TIME ~ CLOCK - <INFO>  : Skipping: function-operate((address,uint256)[],(uint8,uint256,(bool,uint8,uint8,uint256),uint256,uint256,address,uint256,bytes)[])
TIME ~ CLOCK - <INFO>  : Skipping: function-getMarketWithInfo(uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-ownerSetMarginRatio((uint256))
TIME ~ CLOCK - <INFO>  : Skipping: function-getLiquidationSpread()
TIME ~ CLOCK - <INFO>  : Skipping: function-getAccountWei((address,uint256),uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-getMarketTotalPar(uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-getLiquidationSpreadForPair(uint256,uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-getNumExcessTokens(uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-getMarketCachedIndex(uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-getAccountStatus((address,uint256))
TIME ~ CLOCK - <INFO>  : Skipping: function-getEarningsRate()
TIME ~ CLOCK - <INFO>  : Skipping: function-ownerSetPriceOracle(uint256,address)
TIME ~ CLOCK - <INFO>  : Skipping: function-getRiskLimits()
TIME ~ CLOCK - <INFO>  : Skipping: function-getMarket(uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-ownerSetIsClosing(uint256,bool)
TIME ~ CLOCK - <INFO>  : Skipping: function-ownerSetGlobalOperator(address,bool)
TIME ~ CLOCK - <INFO>  : Skipping: function-transferOwnership(address)
TIME ~ CLOCK - <INFO>  : Skipping: function-getAdjustedAccountValues((address,uint256))
TIME ~ CLOCK - <INFO>  : Skipping: function-getMarketMarginPremium(uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-getMarketInterestRate(uint256)
TIME ~ CLOCK - <INFO>  : Skipping: constructor-(((uint256),(uint256),(uint256),(uint256)),(uint64,uint64,uint64,uint64,uint64,uint128))
TIME ~ CLOCK - <INFO>  : Skipping: event-LogOperatorSet(address,address,bool)
TIME ~ CLOCK - <INFO>  : Skipping: event-OwnershipTransferred(address,address)
TIME ~ CLOCK - <INFO>  : loadAbiFromFile: $CACHE/abis/0x1e0447b19bb6ecfdae1e4ae1694b0c3659614e4e.json
TIME ~ CLOCK - <INFO>  : Skipping: function-ownerSetSpreadPremium(uint256,(uint256))
TIME ~ CLOCK - <INFO>  : Skipping: function-getIsGlobalOperator(address)
TIME ~ CLOCK - <INFO>  : Skipping: function-getMarketTokenAddress(uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-ownerSetInterestSetter(uint256,address)
TIME ~ CLOCK - <INFO>  : Skipping: function-getAccountValues((address,uint256))
TIME ~ CLOCK - <INFO>  : Skipping: function-getMarketPriceOracle(uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-getMarketInterestSetter(uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-getMarketSpreadPremium(uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-getNumMarkets()
TIME ~ CLOCK - <INFO>  : Skipping: function-ownerWithdrawUnsupportedTokens(address,address)
TIME ~ CLOCK - <INFO>  : Skipping: function-ownerSetMinBorrowedValue((uint256))
TIME ~ CLOCK - <INFO>  : Skipping: function-ownerSetLiquidationSpread((uint256))
TIME ~ CLOCK - <INFO>  : Skipping: function-ownerSetEarningsRate((uint256))
TIME ~ CLOCK - <INFO>  : Skipping: function-getIsLocalOperator(address,address)
TIME ~ CLOCK - <INFO>  : Skipping: function-getAccountPar((address,uint256),uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-ownerSetMarginPremium(uint256,(uint256))
TIME ~ CLOCK - <INFO>  : Skipping: function-getMarginRatio()
TIME ~ CLOCK - <INFO>  : Skipping: function-getMarketCurrentIndex(uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-getMarketIsClosing(uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-getRiskParams()
TIME ~ CLOCK - <INFO>  : Skipping: function-getAccountBalances((address,uint256))
TIME ~ CLOCK - <INFO>  : Skipping: function-renounceOwnership()
TIME ~ CLOCK - <INFO>  : Skipping: function-getMinBorrowedValue()
TIME ~ CLOCK - <INFO>  : Skipping: function-setOperators((address,bool)[])
TIME ~ CLOCK - <INFO>  : Skipping: function-getMarketPrice(uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-owner()
TIME ~ CLOCK - <INFO>  : Skipping: function-isOwner()
TIME ~ CLOCK - <INFO>  : Skipping: function-ownerWithdrawExcessTokens(uint256,address)
TIME ~ CLOCK - <INFO>  : Skipping: function-ownerAddMarket(address,address,address,(uint256),(uint256))
TIME ~ CLOCK - <INFO>  : Skipping: function-operate((address,uint256)[],(uint8,uint256,(bool,uint8,uint8,uint256),uint256,uint256,address,uint256,bytes)[])
TIME ~ CLOCK - <INFO>  : Skipping: function-getMarketWithInfo(uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-ownerSetMarginRatio((uint256))
TIME ~ CLOCK - <INFO>  : Skipping: function-getLiquidationSpread()
TIME ~ CLOCK - <INFO>  : Skipping: function-getAccountWei((address,uint256),uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-getMarketTotalPar(uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-getLiquidationSpreadForPair(uint256,uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-getNumExcessTokens(uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-getMarketCachedIndex(uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-getAccountStatus((address,uint256))
TIME ~ CLOCK - <INFO>  : Skipping: function-getEarningsRate()
TIME ~ CLOCK - <INFO>  : Skipping: function-ownerSetPriceOracle(uint256,address)
TIME ~ CLOCK - <INFO>  : Skipping: function-getRiskLimits()
TIME ~ CLOCK - <INFO>  : Skipping: function-getMarket(uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-ownerSetIsClosing(uint256,bool)
TIME ~ CLOCK - <INFO>  : Skipping: function-ownerSetGlobalOperator(address,bool)
TIME ~ CLOCK - <INFO>  : Skipping: function-transferOwnership(address)
TIME ~ CLOCK - <INFO>  : Skipping: function-getAdjustedAccountValues((address,uint256))
TIME ~ CLOCK - <INFO>  : Skipping: function-getMarketMarginPremium(uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-getMarketInterestRate(uint256)
TIME ~ CLOCK - <INFO>  : Skipping: constructor-(((uint256),(uint256),(uint256),(uint256)),(uint64,uint64,uint64,uint64,uint64,uint128))
TIME ~ CLOCK - <INFO>  : Skipping: event-LogOperatorSet(address,address,bool)
TIME ~ CLOCK - <INFO>  : Skipping: event-OwnershipTransferred(address,address)
TIME ~ CLOCK - <INFO>  : loadAbiFromFile: $CACHE/abis/0x1e0447b19bb6ecfdae1e4ae1694b0c3659614e4e.json
TIME ~ CLOCK - <INFO>  : Skipping: function-ownerSetSpreadPremium(uint256,(uint256))
TIME ~ CLOCK - <INFO>  : Skipping: function-getIsGlobalOperator(address)
TIME ~ CLOCK - <INFO>  : Skipping: function-getMarketTokenAddress(uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-ownerSetInterestSetter(uint256,address)
TIME ~ CLOCK - <INFO>  : Skipping: function-getAccountValues((address,uint256))
TIME ~ CLOCK - <INFO>  : Skipping: function-getMarketPriceOracle(uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-getMarketInterestSetter(uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-getMarketSpreadPremium(uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-getNumMarkets()
TIME ~ CLOCK - <INFO>  : Skipping: function-ownerWithdrawUnsupportedTokens(address,address)
TIME ~ CLOCK - <INFO>  : Skipping: function-ownerSetMinBorrowedValue((uint256))
TIME ~ CLOCK - <INFO>  : Skipping: function-ownerSetLiquidationSpread((uint256))
TIME ~ CLOCK - <INFO>  : Skipping: function-ownerSetEarningsRate((uint256))
TIME ~ CLOCK - <INFO>  : Skipping: function-getIsLocalOperator(address,address)
TIME ~ CLOCK - <INFO>  : Skipping: function-getAccountPar((address,uint256),uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-ownerSetMarginPremium(uint256,(uint256))
TIME ~ CLOCK - <INFO>  : Skipping: function-getMarginRatio()
TIME ~ CLOCK - <INFO>  : Skipping: function-getMarketCurrentIndex(uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-getMarketIsClosing(uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-getRiskParams()
TIME ~ CLOCK - <INFO>  : Skipping: function-getAccountBalances((address,uint256))
TIME ~ CLOCK - <INFO>  : Skipping: function-renounceOwnership()
TIME ~ CLOCK - <INFO>  : Skipping: function-getMinBorrowedValue()
TIME ~ CLOCK - <INFO>  : Skipping: function-setOperators((address,bool)[])
TIME ~ CLOCK - <INFO>  : Skipping: function-getMarketPrice(uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-owner()
TIME ~ CLOCK - <INFO>  : Skipping: function-isOwner()
TIME ~ CLOCK - <INFO>  : Skipping: function-ownerWithdrawExcessTokens(uint256,address)
TIME ~ CLOCK - <INFO>  : Skipping: function-ownerAddMarket(address,address,address,(uint256),(uint256))
TIME ~ CLOCK - <INFO>  : Skipping: function-operate((address,uint256)[],(uint8,uint256,(bool,uint8,uint8,uint256),uint256,uint256,address,uint256,bytes)[])
TIME ~ CLOCK - <INFO>  : Skipping: function-getMarketWithInfo(uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-ownerSetMarginRatio((uint256))
TIME ~ CLOCK - <INFO>  : Skipping: function-getLiquidationSpread()
TIME ~ CLOCK - <INFO>  : Skipping: function-getAccountWei((address,uint256),uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-getMarketTotalPar(uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-getLiquidationSpreadForPair(uint256,uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-getNumExcessTokens(uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-getMarketCachedIndex(uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-getAccountStatus((address,uint256))
TIME ~ CLOCK - <INFO>  : Skipping: function-getEarningsRate()
TIME ~ CLOCK - <INFO>  : Skipping: function-ownerSetPriceOracle(uint256,address)
TIME ~ CLOCK - <INFO>  : Skipping: function-getRiskLimits()
TIME ~ CLOCK - <INFO>  : Skipping: function-getMarket(uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-ownerSetIsClosing(uint256,bool)
TIME ~ CLOCK - <INFO>  : Skipping: function-ownerSetGlobalOperator(address,bool)
TIME ~ CLOCK - <INFO>  : Skipping: function-transferOwnership(address)
TIME ~ CLOCK - <INFO>  : Skipping: function-getAdjustedAccountValues((address,uint256))
TIME ~ CLOCK - <INFO>  : Skipping: function-getMarketMarginPremium(uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-getMarketInterestRate(uint256)
TIME ~ CLOCK - <INFO>  : Skipping: constructor-(((uint256),(uint256),(uint256),(uint256)),(uint64,uint64,uint64,uint64,uint64,uint128))
TIME ~ CLOCK - <INFO>  : Skipping: event-LogOperatorSet(address,address,bool)
TIME ~ CLOCK - <INFO>  : Skipping: event-OwnershipTransferred(address,address)
TIME ~ CLOCK - <INFO>  : loadAbiFromFile: $CACHE/abis/0x6b175474e89094c44da98b954eedeac495271d0f.json
TIME ~ CLOCK - <INFO>  : Skipping: constructor-(uint256)
TIME ~ CLOCK - <INFO>  : Inserting: event-Approval(address,address,uint256)
TIME ~ CLOCK - <INFO>  : Inserting: event-LogNote(bytes4,address,bytes32,bytes32,bytes)
TIME ~ CLOCK - <INFO>  : Inserting: event-Transfer(address,address,uint256)
TIME ~ CLOCK - <INFO>  : Inserting: function-DOMAIN_SEPARATOR()
TIME ~ CLOCK - <INFO>  : Inserting: function-PERMIT_TYPEHASH()
TIME ~ CLOCK - <INFO>  : Inserting: function-allowance(address,address)
TIME ~ CLOCK - <INFO>  : Inserting: function-approve(address,uint256)
TIME ~ CLOCK - <INFO>  : Inserting: function-balanceOf(address)
TIME ~ CLOCK - <INFO>  : Inserting: function-burn(address,uint256)
TIME ~ CLOCK - <INFO>  : Inserting: function-decimals()
TIME ~ CLOCK - <INFO>  : Inserting: function-deny(address)
TIME ~ CLOCK - <INFO>  : Inserting: function-mint(address,uint256)
TIME ~ CLOCK - <INFO>  : Inserting: function-move(address,address,uint256)
TIME ~ CLOCK - <INFO>  : Inserting: function-name()
TIME ~ CLOCK - <INFO>  : Inserting: function-nonces(address)
TIME ~ CLOCK - <INFO>  : Inserting: function-permit(address,address,uint256,uint256,bool,uint8,bytes32,bytes32)
TIME ~ CLOCK - <INFO>  : Inserting: function-pull(address,uint256)
TIME ~ CLOCK - <INFO>  : Inserting: function-push(address,uint256)
TIME ~ CLOCK - <INFO>  : Inserting: function-rely(address)
TIME ~ CLOCK - <INFO>  : Inserting: function-symbol()
TIME ~ CLOCK - <INFO>  : Inserting: function-totalSupply()
TIME ~ CLOCK - <INFO>  : Inserting: function-transfer(address,uint256)
TIME ~ CLOCK - <INFO>  : Inserting: function-transferFrom(address,address,uint256)
TIME ~ CLOCK - <INFO>  : Inserting: function-version()
TIME ~ CLOCK - <INFO>  : Inserting: function-wards(address)
TIME ~ CLOCK - <INFO>  : loadAbiFromFile: $CACHE/abis/0x6b175474e89094c44da98b954eedeac495271d0f.json
TIME ~ CLOCK - <INFO>  : Skipping: constructor-(uint256)
TIME ~ CLOCK - <INFO>  : Skipping: event-Approval(address,address,uint256)
TIME ~ CLOCK - <INFO>  : Skipping: event-LogNote(bytes4,address,bytes32,bytes32,bytes)
TIME ~ CLOCK - <INFO>  : Skipping: event-Transfer(address,address,uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-DOMAIN_SEPARATOR()
TIME ~ CLOCK - <INFO>  : Skipping: function-PERMIT_TYPEHASH()
TIME ~ CLOCK - <INFO>  : Skipping: function-allowance(address,address)
TIME ~ CLOCK - <INFO>  : Skipping: function-approve(address,uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-balanceOf(address)
TIME ~ CLOCK - <INFO>  : Skipping: function-burn(address,uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-decimals()
TIME ~ CLOCK - <INFO>  : Skipping: function-deny(address)
TIME ~ CLOCK - <INFO>  : Skipping: function-mint(address,uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-move(address,address,uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-name()
TIME ~ CLOCK - <INFO>  : Skipping: function-nonces(address)
TIME ~ CLOCK - <INFO>  : Skipping: function-permit(address,address,uint256,uint256,bool,uint8,bytes32,bytes32)
TIME ~ CLOCK - <INFO>  : Skipping: function-pull(address,uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-push(address,uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-rely(address)
TIME ~ CLOCK - <INFO>  : Skipping: function-symbol()
TIME ~ CLOCK - <INFO>  : Skipping: function-totalSupply()
TIME ~ CLOCK - <INFO>  : Skipping: function-transfer(address,uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-transferFrom(address,address,uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-version()
TIME ~ CLOCK - <INFO>  : Skipping: function-wards(address)
TIME ~ CLOCK - <INFO>  : loadAbiFromFile: $CACHE/abis/0x6b175474e89094c44da98b954eedeac495271d0f.json
TIME ~ CLOCK - <INFO>  : Skipping: constructor-(uint256)
TIME ~ CLOCK - <INFO>  : Skipping: event-Approval(address,address,uint256)
TIME ~ CLOCK - <INFO>  : Skipping: event-LogNote(bytes4,address,bytes32,bytes32,bytes)
TIME ~ CLOCK - <INFO>  : Skipping: event-Transfer(address,address,uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-DOMAIN_SEPARATOR()
TIME ~ CLOCK - <INFO>  : Skipping: function-PERMIT_TYPEHASH()
TIME ~ CLOCK - <INFO>  : Skipping: function-allowance(address,address)
TIME ~ CLOCK - <INFO>  : Skipping: function-approve(address,uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-balanceOf(address)
TIME ~ CLOCK - <INFO>  : Skipping: function-burn(address,uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-decimals()
TIME ~ CLOCK - <INFO>  : Skipping: function-deny(address)
TIME ~ CLOCK - <INFO>  : Skipping: function-mint(address,uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-move(address,address,uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-name()
TIME ~ CLOCK - <INFO>  : Skipping: function-nonces(address)
TIME ~ CLOCK - <INFO>  : Skipping: function-permit(address,address,uint256,uint256,bool,uint8,bytes32,bytes32)
TIME ~ CLOCK - <INFO>  : Skipping: function-pull(address,uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-push(address,uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-rely(address)
TIME ~ CLOCK - <INFO>  : Skipping: function-symbol()
TIME ~ CLOCK - <INFO>  : Skipping: function-totalSupply()
TIME ~ CLOCK - <INFO>  : Skipping: function-transfer(address,uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-transferFrom(address,address,uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-version()
TIME ~ CLOCK - <INFO>  : Skipping: function-wards(address)
TIME ~ CLOCK - <INFO>  : loadAbiFromFile: $CACHE/abis/0x6b175474e89094c44da98b954eedeac495271d0f.json
TIME ~ CLOCK - <INFO>  : Skipping: constructor-(uint256)
TIME ~ CLOCK - <INFO>  : Skipping: event-Approval(address,address,uint256)
TIME ~ CLOCK - <INFO>  : Skipping: event-LogNote(bytes4,address,bytes32,bytes32,bytes)
TIME ~ CLOCK - <INFO>  : Skipping: event-Transfer(address,address,uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-DOMAIN_SEPARATOR()
TIME ~ CLOCK - <INFO>  : Skipping: function-PERMIT_TYPEHASH()
TIME ~ CLOCK - <INFO>  : Skipping: function-allowance(address,address)
TIME ~ CLOCK - <INFO>  : Skipping: function-approve(address,uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-balanceOf(address)
TIME ~ CLOCK - <INFO>  : Skipping: function-burn(address,uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-decimals()
TIME ~ CLOCK - <INFO>  : Skipping: function-deny(address)
TIME ~ CLOCK - <INFO>  : Skipping: function-mint(address,uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-move(address,address,uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-name()
TIME ~ CLOCK - <INFO>  : Skipping: function-nonces(address)
TIME ~ CLOCK - <INFO>  : Skipping: function-permit(address,address,uint256,uint256,bool,uint8,bytes32,bytes32)
TIME ~ CLOCK - <INFO>  : Skipping: function-pull(address,uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-push(address,uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-rely(address)
TIME ~ CLOCK - <INFO>  : Skipping: function-symbol()
TIME ~ CLOCK - <INFO>  : Skipping: function-totalSupply()
TIME ~ CLOCK - <INFO>  : Skipping: function-transfer(address,uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-transferFrom(address,address,uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-version()
TIME ~ CLOCK - <INFO>  : Skipping: function-wards(address)
TIME ~ CLOCK - <INFO>  : loadAbiFromFile: $CACHE/abis/0x6b175474e89094c44da98b954eedeac495271d0f.json
TIME ~ CLOCK - <INFO>  : Skipping: constructor-(uint256)
TIME ~ CLOCK - <INFO>  : Skipping: event-Approval(address,address,uint256)
TIME ~ CLOCK - <INFO>  : Skipping: event-LogNote(bytes4,address,bytes32,bytes32,bytes)
TIME ~ CLOCK - <INFO>  : Skipping: event-Transfer(address,address,uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-DOMAIN_SEPARATOR()
TIME ~ CLOCK - <INFO>  : Skipping: function-PERMIT_TYPEHASH()
TIME ~ CLOCK - <INFO>  : Skipping: function-allowance(address,address)
TIME ~ CLOCK - <INFO>  : Skipping: function-approve(address,uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-balanceOf(address)
TIME ~ CLOCK - <INFO>  : Skipping: function-burn(address,uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-decimals()
TIME ~ CLOCK - <INFO>  : Skipping: function-deny(address)
TIME ~ CLOCK - <INFO>  : Skipping: function-mint(address,uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-move(address,address,uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-name()
TIME ~ CLOCK - <INFO>  : Skipping: function-nonces(address)
TIME ~ CLOCK - <INFO>  : Skipping: function-permit(address,address,uint256,uint256,bool,uint8,bytes32,bytes32)
TIME ~ CLOCK - <INFO>  : Skipping: function-pull(address,uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-push(address,uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-rely(address)
TIME ~ CLOCK - <INFO>  : Skipping: function-symbol()
TIME ~ CLOCK - <INFO>  : Skipping: function-totalSupply()
TIME ~ CLOCK - <INFO>  : Skipping: function-transfer(address,uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-transferFrom(address,address,uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-version()
TIME ~ CLOCK - <INFO>  : Skipping: function-wards(address)
TIME ~ CLOCK - <INFO>  : loadAbiFromFile: Could not load file $CACHE/abis/0x16de59092dae5ccf4a1e6439d611fd0653f0bd01.json
TIME ~ CLOCK - <INFO>  : loadAbiFromFile: Could not load file $CACHE/abis/0xd6ad7a6750a7593e092a9b218d66c0a814a3436e.json
TIME ~ CLOCK - <INFO>  : loadAbiFromFile: $CACHE/abis/0x9ba00d6856a4edf4665bca2c2309936572473b7e.json
TIME ~ CLOCK - <INFO>  : Skipping: constructor-(address,address,uint8,string,string)
TIME ~ CLOCK - <INFO>  : Skipping: event-Approval(address,address,uint256)
TIME ~ CLOCK - <INFO>  : Inserting: event-BalanceTransfer(address,address,uint256,uint256,uint256,uint256,uint256)
TIME ~ CLOCK - <INFO>  : Inserting: event-BurnOnLiquidation(address,uint256,uint256,uint256)
TIME ~ CLOCK - <INFO>  : Inserting: event-InterestRedirectionAllowanceChanged(address,address)
TIME ~ CLOCK - <INFO>  : Inserting: event-InterestStreamRedirected(address,address,uint256,uint256,uint256)
TIME ~ CLOCK - <INFO>  : Inserting: event-MintOnDeposit(address,uint256,uint256,uint256)
TIME ~ CLOCK - <INFO>  : Inserting: event-Redeem(address,uint256,uint256,uint256)
TIME ~ CLOCK - <INFO>  : Inserting: event-RedirectedBalanceUpdated(address,uint256,uint256,uint256,uint256)
TIME ~ CLOCK - <INFO>  : Skipping: event-Transfer(address,address,uint256)
TIME ~ CLOCK - <INFO>  : Inserting: function-UINT_MAX_VALUE()
TIME ~ CLOCK - <INFO>  : Inserting: function-allowInterestRedirectionTo(address)
TIME ~ CLOCK - <INFO>  : Skipping: function-allowance(address,address)
TIME ~ CLOCK - <INFO>  : Skipping: function-approve(address,uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-balanceOf(address)
TIME ~ CLOCK - <INFO>  : Inserting: function-burnOnLiquidation(address,uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-decimals()
TIME ~ CLOCK - <INFO>  : Inserting: function-decreaseAllowance(address,uint256)
TIME ~ CLOCK - <INFO>  : Inserting: function-getInterestRedirectionAddress(address)
TIME ~ CLOCK - <INFO>  : Inserting: function-getRedirectedBalance(address)
TIME ~ CLOCK - <INFO>  : Inserting: function-getUserIndex(address)
TIME ~ CLOCK - <INFO>  : Inserting: function-increaseAllowance(address,uint256)
TIME ~ CLOCK - <INFO>  : Inserting: function-isTransferAllowed(address,uint256)
TIME ~ CLOCK - <INFO>  : Inserting: function-mintOnDeposit(address,uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-name()
TIME ~ CLOCK - <INFO>  : Inserting: function-principalBalanceOf(address)
TIME ~ CLOCK - <INFO>  : Inserting: function-redeem(uint256)
TIME ~ CLOCK - <INFO>  : Inserting: function-redirectInterestStream(address)
TIME ~ CLOCK - <INFO>  : Inserting: function-redirectInterestStreamOf(address,address)
TIME ~ CLOCK - <INFO>  : Skipping: function-symbol()
TIME ~ CLOCK - <INFO>  : Skipping: function-totalSupply()
TIME ~ CLOCK - <INFO>  : Skipping: function-transfer(address,uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-transferFrom(address,address,uint256)
TIME ~ CLOCK - <INFO>  : Inserting: function-transferOnLiquidation(address,address,uint256)
TIME ~ CLOCK - <INFO>  : Inserting: function-underlyingAssetAddress()
TIME ~ CLOCK - <INFO>  : loadAbiFromFile: $CACHE/abis/0x9ba00d6856a4edf4665bca2c2309936572473b7e.json
TIME ~ CLOCK - <INFO>  : Skipping: constructor-(address,address,uint8,string,string)
TIME ~ CLOCK - <INFO>  : Skipping: event-Approval(address,address,uint256)
TIME ~ CLOCK - <INFO>  : Skipping: event-BalanceTransfer(address,address,uint256,uint256,uint256,uint256,uint256)
TIME ~ CLOCK - <INFO>  : Skipping: event-BurnOnLiquidation(address,uint256,uint256,uint256)
TIME ~ CLOCK - <INFO>  : Skipping: event-InterestRedirectionAllowanceChanged(address,address)
TIME ~ CLOCK - <INFO>  : Skipping: event-InterestStreamRedirected(address,address,uint256,uint256,uint256)
TIME ~ CLOCK - <INFO>  : Skipping: event-MintOnDeposit(address,uint256,uint256,uint256)
TIME ~ CLOCK - <INFO>  : Skipping: event-Redeem(address,uint256,uint256,uint256)
TIME ~ CLOCK - <INFO>  : Skipping: event-RedirectedBalanceUpdated(address,uint256,uint256,uint256,uint256)
TIME ~ CLOCK - <INFO>  : Skipping: event-Transfer(address,address,uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-UINT_MAX_VALUE()
TIME ~ CLOCK - <INFO>  : Skipping: function-allowInterestRedirectionTo(address)
TIME ~ CLOCK - <INFO>  : Skipping: function-allowance(address,address)
TIME ~ CLOCK - <INFO>  : Skipping: function-approve(address,uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-balanceOf(address)
TIME ~ CLOCK - <INFO>  : Skipping: function-burnOnLiquidation(address,uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-decimals()
TIME ~ CLOCK - <INFO>  : Skipping: function-decreaseAllowance(address,uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-getInterestRedirectionAddress(address)
TIME ~ CLOCK - <INFO>  : Skipping: function-getRedirectedBalance(address)
TIME ~ CLOCK - <INFO>  : Skipping: function-getUserIndex(address)
TIME ~ CLOCK - <INFO>  : Skipping: function-increaseAllowance(address,uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-isTransferAllowed(address,uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-mintOnDeposit(address,uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-name()
TIME ~ CLOCK - <INFO>  : Skipping: function-principalBalanceOf(address)
TIME ~ CLOCK - <INFO>  : Skipping: function-redeem(uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-redirectInterestStream(address)
TIME ~ CLOCK - <INFO>  : Skipping: function-redirectInterestStreamOf(address,address)
TIME ~ CLOCK - <INFO>  : Skipping: function-symbol()
TIME ~ CLOCK - <INFO>  : Skipping: function-totalSupply()
TIME ~ CLOCK - <INFO>  : Skipping: function-transfer(address,uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-transferFrom(address,address,uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-transferOnLiquidation(address,address,uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-underlyingAssetAddress()
TIME ~ CLOCK - <INFO>  : loadAbiFromFile: Could not load file $CACHE/abis/0x3dfd23a6c5e8bbcfc9581d2e864a68feb6a076d3.json
TIME ~ CLOCK - <INFO>  : loadAbiFromFile: Could not load file $CACHE/abis/0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48.json
TIME ~ CLOCK - <INFO>  : loadAbiFromFile: Could not load file $CACHE/abis/0x398ec7346dcd622edc5ae82352f02be94c62d119.json
TIME ~ CLOCK - <INFO>  : loadAbiFromFile: $CACHE/abis/0x9ba00d6856a4edf4665bca2c2309936572473b7e.json
TIME ~ CLOCK - <INFO>  : Skipping: constructor-(address,address,uint8,string,string)
TIME ~ CLOCK - <INFO>  : Skipping: event-Approval(address,address,uint256)
TIME ~ CLOCK - <INFO>  : Skipping: event-BalanceTransfer(address,address,uint256,uint256,uint256,uint256,uint256)
TIME ~ CLOCK - <INFO>  : Skipping: event-BurnOnLiquidation(address,uint256,uint256,uint256)
TIME ~ CLOCK - <INFO>  : Skipping: event-InterestRedirectionAllowanceChanged(address,address)
TIME ~ CLOCK - <INFO>  : Skipping: event-InterestStreamRedirected(address,address,uint256,uint256,uint256)
TIME ~ CLOCK - <INFO>  : Skipping: event-MintOnDeposit(address,uint256,uint256,uint256)
TIME ~ CLOCK - <INFO>  : Skipping: event-Redeem(address,uint256,uint256,uint256)
TIME ~ CLOCK - <INFO>  : Skipping: event-RedirectedBalanceUpdated(address,uint256,uint256,uint256,uint256)
TIME ~ CLOCK - <INFO>  : Skipping: event-Transfer(address,address,uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-UINT_MAX_VALUE()
TIME ~ CLOCK - <INFO>  : Skipping: function-allowInterestRedirectionTo(address)
TIME ~ CLOCK - <INFO>  : Skipping: function-allowance(address,address)
TIME ~ CLOCK - <INFO>  : Skipping: function-approve(address,uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-balanceOf(address)
TIME ~ CLOCK - <INFO>  : Skipping: function-burnOnLiquidation(address,uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-decimals()
TIME ~ CLOCK - <INFO>  : Skipping: function-decreaseAllowance(address,uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-getInterestRedirectionAddress(address)
TIME ~ CLOCK - <INFO>  : Skipping: function-getRedirectedBalance(address)
TIME ~ CLOCK - <INFO>  : Skipping: function-getUserIndex(address)
TIME ~ CLOCK - <INFO>  : Skipping: function-increaseAllowance(address,uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-isTransferAllowed(address,uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-mintOnDeposit(address,uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-name()
TIME ~ CLOCK - <INFO>  : Skipping: function-principalBalanceOf(address)
TIME ~ CLOCK - <INFO>  : Skipping: function-redeem(uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-redirectInterestStream(address)
TIME ~ CLOCK - <INFO>  : Skipping: function-redirectInterestStreamOf(address,address)
TIME ~ CLOCK - <INFO>  : Skipping: function-symbol()
TIME ~ CLOCK - <INFO>  : Skipping: function-totalSupply()
TIME ~ CLOCK - <INFO>  : Skipping: function-transfer(address,uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-transferFrom(address,address,uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-transferOnLiquidation(address,address,uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-underlyingAssetAddress()
TIME ~ CLOCK - <INFO>  : loadAbiFromFile: Could not load file $CACHE/abis/0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48.json
TIME ~ CLOCK - <INFO>  : loadAbiFromFile: Could not load file $CACHE/abis/0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48.json
TIME ~ CLOCK - <INFO>  : loadAbiFromFile: $CACHE/abis/0x45f783cce6b7ff23b2ab2d70e416cdb7d6055f51.json
TIME ~ CLOCK - <INFO>  : Inserting: event-TokenExchange(address,int128,uint256,int128,uint256)
TIME ~ CLOCK - <INFO>  : Inserting: event-TokenExchangeUnderlying(address,int128,uint256,int128,uint256)
TIME ~ CLOCK - <INFO>  : Inserting: event-AddLiquidity(address,uint256[4],uint256[4],uint256,uint256)
TIME ~ CLOCK - <INFO>  : Inserting: event-RemoveLiquidity(address,uint256[4],uint256[4],uint256)
TIME ~ CLOCK - <INFO>  : Inserting: event-RemoveLiquidityImbalance(address,uint256[4],uint256[4],uint256,uint256)
TIME ~ CLOCK - <INFO>  : Inserting: event-CommitNewAdmin(uint256,address)
TIME ~ CLOCK - <INFO>  : Inserting: event-NewAdmin(address)
TIME ~ CLOCK - <INFO>  : Inserting: event-CommitNewParameters(uint256,uint256,uint256,uint256)
TIME ~ CLOCK - <INFO>  : Inserting: event-NewParameters(uint256,uint256,uint256)
TIME ~ CLOCK - <INFO>  : Skipping: constructor-(address[4],address[4],address,uint256,uint256)
TIME ~ CLOCK - <INFO>  : Inserting: function-get_virtual_price()
TIME ~ CLOCK - <INFO>  : Inserting: function-calc_token_amount(uint256[4],bool)
TIME ~ CLOCK - <INFO>  : Inserting: function-add_liquidity(uint256[4],uint256)
TIME ~ CLOCK - <INFO>  : Inserting: function-get_dy(int128,int128,uint256)
TIME ~ CLOCK - <INFO>  : Inserting: function-get_dx(int128,int128,uint256)
TIME ~ CLOCK - <INFO>  : Inserting: function-get_dy_underlying(int128,int128,uint256)
TIME ~ CLOCK - <INFO>  : Inserting: function-get_dx_underlying(int128,int128,uint256)
TIME ~ CLOCK - <INFO>  : Inserting: function-exchange(int128,int128,uint256,uint256)
TIME ~ CLOCK - <INFO>  : Inserting: function-exchange_underlying(int128,int128,uint256,uint256)
TIME ~ CLOCK - <INFO>  : Inserting: function-remove_liquidity(uint256,uint256[4])
TIME ~ CLOCK - <INFO>  : Inserting: function-remove_liquidity_imbalance(uint256[4],uint256)
TIME ~ CLOCK - <INFO>  : Inserting: function-commit_new_parameters(uint256,uint256,uint256)
TIME ~ CLOCK - <INFO>  : Inserting: function-apply_new_parameters()
TIME ~ CLOCK - <INFO>  : Inserting: function-revert_new_parameters()
TIME ~ CLOCK - <INFO>  : Inserting: function-commit_transfer_ownership(address)
TIME ~ CLOCK - <INFO>  : Inserting: function-apply_transfer_ownership()
TIME ~ CLOCK - <INFO>  : Inserting: function-revert_transfer_ownership()
TIME ~ CLOCK - <INFO>  : Inserting: function-withdraw_admin_fees()
TIME ~ CLOCK - <INFO>  : Inserting: function-kill_me()
TIME ~ CLOCK - <INFO>  : Inserting: function-unkill_me()
TIME ~ CLOCK - <INFO>  : Inserting: function-coins(int128)
TIME ~ CLOCK - <INFO>  : Inserting: function-underlying_coins(int128)
TIME ~ CLOCK - <INFO>  : Inserting: function-balances(int128)
TIME ~ CLOCK - <INFO>  : Inserting: function-A()
TIME ~ CLOCK - <INFO>  : Inserting: function-fee()
TIME ~ CLOCK - <INFO>  : Inserting: function-admin_fee()
TIME ~ CLOCK - <INFO>  : Skipping: function-owner()
TIME ~ CLOCK - <INFO>  : Inserting: function-admin_actions_deadline()
TIME ~ CLOCK - <INFO>  : Inserting: function-transfer_ownership_deadline()
TIME ~ CLOCK - <INFO>  : Inserting: function-future_A()
TIME ~ CLOCK - <INFO>  : Inserting: function-future_fee()
TIME ~ CLOCK - <INFO>  : Inserting: function-future_admin_fee()
TIME ~ CLOCK - <INFO>  : Inserting: function-future_owner()
TIME ~ CLOCK - <INFO>  : loadAbiFromFile: Could not load file $CACHE/abis/0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48.json
TIME ~ CLOCK - <INFO>  : loadAbiFromFile: Could not load file $CACHE/abis/0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48.json
TIME ~ CLOCK - <INFO>  : loadAbiFromFile: $CACHE/abis/0x1e0447b19bb6ecfdae1e4ae1694b0c3659614e4e.json
TIME ~ CLOCK - <INFO>  : Skipping: function-ownerSetSpreadPremium(uint256,(uint256))
TIME ~ CLOCK - <INFO>  : Skipping: function-getIsGlobalOperator(address)
TIME ~ CLOCK - <INFO>  : Skipping: function-getMarketTokenAddress(uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-ownerSetInterestSetter(uint256,address)
TIME ~ CLOCK - <INFO>  : Skipping: function-getAccountValues((address,uint256))
TIME ~ CLOCK - <INFO>  : Skipping: function-getMarketPriceOracle(uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-getMarketInterestSetter(uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-getMarketSpreadPremium(uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-getNumMarkets()
TIME ~ CLOCK - <INFO>  : Skipping: function-ownerWithdrawUnsupportedTokens(address,address)
TIME ~ CLOCK - <INFO>  : Skipping: function-ownerSetMinBorrowedValue((uint256))
TIME ~ CLOCK - <INFO>  : Skipping: function-ownerSetLiquidationSpread((uint256))
TIME ~ CLOCK - <INFO>  : Skipping: function-ownerSetEarningsRate((uint256))
TIME ~ CLOCK - <INFO>  : Skipping: function-getIsLocalOperator(address,address)
TIME ~ CLOCK - <INFO>  : Skipping: function-getAccountPar((address,uint256),uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-ownerSetMarginPremium(uint256,(uint256))
TIME ~ CLOCK - <INFO>  : Skipping: function-getMarginRatio()
TIME ~ CLOCK - <INFO>  : Skipping: function-getMarketCurrentIndex(uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-getMarketIsClosing(uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-getRiskParams()
TIME ~ CLOCK - <INFO>  : Skipping: function-getAccountBalances((address,uint256))
TIME ~ CLOCK - <INFO>  : Skipping: function-renounceOwnership()
TIME ~ CLOCK - <INFO>  : Skipping: function-getMinBorrowedValue()
TIME ~ CLOCK - <INFO>  : Skipping: function-setOperators((address,bool)[])
TIME ~ CLOCK - <INFO>  : Skipping: function-getMarketPrice(uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-owner()
TIME ~ CLOCK - <INFO>  : Skipping: function-isOwner()
TIME ~ CLOCK - <INFO>  : Skipping: function-ownerWithdrawExcessTokens(uint256,address)
TIME ~ CLOCK - <INFO>  : Skipping: function-ownerAddMarket(address,address,address,(uint256),(uint256))
TIME ~ CLOCK - <INFO>  : Skipping: function-operate((address,uint256)[],(uint8,uint256,(bool,uint8,uint8,uint256),uint256,uint256,address,uint256,bytes)[])
TIME ~ CLOCK - <INFO>  : Skipping: function-getMarketWithInfo(uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-ownerSetMarginRatio((uint256))
TIME ~ CLOCK - <INFO>  : Skipping: function-getLiquidationSpread()
TIME ~ CLOCK - <INFO>  : Skipping: function-getAccountWei((address,uint256),uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-getMarketTotalPar(uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-getLiquidationSpreadForPair(uint256,uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-getNumExcessTokens(uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-getMarketCachedIndex(uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-getAccountStatus((address,uint256))
TIME ~ CLOCK - <INFO>  : Skipping: function-getEarningsRate()
TIME ~ CLOCK - <INFO>  : Skipping: function-ownerSetPriceOracle(uint256,address)
TIME ~ CLOCK - <INFO>  : Skipping: function-getRiskLimits()
TIME ~ CLOCK - <INFO>  : Skipping: function-getMarket(uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-ownerSetIsClosing(uint256,bool)
TIME ~ CLOCK - <INFO>  : Skipping: function-ownerSetGlobalOperator(address,bool)
TIME ~ CLOCK - <INFO>  : Skipping: function-transferOwnership(address)
TIME ~ CLOCK - <INFO>  : Skipping: function-getAdjustedAccountValues((address,uint256))
TIME ~ CLOCK - <INFO>  : Skipping: function-getMarketMarginPremium(uint256)
TIME ~ CLOCK - <INFO>  : Skipping: function-getMarketInterestRate(uint256)
TIME ~ CLOCK - <INFO>  : Skipping: constructor-(((uint256),(uint256),(uint256),(uint256)),(uint64,uint64,uint64,uint64,uint64,uint128))
TIME ~ CLOCK - <INFO>  : Skipping: event-LogOperatorSet(address,address,bool)
TIME ~ CLOCK - <INFO>  : Skipping: event-OwnershipTransferred(address,address)
--4 : 4 : 0
--  0: sold_id (int128)
--  1: tokens_sold (uint256)
--  2: bought_id (int128)
--  3: tokens_bought (uint256)
--  0: 0000000000000000000000000000000000000000000000000000000000000000 <---
--  1: 00000000000000000000000000000000000000000000010f0cf064dd59200000
--  2: 0000000000000000000000000000000000000000000000000000000000000001
--  3: 000000000000000000000000000000000000000000000000000000012bf3a855
--4 : 4 : 1
--  0: sold_id (int128) = 0
--  1: tokens_sold (uint256)
--  2: bought_id (int128)
--  3: tokens_bought (uint256)
--  0: 0000000000000000000000000000000000000000000000000000000000000000
--  1: 00000000000000000000000000000000000000000000010f0cf064dd59200000 <---
--  2: 0000000000000000000000000000000000000000000000000000000000000001
--  3: 000000000000000000000000000000000000000000000000000000012bf3a855
--4 : 4 : 2
--  0: sold_id (int128) = 0
--  1: tokens_sold (uint256) = 5000000000000000000000
--  2: bought_id (int128)
--  3: tokens_bought (uint256)
--  0: 0000000000000000000000000000000000000000000000000000000000000000
--  1: 00000000000000000000000000000000000000000000010f0cf064dd59200000
--  2: 0000000000000000000000000000000000000000000000000000000000000001 <---
--  3: 000000000000000000000000000000000000000000000000000000012bf3a855
--4 : 4 : 3
--  0: sold_id (int128) = 0
--  1: tokens_sold (uint256) = 5000000000000000000000
--  2: bought_id (int128) = 1
--  3: tokens_bought (uint256)
--  0: 0000000000000000000000000000000000000000000000000000000000000000
--  1: 00000000000000000000000000000000000000000000010f0cf064dd59200000
--  2: 0000000000000000000000000000000000000000000000000000000000000001
--  3: 000000000000000000000000000000000000000000000000000000012bf3a855 <---
--2 : 26 : 0
--  0: accounts (tuple[])
--  1: actions (tuple[])
--  0: 0000000000000000000000000000000000000000000000000000000000000040 <---
--  1: 00000000000000000000000000000000000000000000000000000000000000a0
--  2: 0000000000000000000000000000000000000000000000000000000000000001
--  3: 00000000000000000000000066215d23b8a247c80c2d1b7bef4befc2ab384bce
--  4: 0000000000000000000000000000000000000000000000000000000000000000
--  5: 0000000000000000000000000000000000000000000000000000000000000001
--  6: 0000000000000000000000000000000000000000000000000000000000000020
--  7: 0000000000000000000000000000000000000000000000000000000000000004
--  8: 0000000000000000000000000000000000000000000000000000000000000000
--  9: 0000000000000000000000000000000000000000000000000000000000000000
-- 10: 0000000000000000000000000000000000000000000000000000000000000000
-- 11: 0000000000000000000000000000000000000000000000000000000000000000
-- 12: 00000000000000000000000000000000000000000000010f0cf064dd59200000
-- 13: 0000000000000000000000000000000000000000000000000000000000000003
-- 14: 0000000000000000000000000000000000000000000000000000000000000002
-- 15: 0000000000000000000000007a603dc3eb0f4e3883929ee15a3c86d2ac45f445
-- 16: 0000000000000000000000000000000000000000000000000000000000000000
-- 17: 0000000000000000000000000000000000000000000000000000000000000160
-- 18: 00000000000000000000000000000000000000000000000000000000000000e0
-- 19: 0000000000000000000000000000000000000000000000000000000000000000
-- 20: 0000000000000000000000000000000000000000000000000000000000000000
-- 21: 00000000000000000000000045f783cce6b7ff23b2ab2d70e416cdb7d6055f51
-- 22: 0000000000000000000000000000000000000000000000000000000000000000
-- 23: 0000000000000000000000000000000000000000000000000000000000000001
-- 24: 0000000000000000000000000000000000000000000000000000000000000001
-- 25: 0000000000000000000000000000000000000000000000000000000000000000
  --1 : 26 : 3 : 2
  --  0:  (tuple[1])
  --      tuple[][owner(address) number(uint256) ]
  --  0: 0000000000000000000000000000000000000000000000000000000000000040
  --  1: 00000000000000000000000000000000000000000000000000000000000000a0
  --  2: 0000000000000000000000000000000000000000000000000000000000000001 <===
  --  3: 00000000000000000000000066215d23b8a247c80c2d1b7bef4befc2ab384bce <---
  --  4: 0000000000000000000000000000000000000000000000000000000000000000
  --  5: 0000000000000000000000000000000000000000000000000000000000000001
  --  6: 0000000000000000000000000000000000000000000000000000000000000020
  --  7: 0000000000000000000000000000000000000000000000000000000000000004
  --  8: 0000000000000000000000000000000000000000000000000000000000000000
  --  9: 0000000000000000000000000000000000000000000000000000000000000000
  -- 10: 0000000000000000000000000000000000000000000000000000000000000000
  -- 11: 0000000000000000000000000000000000000000000000000000000000000000
  -- 12: 00000000000000000000000000000000000000000000010f0cf064dd59200000
  -- 13: 0000000000000000000000000000000000000000000000000000000000000003
  -- 14: 0000000000000000000000000000000000000000000000000000000000000002
  -- 15: 0000000000000000000000007a603dc3eb0f4e3883929ee15a3c86d2ac45f445
  -- 16: 0000000000000000000000000000000000000000000000000000000000000000
  -- 17: 0000000000000000000000000000000000000000000000000000000000000160
  -- 18: 00000000000000000000000000000000000000000000000000000000000000e0
  -- 19: 0000000000000000000000000000000000000000000000000000000000000000
  -- 20: 0000000000000000000000000000000000000000000000000000000000000000
  -- 21: 00000000000000000000000045f783cce6b7ff23b2ab2d70e416cdb7d6055f51
  -- 22: 0000000000000000000000000000000000000000000000000000000000000000
  -- 23: 0000000000000000000000000000000000000000000000000000000000000001
  -- 24: 0000000000000000000000000000000000000000000000000000000000000001
  -- 25: 0000000000000000000000000000000000000000000000000000000000000000
    --1 : 26 : 3 : 2
    --  0:  (tuple)
    --  0: 0000000000000000000000000000000000000000000000000000000000000040
    --  1: 00000000000000000000000000000000000000000000000000000000000000a0
    --  2: 0000000000000000000000000000000000000000000000000000000000000001 <===
    --  3: 00000000000000000000000066215d23b8a247c80c2d1b7bef4befc2ab384bce <---
    --  4: 0000000000000000000000000000000000000000000000000000000000000000
    --  5: 0000000000000000000000000000000000000000000000000000000000000001
    --  6: 0000000000000000000000000000000000000000000000000000000000000020
    --  7: 0000000000000000000000000000000000000000000000000000000000000004
    --  8: 0000000000000000000000000000000000000000000000000000000000000000
    --  9: 0000000000000000000000000000000000000000000000000000000000000000
    -- 10: 0000000000000000000000000000000000000000000000000000000000000000
    -- 11: 0000000000000000000000000000000000000000000000000000000000000000
    -- 12: 00000000000000000000000000000000000000000000010f0cf064dd59200000
    -- 13: 0000000000000000000000000000000000000000000000000000000000000003
    -- 14: 0000000000000000000000000000000000000000000000000000000000000002
    -- 15: 0000000000000000000000007a603dc3eb0f4e3883929ee15a3c86d2ac45f445
    -- 16: 0000000000000000000000000000000000000000000000000000000000000000
    -- 17: 0000000000000000000000000000000000000000000000000000000000000160
    -- 18: 00000000000000000000000000000000000000000000000000000000000000e0
    -- 19: 0000000000000000000000000000000000000000000000000000000000000000
    -- 20: 0000000000000000000000000000000000000000000000000000000000000000
    -- 21: 00000000000000000000000045f783cce6b7ff23b2ab2d70e416cdb7d6055f51
    -- 22: 0000000000000000000000000000000000000000000000000000000000000000
    -- 23: 0000000000000000000000000000000000000000000000000000000000000001
    -- 24: 0000000000000000000000000000000000000000000000000000000000000001
    -- 25: 0000000000000000000000000000000000000000000000000000000000000000
      --2 : 26 : 3 : 2
      --  0: owner (address)
      --  1: number (uint256)
      --  0: 0000000000000000000000000000000000000000000000000000000000000040
      --  1: 00000000000000000000000000000000000000000000000000000000000000a0
      --  2: 0000000000000000000000000000000000000000000000000000000000000001 <===
      --  3: 00000000000000000000000066215d23b8a247c80c2d1b7bef4befc2ab384bce <---
      --  4: 0000000000000000000000000000000000000000000000000000000000000000
      --  5: 0000000000000000000000000000000000000000000000000000000000000001
      --  6: 0000000000000000000000000000000000000000000000000000000000000020
      --  7: 0000000000000000000000000000000000000000000000000000000000000004
      --  8: 0000000000000000000000000000000000000000000000000000000000000000
      --  9: 0000000000000000000000000000000000000000000000000000000000000000
      -- 10: 0000000000000000000000000000000000000000000000000000000000000000
      -- 11: 0000000000000000000000000000000000000000000000000000000000000000
      -- 12: 00000000000000000000000000000000000000000000010f0cf064dd59200000
      -- 13: 0000000000000000000000000000000000000000000000000000000000000003
      -- 14: 0000000000000000000000000000000000000000000000000000000000000002
      -- 15: 0000000000000000000000007a603dc3eb0f4e3883929ee15a3c86d2ac45f445
      -- 16: 0000000000000000000000000000000000000000000000000000000000000000
      -- 17: 0000000000000000000000000000000000000000000000000000000000000160
      -- 18: 00000000000000000000000000000000000000000000000000000000000000e0
      -- 19: 0000000000000000000000000000000000000000000000000000000000000000
      -- 20: 0000000000000000000000000000000000000000000000000000000000000000
      -- 21: 00000000000000000000000045f783cce6b7ff23b2ab2d70e416cdb7d6055f51
      -- 22: 0000000000000000000000000000000000000000000000000000000000000000
      -- 23: 0000000000000000000000000000000000000000000000000000000000000001
      -- 24: 0000000000000000000000000000000000000000000000000000000000000001
      -- 25: 0000000000000000000000000000000000000000000000000000000000000000
      --2 : 26 : 4 : 2
      --  0: owner (address) = 0x66215d23b8a247c80c2d1b7bef4befc2ab384bce
      --  1: number (uint256)
      --  0: 0000000000000000000000000000000000000000000000000000000000000040
      --  1: 00000000000000000000000000000000000000000000000000000000000000a0
      --  2: 0000000000000000000000000000000000000000000000000000000000000001 <===
      --  3: 00000000000000000000000066215d23b8a247c80c2d1b7bef4befc2ab384bce
      --  4: 0000000000000000000000000000000000000000000000000000000000000000 <---
      --  5: 0000000000000000000000000000000000000000000000000000000000000001
      --  6: 0000000000000000000000000000000000000000000000000000000000000020
      --  7: 0000000000000000000000000000000000000000000000000000000000000004
      --  8: 0000000000000000000000000000000000000000000000000000000000000000
      --  9: 0000000000000000000000000000000000000000000000000000000000000000
      -- 10: 0000000000000000000000000000000000000000000000000000000000000000
      -- 11: 0000000000000000000000000000000000000000000000000000000000000000
      -- 12: 00000000000000000000000000000000000000000000010f0cf064dd59200000
      -- 13: 0000000000000000000000000000000000000000000000000000000000000003
      -- 14: 0000000000000000000000000000000000000000000000000000000000000002
      -- 15: 0000000000000000000000007a603dc3eb0f4e3883929ee15a3c86d2ac45f445
      -- 16: 0000000000000000000000000000000000000000000000000000000000000000
      -- 17: 0000000000000000000000000000000000000000000000000000000000000160
      -- 18: 00000000000000000000000000000000000000000000000000000000000000e0
      -- 19: 0000000000000000000000000000000000000000000000000000000000000000
      -- 20: 0000000000000000000000000000000000000000000000000000000000000000
      -- 21: 00000000000000000000000045f783cce6b7ff23b2ab2d70e416cdb7d6055f51
      -- 22: 0000000000000000000000000000000000000000000000000000000000000000
      -- 23: 0000000000000000000000000000000000000000000000000000000000000001
      -- 24: 0000000000000000000000000000000000000000000000000000000000000001
      -- 25: 0000000000000000000000000000000000000000000000000000000000000000
--2 : 26 : 1
--  0: accounts (tuple[]) = [{"owner":"0x66215d23b8a247c80c2d1b7bef4befc2ab384bce", "number":"0"}]
--  1: actions (tuple[])
--  0: 0000000000000000000000000000000000000000000000000000000000000040
--  1: 00000000000000000000000000000000000000000000000000000000000000a0 <---
--  2: 0000000000000000000000000000000000000000000000000000000000000001
--  3: 00000000000000000000000066215d23b8a247c80c2d1b7bef4befc2ab384bce
--  4: 0000000000000000000000000000000000000000000000000000000000000000
--  5: 0000000000000000000000000000000000000000000000000000000000000001
--  6: 0000000000000000000000000000000000000000000000000000000000000020
--  7: 0000000000000000000000000000000000000000000000000000000000000004
--  8: 0000000000000000000000000000000000000000000000000000000000000000
--  9: 0000000000000000000000000000000000000000000000000000000000000000
-- 10: 0000000000000000000000000000000000000000000000000000000000000000
-- 11: 0000000000000000000000000000000000000000000000000000000000000000
-- 12: 00000000000000000000000000000000000000000000010f0cf064dd59200000
-- 13: 0000000000000000000000000000000000000000000000000000000000000003
-- 14: 0000000000000000000000000000000000000000000000000000000000000002
-- 15: 0000000000000000000000007a603dc3eb0f4e3883929ee15a3c86d2ac45f445
-- 16: 0000000000000000000000000000000000000000000000000000000000000000
-- 17: 0000000000000000000000000000000000000000000000000000000000000160
-- 18: 00000000000000000000000000000000000000000000000000000000000000e0
-- 19: 0000000000000000000000000000000000000000000000000000000000000000
-- 20: 0000000000000000000000000000000000000000000000000000000000000000
-- 21: 00000000000000000000000045f783cce6b7ff23b2ab2d70e416cdb7d6055f51
-- 22: 0000000000000000000000000000000000000000000000000000000000000000
-- 23: 0000000000000000000000000000000000000000000000000000000000000001
-- 24: 0000000000000000000000000000000000000000000000000000000000000001
-- 25: 0000000000000000000000000000000000000000000000000000000000000000
  --1 : 26 : 6 : 5
  --  0:  (tuple[1])
  --      tuple[][actionType(uint8) accountId(uint256) amount(tuple) primaryMarketId(uint256) secondaryMarketId(uint256) otherAddress(address) otherAccountId(uint256) data(bytes) ]
  --  0: 0000000000000000000000000000000000000000000000000000000000000040
  --  1: 00000000000000000000000000000000000000000000000000000000000000a0
  --  2: 0000000000000000000000000000000000000000000000000000000000000001
  --  3: 00000000000000000000000066215d23b8a247c80c2d1b7bef4befc2ab384bce
  --  4: 0000000000000000000000000000000000000000000000000000000000000000
  --  5: 0000000000000000000000000000000000000000000000000000000000000001 <===
  --  6: 0000000000000000000000000000000000000000000000000000000000000020 <---
  --  7: 0000000000000000000000000000000000000000000000000000000000000004
  --  8: 0000000000000000000000000000000000000000000000000000000000000000
  --  9: 0000000000000000000000000000000000000000000000000000000000000000
  -- 10: 0000000000000000000000000000000000000000000000000000000000000000
  -- 11: 0000000000000000000000000000000000000000000000000000000000000000
  -- 12: 00000000000000000000000000000000000000000000010f0cf064dd59200000
  -- 13: 0000000000000000000000000000000000000000000000000000000000000003
  -- 14: 0000000000000000000000000000000000000000000000000000000000000002
  -- 15: 0000000000000000000000007a603dc3eb0f4e3883929ee15a3c86d2ac45f445
  -- 16: 0000000000000000000000000000000000000000000000000000000000000000
  -- 17: 0000000000000000000000000000000000000000000000000000000000000160
  -- 18: 00000000000000000000000000000000000000000000000000000000000000e0
  -- 19: 0000000000000000000000000000000000000000000000000000000000000000
  -- 20: 0000000000000000000000000000000000000000000000000000000000000000
  -- 21: 00000000000000000000000045f783cce6b7ff23b2ab2d70e416cdb7d6055f51
  -- 22: 0000000000000000000000000000000000000000000000000000000000000000
  -- 23: 0000000000000000000000000000000000000000000000000000000000000001
  -- 24: 0000000000000000000000000000000000000000000000000000000000000001
  -- 25: 0000000000000000000000000000000000000000000000000000000000000000
    --1 : 26 : 6 : 5
    --  0:  (tuple)
    --  0: 0000000000000000000000000000000000000000000000000000000000000040
    --  1: 00000000000000000000000000000000000000000000000000000000000000a0
    --  2: 0000000000000000000000000000000000000000000000000000000000000001
    --  3: 00000000000000000000000066215d23b8a247c80c2d1b7bef4befc2ab384bce
    --  4: 0000000000000000000000000000000000000000000000000000000000000000
    --  5: 0000000000000000000000000000000000000000000000000000000000000001 <===
    --  6: 0000000000000000000000000000000000000000000000000000000000000020 <---
    --  7: 0000000000000000000000000000000000000000000000000000000000000004
    --  8: 0000000000000000000000000000000000000000000000000000000000000000
    --  9: 0000000000000000000000000000000000000000000000000000000000000000
    -- 10: 0000000000000000000000000000000000000000000000000000000000000000
    -- 11: 0000000000000000000000000000000000000000000000000000000000000000
    -- 12: 00000000000000000000000000000000000000000000010f0cf064dd59200000
    -- 13: 0000000000000000000000000000000000000000000000000000000000000003
    -- 14: 0000000000000000000000000000000000000000000000000000000000000002
    -- 15: 0000000000000000000000007a603dc3eb0f4e3883929ee15a3c86d2ac45f445
    -- 16: 0000000000000000000000000000000000000000000000000000000000000000
    -- 17: 0000000000000000000000000000000000000000000000000000000000000160
    -- 18: 00000000000000000000000000000000000000000000000000000000000000e0
    -- 19: 0000000000000000000000000000000000000000000000000000000000000000
    -- 20: 0000000000000000000000000000000000000000000000000000000000000000
    -- 21: 00000000000000000000000045f783cce6b7ff23b2ab2d70e416cdb7d6055f51
    -- 22: 0000000000000000000000000000000000000000000000000000000000000000
    -- 23: 0000000000000000000000000000000000000000000000000000000000000001
    -- 24: 0000000000000000000000000000000000000000000000000000000000000001
    -- 25: 0000000000000000000000000000000000000000000000000000000000000000
      --8 : 26 : 6 : 5
      --  0: actionType (uint8)
      --  1: accountId (uint256)
      --  2: amount (tuple)
      --  3: primaryMarketId (uint256)
      --  4: secondaryMarketId (uint256)
      --  5: otherAddress (address)
      --  6: otherAccountId (uint256)
      --  7: data (bytes)
      --  0: 0000000000000000000000000000000000000000000000000000000000000040
      --  1: 00000000000000000000000000000000000000000000000000000000000000a0
      --  2: 0000000000000000000000000000000000000000000000000000000000000001
      --  3: 00000000000000000000000066215d23b8a247c80c2d1b7bef4befc2ab384bce
      --  4: 0000000000000000000000000000000000000000000000000000000000000000
      --  5: 0000000000000000000000000000000000000000000000000000000000000001 <===
      --  6: 0000000000000000000000000000000000000000000000000000000000000020 <---
      --  7: 0000000000000000000000000000000000000000000000000000000000000004
      --  8: 0000000000000000000000000000000000000000000000000000000000000000
      --  9: 0000000000000000000000000000000000000000000000000000000000000000
      -- 10: 0000000000000000000000000000000000000000000000000000000000000000
      -- 11: 0000000000000000000000000000000000000000000000000000000000000000
      -- 12: 00000000000000000000000000000000000000000000010f0cf064dd59200000
      -- 13: 0000000000000000000000000000000000000000000000000000000000000003
      -- 14: 0000000000000000000000000000000000000000000000000000000000000002
      -- 15: 0000000000000000000000007a603dc3eb0f4e3883929ee15a3c86d2ac45f445
      -- 16: 0000000000000000000000000000000000000000000000000000000000000000
      -- 17: 0000000000000000000000000000000000000000000000000000000000000160
      -- 18: 00000000000000000000000000000000000000000000000000000000000000e0
      -- 19: 0000000000000000000000000000000000000000000000000000000000000000
      -- 20: 0000000000000000000000000000000000000000000000000000000000000000
      -- 21: 00000000000000000000000045f783cce6b7ff23b2ab2d70e416cdb7d6055f51
      -- 22: 0000000000000000000000000000000000000000000000000000000000000000
      -- 23: 0000000000000000000000000000000000000000000000000000000000000001
      -- 24: 0000000000000000000000000000000000000000000000000000000000000001
      -- 25: 0000000000000000000000000000000000000000000000000000000000000000
      --8 : 26 : 7 : 5
      --  0: actionType (uint8) = 32
      --  1: accountId (uint256)
      --  2: amount (tuple)
      --  3: primaryMarketId (uint256)
      --  4: secondaryMarketId (uint256)
      --  5: otherAddress (address)
      --  6: otherAccountId (uint256)
      --  7: data (bytes)
      --  0: 0000000000000000000000000000000000000000000000000000000000000040
      --  1: 00000000000000000000000000000000000000000000000000000000000000a0
      --  2: 0000000000000000000000000000000000000000000000000000000000000001
      --  3: 00000000000000000000000066215d23b8a247c80c2d1b7bef4befc2ab384bce
      --  4: 0000000000000000000000000000000000000000000000000000000000000000
      --  5: 0000000000000000000000000000000000000000000000000000000000000001 <===
      --  6: 0000000000000000000000000000000000000000000000000000000000000020
      --  7: 0000000000000000000000000000000000000000000000000000000000000004 <---
      --  8: 0000000000000000000000000000000000000000000000000000000000000000
      --  9: 0000000000000000000000000000000000000000000000000000000000000000
      -- 10: 0000000000000000000000000000000000000000000000000000000000000000
      -- 11: 0000000000000000000000000000000000000000000000000000000000000000
      -- 12: 00000000000000000000000000000000000000000000010f0cf064dd59200000
      -- 13: 0000000000000000000000000000000000000000000000000000000000000003
      -- 14: 0000000000000000000000000000000000000000000000000000000000000002
      -- 15: 0000000000000000000000007a603dc3eb0f4e3883929ee15a3c86d2ac45f445
      -- 16: 0000000000000000000000000000000000000000000000000000000000000000
      -- 17: 0000000000000000000000000000000000000000000000000000000000000160
      -- 18: 00000000000000000000000000000000000000000000000000000000000000e0
      -- 19: 0000000000000000000000000000000000000000000000000000000000000000
      -- 20: 0000000000000000000000000000000000000000000000000000000000000000
      -- 21: 00000000000000000000000045f783cce6b7ff23b2ab2d70e416cdb7d6055f51
      -- 22: 0000000000000000000000000000000000000000000000000000000000000000
      -- 23: 0000000000000000000000000000000000000000000000000000000000000001
      -- 24: 0000000000000000000000000000000000000000000000000000000000000001
      -- 25: 0000000000000000000000000000000000000000000000000000000000000000
      --8 : 26 : 8 : 5
      --  0: actionType (uint8) = 32
      --  1: accountId (uint256) = 4
      --  2: amount (tuple)
      --  3: primaryMarketId (uint256)
      --  4: secondaryMarketId (uint256)
      --  5: otherAddress (address)
      --  6: otherAccountId (uint256)
      --  7: data (bytes)
      --  0: 0000000000000000000000000000000000000000000000000000000000000040
      --  1: 00000000000000000000000000000000000000000000000000000000000000a0
      --  2: 0000000000000000000000000000000000000000000000000000000000000001
      --  3: 00000000000000000000000066215d23b8a247c80c2d1b7bef4befc2ab384bce
      --  4: 0000000000000000000000000000000000000000000000000000000000000000
      --  5: 0000000000000000000000000000000000000000000000000000000000000001 <===
      --  6: 0000000000000000000000000000000000000000000000000000000000000020
      --  7: 0000000000000000000000000000000000000000000000000000000000000004
      --  8: 0000000000000000000000000000000000000000000000000000000000000000 <---
      --  9: 0000000000000000000000000000000000000000000000000000000000000000
      -- 10: 0000000000000000000000000000000000000000000000000000000000000000
      -- 11: 0000000000000000000000000000000000000000000000000000000000000000
      -- 12: 00000000000000000000000000000000000000000000010f0cf064dd59200000
      -- 13: 0000000000000000000000000000000000000000000000000000000000000003
      -- 14: 0000000000000000000000000000000000000000000000000000000000000002
      -- 15: 0000000000000000000000007a603dc3eb0f4e3883929ee15a3c86d2ac45f445
      -- 16: 0000000000000000000000000000000000000000000000000000000000000000
      -- 17: 0000000000000000000000000000000000000000000000000000000000000160
      -- 18: 00000000000000000000000000000000000000000000000000000000000000e0
      -- 19: 0000000000000000000000000000000000000000000000000000000000000000
      -- 20: 0000000000000000000000000000000000000000000000000000000000000000
      -- 21: 00000000000000000000000045f783cce6b7ff23b2ab2d70e416cdb7d6055f51
      -- 22: 0000000000000000000000000000000000000000000000000000000000000000
      -- 23: 0000000000000000000000000000000000000000000000000000000000000001
      -- 24: 0000000000000000000000000000000000000000000000000000000000000001
      -- 25: 0000000000000000000000000000000000000000000000000000000000000000
        --4 : 26 : 8 : 5
        --  0: sign (bool)
        --  1: denomination (uint8)
        --  2: ref (uint8)
        --  3: value (uint256)
        --  0: 0000000000000000000000000000000000000000000000000000000000000040
        --  1: 00000000000000000000000000000000000000000000000000000000000000a0
        --  2: 0000000000000000000000000000000000000000000000000000000000000001
        --  3: 00000000000000000000000066215d23b8a247c80c2d1b7bef4befc2ab384bce
        --  4: 0000000000000000000000000000000000000000000000000000000000000000
        --  5: 0000000000000000000000000000000000000000000000000000000000000001 <===
        --  6: 0000000000000000000000000000000000000000000000000000000000000020
        --  7: 0000000000000000000000000000000000000000000000000000000000000004
        --  8: 0000000000000000000000000000000000000000000000000000000000000000 <---
        --  9: 0000000000000000000000000000000000000000000000000000000000000000
        -- 10: 0000000000000000000000000000000000000000000000000000000000000000
        -- 11: 0000000000000000000000000000000000000000000000000000000000000000
        -- 12: 00000000000000000000000000000000000000000000010f0cf064dd59200000
        -- 13: 0000000000000000000000000000000000000000000000000000000000000003
        -- 14: 0000000000000000000000000000000000000000000000000000000000000002
        -- 15: 0000000000000000000000007a603dc3eb0f4e3883929ee15a3c86d2ac45f445
        -- 16: 0000000000000000000000000000000000000000000000000000000000000000
        -- 17: 0000000000000000000000000000000000000000000000000000000000000160
        -- 18: 00000000000000000000000000000000000000000000000000000000000000e0
        -- 19: 0000000000000000000000000000000000000000000000000000000000000000
        -- 20: 0000000000000000000000000000000000000000000000000000000000000000
        -- 21: 00000000000000000000000045f783cce6b7ff23b2ab2d70e416cdb7d6055f51
        -- 22: 0000000000000000000000000000000000000000000000000000000000000000
        -- 23: 0000000000000000000000000000000000000000000000000000000000000001
        -- 24: 0000000000000000000000000000000000000000000000000000000000000001
        -- 25: 0000000000000000000000000000000000000000000000000000000000000000
        --4 : 26 : 9 : 5
        --  0: sign (bool) = false
        --  1: denomination (uint8)
        --  2: ref (uint8)
        --  3: value (uint256)
        --  0: 0000000000000000000000000000000000000000000000000000000000000040
        --  1: 00000000000000000000000000000000000000000000000000000000000000a0
        --  2: 0000000000000000000000000000000000000000000000000000000000000001
        --  3: 00000000000000000000000066215d23b8a247c80c2d1b7bef4befc2ab384bce
        --  4: 0000000000000000000000000000000000000000000000000000000000000000
        --  5: 0000000000000000000000000000000000000000000000000000000000000001 <===
        --  6: 0000000000000000000000000000000000000000000000000000000000000020
        --  7: 0000000000000000000000000000000000000000000000000000000000000004
        --  8: 0000000000000000000000000000000000000000000000000000000000000000
        --  9: 0000000000000000000000000000000000000000000000000000000000000000 <---
        -- 10: 0000000000000000000000000000000000000000000000000000000000000000
        -- 11: 0000000000000000000000000000000000000000000000000000000000000000
        -- 12: 00000000000000000000000000000000000000000000010f0cf064dd59200000
        -- 13: 0000000000000000000000000000000000000000000000000000000000000003
        -- 14: 0000000000000000000000000000000000000000000000000000000000000002
        -- 15: 0000000000000000000000007a603dc3eb0f4e3883929ee15a3c86d2ac45f445
        -- 16: 0000000000000000000000000000000000000000000000000000000000000000
        -- 17: 0000000000000000000000000000000000000000000000000000000000000160
        -- 18: 00000000000000000000000000000000000000000000000000000000000000e0
        -- 19: 0000000000000000000000000000000000000000000000000000000000000000
        -- 20: 0000000000000000000000000000000000000000000000000000000000000000
        -- 21: 00000000000000000000000045f783cce6b7ff23b2ab2d70e416cdb7d6055f51
        -- 22: 0000000000000000000000000000000000000000000000000000000000000000
        -- 23: 0000000000000000000000000000000000000000000000000000000000000001
        -- 24: 0000000000000000000000000000000000000000000000000000000000000001
        -- 25: 0000000000000000000000000000000000000000000000000000000000000000
        --4 : 26 : 10 : 5
        --  0: sign (bool) = false
        --  1: denomination (uint8) = 0
        --  2: ref (uint8)
        --  3: value (uint256)
        --  0: 0000000000000000000000000000000000000000000000000000000000000040
        --  1: 00000000000000000000000000000000000000000000000000000000000000a0
        --  2: 0000000000000000000000000000000000000000000000000000000000000001
        --  3: 00000000000000000000000066215d23b8a247c80c2d1b7bef4befc2ab384bce
        --  4: 0000000000000000000000000000000000000000000000000000000000000000
        --  5: 0000000000000000000000000000000000000000000000000000000000000001 <===
        --  6: 0000000000000000000000000000000000000000000000000000000000000020
        --  7: 0000000000000000000000000000000000000000000000000000000000000004
        --  8: 0000000000000000000000000000000000000000000000000000000000000000
        --  9: 0000000000000000000000000000000000000000000000000000000000000000
        -- 10: 0000000000000000000000000000000000000000000000000000000000000000 <---
        -- 11: 0000000000000000000000000000000000000000000000000000000000000000
        -- 12: 00000000000000000000000000000000000000000000010f0cf064dd59200000
        -- 13: 0000000000000000000000000000000000000000000000000000000000000003
        -- 14: 0000000000000000000000000000000000000000000000000000000000000002
        -- 15: 0000000000000000000000007a603dc3eb0f4e3883929ee15a3c86d2ac45f445
        -- 16: 0000000000000000000000000000000000000000000000000000000000000000
        -- 17: 0000000000000000000000000000000000000000000000000000000000000160
        -- 18: 00000000000000000000000000000000000000000000000000000000000000e0
        -- 19: 0000000000000000000000000000000000000000000000000000000000000000
        -- 20: 0000000000000000000000000000000000000000000000000000000000000000
        -- 21: 00000000000000000000000045f783cce6b7ff23b2ab2d70e416cdb7d6055f51
        -- 22: 0000000000000000000000000000000000000000000000000000000000000000
        -- 23: 0000000000000000000000000000000000000000000000000000000000000001
        -- 24: 0000000000000000000000000000000000000000000000000000000000000001
        -- 25: 0000000000000000000000000000000000000000000000000000000000000000
        --4 : 26 : 11 : 5
        --  0: sign (bool) = false
        --  1: denomination (uint8) = 0
        --  2: ref (uint8) = 0
        --  3: value (uint256)
        --  0: 0000000000000000000000000000000000000000000000000000000000000040
        --  1: 00000000000000000000000000000000000000000000000000000000000000a0
        --  2: 0000000000000000000000000000000000000000000000000000000000000001
        --  3: 00000000000000000000000066215d23b8a247c80c2d1b7bef4befc2ab384bce
        --  4: 0000000000000000000000000000000000000000000000000000000000000000
        --  5: 0000000000000000000000000000000000000000000000000000000000000001 <===
        --  6: 0000000000000000000000000000000000000000000000000000000000000020
        --  7: 0000000000000000000000000000000000000000000000000000000000000004
        --  8: 0000000000000000000000000000000000000000000000000000000000000000
        --  9: 0000000000000000000000000000000000000000000000000000000000000000
        -- 10: 0000000000000000000000000000000000000000000000000000000000000000
        -- 11: 0000000000000000000000000000000000000000000000000000000000000000 <---
        -- 12: 00000000000000000000000000000000000000000000010f0cf064dd59200000
        -- 13: 0000000000000000000000000000000000000000000000000000000000000003
        -- 14: 0000000000000000000000000000000000000000000000000000000000000002
        -- 15: 0000000000000000000000007a603dc3eb0f4e3883929ee15a3c86d2ac45f445
        -- 16: 0000000000000000000000000000000000000000000000000000000000000000
        -- 17: 0000000000000000000000000000000000000000000000000000000000000160
        -- 18: 00000000000000000000000000000000000000000000000000000000000000e0
        -- 19: 0000000000000000000000000000000000000000000000000000000000000000
        -- 20: 0000000000000000000000000000000000000000000000000000000000000000
        -- 21: 00000000000000000000000045f783cce6b7ff23b2ab2d70e416cdb7d6055f51
        -- 22: 0000000000000000000000000000000000000000000000000000000000000000
        -- 23: 0000000000000000000000000000000000000000000000000000000000000001
        -- 24: 0000000000000000000000000000000000000000000000000000000000000001
        -- 25: 0000000000000000000000000000000000000000000000000000000000000000
      --8 : 26 : 12 : 5
      --  0: actionType (uint8) = 32
      --  1: accountId (uint256) = 4
      --  2: amount (tuple) = {"sign":"false", "denomination":"0", "ref":"0", "value":"0"}
      --  3: primaryMarketId (uint256)
      --  4: secondaryMarketId (uint256)
      --  5: otherAddress (address)
      --  6: otherAccountId (uint256)
      --  7: data (bytes)
      --  0: 0000000000000000000000000000000000000000000000000000000000000040
      --  1: 00000000000000000000000000000000000000000000000000000000000000a0
      --  2: 0000000000000000000000000000000000000000000000000000000000000001
      --  3: 00000000000000000000000066215d23b8a247c80c2d1b7bef4befc2ab384bce
      --  4: 0000000000000000000000000000000000000000000000000000000000000000
      --  5: 0000000000000000000000000000000000000000000000000000000000000001 <===
      --  6: 0000000000000000000000000000000000000000000000000000000000000020
      --  7: 0000000000000000000000000000000000000000000000000000000000000004
      --  8: 0000000000000000000000000000000000000000000000000000000000000000
      --  9: 0000000000000000000000000000000000000000000000000000000000000000
      -- 10: 0000000000000000000000000000000000000000000000000000000000000000
      -- 11: 0000000000000000000000000000000000000000000000000000000000000000
      -- 12: 00000000000000000000000000000000000000000000010f0cf064dd59200000 <---
      -- 13: 0000000000000000000000000000000000000000000000000000000000000003
      -- 14: 0000000000000000000000000000000000000000000000000000000000000002
      -- 15: 0000000000000000000000007a603dc3eb0f4e3883929ee15a3c86d2ac45f445
      -- 16: 0000000000000000000000000000000000000000000000000000000000000000
      -- 17: 0000000000000000000000000000000000000000000000000000000000000160
      -- 18: 00000000000000000000000000000000000000000000000000000000000000e0
      -- 19: 0000000000000000000000000000000000000000000000000000000000000000
      -- 20: 0000000000000000000000000000000000000000000000000000000000000000
      -- 21: 00000000000000000000000045f783cce6b7ff23b2ab2d70e416cdb7d6055f51
      -- 22: 0000000000000000000000000000000000000000000000000000000000000000
      -- 23: 0000000000000000000000000000000000000000000000000000000000000001
      -- 24: 0000000000000000000000000000000000000000000000000000000000000001
      -- 25: 0000000000000000000000000000000000000000000000000000000000000000
      --8 : 26 : 13 : 5
      --  0: actionType (uint8) = 32
      --  1: accountId (uint256) = 4
      --  2: amount (tuple) = {"sign":"false", "denomination":"0", "ref":"0", "value":"0"}
      --  3: primaryMarketId (uint256) = 5000000000000000000000
      --  4: secondaryMarketId (uint256)
      --  5: otherAddress (address)
      --  6: otherAccountId (uint256)
      --  7: data (bytes)
      --  0: 0000000000000000000000000000000000000000000000000000000000000040
      --  1: 00000000000000000000000000000000000000000000000000000000000000a0
      --  2: 0000000000000000000000000000000000000000000000000000000000000001
      --  3: 00000000000000000000000066215d23b8a247c80c2d1b7bef4befc2ab384bce
      --  4: 0000000000000000000000000000000000000000000000000000000000000000
      --  5: 0000000000000000000000000000000000000000000000000000000000000001 <===
      --  6: 0000000000000000000000000000000000000000000000000000000000000020
      --  7: 0000000000000000000000000000000000000000000000000000000000000004
      --  8: 0000000000000000000000000000000000000000000000000000000000000000
      --  9: 0000000000000000000000000000000000000000000000000000000000000000
      -- 10: 0000000000000000000000000000000000000000000000000000000000000000
      -- 11: 0000000000000000000000000000000000000000000000000000000000000000
      -- 12: 00000000000000000000000000000000000000000000010f0cf064dd59200000
      -- 13: 0000000000000000000000000000000000000000000000000000000000000003 <---
      -- 14: 0000000000000000000000000000000000000000000000000000000000000002
      -- 15: 0000000000000000000000007a603dc3eb0f4e3883929ee15a3c86d2ac45f445
      -- 16: 0000000000000000000000000000000000000000000000000000000000000000
      -- 17: 0000000000000000000000000000000000000000000000000000000000000160
      -- 18: 00000000000000000000000000000000000000000000000000000000000000e0
      -- 19: 0000000000000000000000000000000000000000000000000000000000000000
      -- 20: 0000000000000000000000000000000000000000000000000000000000000000
      -- 21: 00000000000000000000000045f783cce6b7ff23b2ab2d70e416cdb7d6055f51
      -- 22: 0000000000000000000000000000000000000000000000000000000000000000
      -- 23: 0000000000000000000000000000000000000000000000000000000000000001
      -- 24: 0000000000000000000000000000000000000000000000000000000000000001
      -- 25: 0000000000000000000000000000000000000000000000000000000000000000
      --8 : 26 : 14 : 5
      --  0: actionType (uint8) = 32
      --  1: accountId (uint256) = 4
      --  2: amount (tuple) = {"sign":"false", "denomination":"0", "ref":"0", "value":"0"}
      --  3: primaryMarketId (uint256) = 5000000000000000000000
      --  4: secondaryMarketId (uint256) = 3
      --  5: otherAddress (address)
      --  6: otherAccountId (uint256)
      --  7: data (bytes)
      --  0: 0000000000000000000000000000000000000000000000000000000000000040
      --  1: 00000000000000000000000000000000000000000000000000000000000000a0
      --  2: 0000000000000000000000000000000000000000000000000000000000000001
      --  3: 00000000000000000000000066215d23b8a247c80c2d1b7bef4befc2ab384bce
      --  4: 0000000000000000000000000000000000000000000000000000000000000000
      --  5: 0000000000000000000000000000000000000000000000000000000000000001 <===
      --  6: 0000000000000000000000000000000000000000000000000000000000000020
      --  7: 0000000000000000000000000000000000000000000000000000000000000004
      --  8: 0000000000000000000000000000000000000000000000000000000000000000
      --  9: 0000000000000000000000000000000000000000000000000000000000000000
      -- 10: 0000000000000000000000000000000000000000000000000000000000000000
      -- 11: 0000000000000000000000000000000000000000000000000000000000000000
      -- 12: 00000000000000000000000000000000000000000000010f0cf064dd59200000
      -- 13: 0000000000000000000000000000000000000000000000000000000000000003
      -- 14: 0000000000000000000000000000000000000000000000000000000000000002 <---
      -- 15: 0000000000000000000000007a603dc3eb0f4e3883929ee15a3c86d2ac45f445
      -- 16: 0000000000000000000000000000000000000000000000000000000000000000
      -- 17: 0000000000000000000000000000000000000000000000000000000000000160
      -- 18: 00000000000000000000000000000000000000000000000000000000000000e0
      -- 19: 0000000000000000000000000000000000000000000000000000000000000000
      -- 20: 0000000000000000000000000000000000000000000000000000000000000000
      -- 21: 00000000000000000000000045f783cce6b7ff23b2ab2d70e416cdb7d6055f51
      -- 22: 0000000000000000000000000000000000000000000000000000000000000000
      -- 23: 0000000000000000000000000000000000000000000000000000000000000001
      -- 24: 0000000000000000000000000000000000000000000000000000000000000001
      -- 25: 0000000000000000000000000000000000000000000000000000000000000000
      --8 : 26 : 15 : 5
      --  0: actionType (uint8) = 32
      --  1: accountId (uint256) = 4
      --  2: amount (tuple) = {"sign":"false", "denomination":"0", "ref":"0", "value":"0"}
      --  3: primaryMarketId (uint256) = 5000000000000000000000
      --  4: secondaryMarketId (uint256) = 3
      --  5: otherAddress (address) = 0x0000000000000000000000000000000000000002
      --  6: otherAccountId (uint256)
      --  7: data (bytes)
      --  0: 0000000000000000000000000000000000000000000000000000000000000040
      --  1: 00000000000000000000000000000000000000000000000000000000000000a0
      --  2: 0000000000000000000000000000000000000000000000000000000000000001
      --  3: 00000000000000000000000066215d23b8a247c80c2d1b7bef4befc2ab384bce
      --  4: 0000000000000000000000000000000000000000000000000000000000000000
      --  5: 0000000000000000000000000000000000000000000000000000000000000001 <===
      --  6: 0000000000000000000000000000000000000000000000000000000000000020
      --  7: 0000000000000000000000000000000000000000000000000000000000000004
      --  8: 0000000000000000000000000000000000000000000000000000000000000000
      --  9: 0000000000000000000000000000000000000000000000000000000000000000
      -- 10: 0000000000000000000000000000000000000000000000000000000000000000
      -- 11: 0000000000000000000000000000000000000000000000000000000000000000
      -- 12: 00000000000000000000000000000000000000000000010f0cf064dd59200000
      -- 13: 0000000000000000000000000000000000000000000000000000000000000003
      -- 14: 0000000000000000000000000000000000000000000000000000000000000002
      -- 15: 0000000000000000000000007a603dc3eb0f4e3883929ee15a3c86d2ac45f445 <---
      -- 16: 0000000000000000000000000000000000000000000000000000000000000000
      -- 17: 0000000000000000000000000000000000000000000000000000000000000160
      -- 18: 00000000000000000000000000000000000000000000000000000000000000e0
      -- 19: 0000000000000000000000000000000000000000000000000000000000000000
      -- 20: 0000000000000000000000000000000000000000000000000000000000000000
      -- 21: 00000000000000000000000045f783cce6b7ff23b2ab2d70e416cdb7d6055f51
      -- 22: 0000000000000000000000000000000000000000000000000000000000000000
      -- 23: 0000000000000000000000000000000000000000000000000000000000000001
      -- 24: 0000000000000000000000000000000000000000000000000000000000000001
      -- 25: 0000000000000000000000000000000000000000000000000000000000000000
      --8 : 26 : 16 : 5
      --  0: actionType (uint8) = 32
      --  1: accountId (uint256) = 4
      --  2: amount (tuple) = {"sign":"false", "denomination":"0", "ref":"0", "value":"0"}
      --  3: primaryMarketId (uint256) = 5000000000000000000000
      --  4: secondaryMarketId (uint256) = 3
      --  5: otherAddress (address) = 0x0000000000000000000000000000000000000002
      --  6: otherAccountId (uint256) = 698643126096518798703856029384548432733880579141
      --  7: data (bytes)
      --  0: 0000000000000000000000000000000000000000000000000000000000000040
      --  1: 00000000000000000000000000000000000000000000000000000000000000a0
      --  2: 0000000000000000000000000000000000000000000000000000000000000001
      --  3: 00000000000000000000000066215d23b8a247c80c2d1b7bef4befc2ab384bce
      --  4: 0000000000000000000000000000000000000000000000000000000000000000
      --  5: 0000000000000000000000000000000000000000000000000000000000000001 <===
      --  6: 0000000000000000000000000000000000000000000000000000000000000020
      --  7: 0000000000000000000000000000000000000000000000000000000000000004
      --  8: 0000000000000000000000000000000000000000000000000000000000000000
      --  9: 0000000000000000000000000000000000000000000000000000000000000000
      -- 10: 0000000000000000000000000000000000000000000000000000000000000000
      -- 11: 0000000000000000000000000000000000000000000000000000000000000000
      -- 12: 00000000000000000000000000000000000000000000010f0cf064dd59200000
      -- 13: 0000000000000000000000000000000000000000000000000000000000000003
      -- 14: 0000000000000000000000000000000000000000000000000000000000000002
      -- 15: 0000000000000000000000007a603dc3eb0f4e3883929ee15a3c86d2ac45f445
      -- 16: 0000000000000000000000000000000000000000000000000000000000000000 <---
      -- 17: 0000000000000000000000000000000000000000000000000000000000000160
      -- 18: 00000000000000000000000000000000000000000000000000000000000000e0
      -- 19: 0000000000000000000000000000000000000000000000000000000000000000
      -- 20: 0000000000000000000000000000000000000000000000000000000000000000
      -- 21: 00000000000000000000000045f783cce6b7ff23b2ab2d70e416cdb7d6055f51
      -- 22: 0000000000000000000000000000000000000000000000000000000000000000
      -- 23: 0000000000000000000000000000000000000000000000000000000000000001
      -- 24: 0000000000000000000000000000000000000000000000000000000000000001
      -- 25: 0000000000000000000000000000000000000000000000000000000000000000
  {
    "hash": "0xfa62ab036f36b4755bfa0d6e3e641d08daa7e41e95b0c1f2246485702319efb8",
    "blockHash": "0x9793244e740c78afa6065779660d2ea6be9b9d00b94311e1bcda3fcfe191c829",
    "blockNumber": 10052989,
    "transactionIndex": 73,
    "timestamp": 1589308522,
    "from": "0x66215d23b8a247c80c2d1b7bef4befc2ab384bce",
    "to": "0x1e0447b19bb6ecfdae1e4ae1694b0c3659614e4e",
    "value": 0,
    "gas": 2687202,
    "gasPrice": 18800000000,
    "input": "0xa67a6a45000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000000100000000000000000000000066215d23b8a247c80c2d1b7bef4befc2ab384bcef0cf064dd59200000000000000000000000000000000000000000000000000000000000000000000300000000000000000000000000000000000000000000000000000000000000020000000000000000000000007a603dc3eb0f4e3883929ee15a3c86d2ac45f4450000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000016000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000045f783cce6b7ff23b2ab2d70e416cdb7d6055f510000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000",
    "isError": 0,
    "hasToken": 0,
    "receipt": {
      "contractAddress": "0x0",
      "gasUsed": 1635850,
      "logs": [
        {
          "address": "0x1e0447b19bb6ecfdae1e4ae1694b0c3659614e4e",
          "logIndex": 96,
          "topics": [
            "0x91b01baeee3a24b590d112613814d86801005c7ef9353e7fc1eaeaf33ccf83b0"
          ],
          "data": "0x00000000000000000000000066215d23b8a247c80c2d1b7bef4befc2ab384bce"
        },
        {
          "address": "0x1e0447b19bb6ecfdae1e4ae1694b0c3659614e4e",
          "logIndex": 97,
          "topics": [
            "0xf4626fd1187f91e6761ffb8a6ac3e8d9235a4a92da54e43feb0c57c4a4a322ab",
            "0x0000000000000000000000000000000000000000000000000000000000000003"
          ],
          "data": "0x0000000000000000000000000000000000000000000000000e4ae9b2b9c731f20000000000000000000000000000000000000000000000000e315753d842f1a6000000000000000000000000000000000000000000000000000000005ebaec6a"
        },
        {
          "address": "0x1e0447b19bb6ecfdae1e4ae1694b0c3659614e4e",
          "logIndex": 98,
          "topics": [
            "0xf4626fd1187f91e6761ffb8a6ac3e8d9235a4a92da54e43feb0c57c4a4a322ab",
            "0x0000000000000000000000000000000000000000000000000000000000000002"
          ],
          "data": "0x0000000000000000000000000000000000000000000000000eddb1229e849e750000000000000000000000000000000000000000000000000e747ed0b1b6074c000000000000000000000000000000000000000000000000000000005ebaec6a"
        },
        {
          "address": "0x1e0447b19bb6ecfdae1e4ae1694b0c3659614e4e",
          "logIndex": 99,
          "topics": [
            "0xf4626fd1187f91e6761ffb8a6ac3e8d9235a4a92da54e43feb0c57c4a4a322ab",
            "0x0000000000000000000000000000000000000000000000000000000000000000"
          ],
          "data": "0x0000000000000000000000000000000000000000000000000e03c06faa224aa40000000000000000000000000000000000000000000000000de55ea41c59b8f6000000000000000000000000000000000000000000000000000000005ebaec6a"
        },
        {
          "address": "0x6b175474e89094c44da98b954eedeac495271d0f",
          "logIndex": 100,
          "topics": [
            "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
            "0x0000000000000000000000001e0447b19bb6ecfdae1e4ae1694b0c3659614e4e",
            "0x0000000000000000000000007a603dc3eb0f4e3883929ee15a3c86d2ac45f445"
          ],
          "data": "0x00000000000000000000000000000000000000000000010f0cf064dd59200000",
          "articulatedLog": {
            "name": "Transfer",
            "inputs": [
              {
                "name": "_from",
                "value": "0x1e0447b19bb6ecfdae1e4ae1694b0c3659614e4e"
              },
              {
                "name": "_to",
                "value": "0x7a603dc3eb0f4e3883929ee15a3c86d2ac45f445"
              },
              {
                "name": "_amount",
                "value": "5000000000000000000000"
              }
            ]
          },
          "compressedLog": "Transfer ( _from: 0x1e0447b19bb6ecfdae1e4ae1694b0c3659614e4e, _to: 0x7a603dc3eb0f4e3883929ee15a3c86d2ac45f445, _amount: 5000000000000000000000 )"
        },
        {
          "address": "0x6b175474e89094c44da98b954eedeac495271d0f",
          "logIndex": 101,
          "topics": [
            "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
            "0x0000000000000000000000007a603dc3eb0f4e3883929ee15a3c86d2ac45f445",
            "0x00000000000000000000000045f783cce6b7ff23b2ab2d70e416cdb7d6055f51"
          ],
          "data": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
          "articulatedLog": {
            "name": "Approval",
            "inputs": [
              {
                "name": "_owner",
                "value": "0x7a603dc3eb0f4e3883929ee15a3c86d2ac45f445"
              },
              {
                "name": "_spender",
                "value": "0x45f783cce6b7ff23b2ab2d70e416cdb7d6055f51"
              },
              {
                "name": "_amount",
                "value": "115792089237316195423570985008687907853269984665640564039457584007913129639935"
              }
            ]
          },
          "compressedLog": "Approval ( _owner: 0x7a603dc3eb0f4e3883929ee15a3c86d2ac45f445, _spender: 0x45f783cce6b7ff23b2ab2d70e416cdb7d6055f51, _amount: 115792089237316195423570985008687907853269984665640564039457584007913129639935 )"
        },
        {
          "address": "0x6b175474e89094c44da98b954eedeac495271d0f",
          "logIndex": 102,
          "topics": [
            "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
            "0x0000000000000000000000007a603dc3eb0f4e3883929ee15a3c86d2ac45f445",
            "0x00000000000000000000000045f783cce6b7ff23b2ab2d70e416cdb7d6055f51"
          ],
          "data": "0x00000000000000000000000000000000000000000000010f0cf064dd59200000",
          "articulatedLog": {
            "name": "Transfer",
            "inputs": [
              {
                "name": "_from",
                "value": "0x7a603dc3eb0f4e3883929ee15a3c86d2ac45f445"
              },
              {
                "name": "_to",
                "value": "0x45f783cce6b7ff23b2ab2d70e416cdb7d6055f51"
              },
              {
                "name": "_amount",
                "value": "5000000000000000000000"
              }
            ]
          },
          "compressedLog": "Transfer ( _from: 0x7a603dc3eb0f4e3883929ee15a3c86d2ac45f445, _to: 0x45f783cce6b7ff23b2ab2d70e416cdb7d6055f51, _amount: 5000000000000000000000 )"
        },
        {
          "address": "0x6b175474e89094c44da98b954eedeac495271d0f",
          "logIndex": 103,
          "topics": [
            "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
            "0x00000000000000000000000045f783cce6b7ff23b2ab2d70e416cdb7d6055f51",
            "0x00000000000000000000000016de59092dae5ccf4a1e6439d611fd0653f0bd01"
          ],
          "data": "0x00000000000000000000000000000000000000000000010f0cf064dd59200000",
          "articulatedLog": {
            "name": "Approval",
            "inputs": [
              {
                "name": "_owner",
                "value": "0x45f783cce6b7ff23b2ab2d70e416cdb7d6055f51"
              },
              {
                "name": "_spender",
                "value": "0x16de59092dae5ccf4a1e6439d611fd0653f0bd01"
              },
              {
                "name": "_amount",
                "value": "5000000000000000000000"
              }
            ]
          },
          "compressedLog": "Approval ( _owner: 0x45f783cce6b7ff23b2ab2d70e416cdb7d6055f51, _spender: 0x16de59092dae5ccf4a1e6439d611fd0653f0bd01, _amount: 5000000000000000000000 )"
        },
        {
          "address": "0x6b175474e89094c44da98b954eedeac495271d0f",
          "logIndex": 104,
          "topics": [
            "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
            "0x00000000000000000000000045f783cce6b7ff23b2ab2d70e416cdb7d6055f51",
            "0x00000000000000000000000016de59092dae5ccf4a1e6439d611fd0653f0bd01"
          ],
          "data": "0x00000000000000000000000000000000000000000000010f0cf064dd59200000",
          "articulatedLog": {
            "name": "Transfer",
            "inputs": [
              {
                "name": "_from",
                "value": "0x45f783cce6b7ff23b2ab2d70e416cdb7d6055f51"
              },
              {
                "name": "_to",
                "value": "0x16de59092dae5ccf4a1e6439d611fd0653f0bd01"
              },
              {
                "name": "_amount",
                "value": "5000000000000000000000"
              }
            ]
          },
          "compressedLog": "Transfer ( _from: 0x45f783cce6b7ff23b2ab2d70e416cdb7d6055f51, _to: 0x16de59092dae5ccf4a1e6439d611fd0653f0bd01, _amount: 5000000000000000000000 )"
        },
        {
          "address": "0x16de59092dae5ccf4a1e6439d611fd0653f0bd01",
          "logIndex": 105,
          "topics": [
            "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
            "0x0000000000000000000000000000000000000000000000000000000000000000",
            "0x00000000000000000000000045f783cce6b7ff23b2ab2d70e416cdb7d6055f51"
          ],
          "data": "0x00000000000000000000000000000000000000000000010afaf7b0e10ab11b5a",
          "articulatedLog": {
            "name": "Transfer",
            "inputs": [
              {
                "name": "_from",
                "value": "0x0"
              },
              {
                "name": "_to",
                "value": "0x45f783cce6b7ff23b2ab2d70e416cdb7d6055f51"
              },
              {
                "name": "_amount",
                "value": "4924918040916063755098"
              }
            ]
          },
          "compressedLog": "Transfer ( _from: 0x0, _to: 0x45f783cce6b7ff23b2ab2d70e416cdb7d6055f51, _amount: 4924918040916063755098 )"
        },
        {
          "address": "0xd6ad7a6750a7593e092a9b218d66c0a814a3436e",
          "logIndex": 106,
          "topics": [
            "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
            "0x00000000000000000000000045f783cce6b7ff23b2ab2d70e416cdb7d6055f51",
            "0x0000000000000000000000000000000000000000000000000000000000000000"
          ],
          "data": "0x00000000000000000000000000000000000000000000000000000001043dc358",
          "articulatedLog": {
            "name": "Transfer",
            "inputs": [
              {
                "name": "_from",
                "value": "0x45f783cce6b7ff23b2ab2d70e416cdb7d6055f51"
              },
              {
                "name": "_to",
                "value": "0x0"
              },
              {
                "name": "_amount",
                "value": "4366123864"
              }
            ]
          },
          "compressedLog": "Transfer ( _from: 0x45f783cce6b7ff23b2ab2d70e416cdb7d6055f51, _to: 0x0, _amount: 4366123864 )"
        },
        {
          "address": "0x9ba00d6856a4edf4665bca2c2309936572473b7e",
          "logIndex": 107,
          "topics": [
            "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
            "0x0000000000000000000000000000000000000000000000000000000000000000",
            "0x000000000000000000000000d6ad7a6750a7593e092a9b218d66c0a814a3436e"
          ],
          "data": "0x0000000000000000000000000000000000000000000000000000000000a83c62",
          "articulatedLog": {
            "name": "Transfer",
            "inputs": [
              {
                "name": "_from",
                "value": "0x0"
              },
              {
                "name": "_to",
                "value": "0xd6ad7a6750a7593e092a9b218d66c0a814a3436e"
              },
              {
                "name": "_amount",
                "value": "11025506"
              }
            ]
          },
          "compressedLog": "Transfer ( _from: 0x0, _to: 0xd6ad7a6750a7593e092a9b218d66c0a814a3436e, _amount: 11025506 )"
        },
        {
          "address": "0x9ba00d6856a4edf4665bca2c2309936572473b7e",
          "logIndex": 108,
          "topics": [
            "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
            "0x000000000000000000000000d6ad7a6750a7593e092a9b218d66c0a814a3436e",
            "0x0000000000000000000000000000000000000000000000000000000000000000"
          ],
          "data": "0x00000000000000000000000000000000000000000000000000000000e0a8f643",
          "articulatedLog": {
            "name": "Transfer",
            "inputs": [
              {
                "name": "_from",
                "value": "0xd6ad7a6750a7593e092a9b218d66c0a814a3436e"
              },
              {
                "name": "_to",
                "value": "0x0"
              },
              {
                "name": "_amount",
                "value": "3769169475"
              }
            ]
          },
          "compressedLog": "Transfer ( _from: 0xd6ad7a6750a7593e092a9b218d66c0a814a3436e, _to: 0x0, _amount: 3769169475 )"
        },
        {
          "address": "0x3dfd23a6c5e8bbcfc9581d2e864a68feb6a076d3",
          "logIndex": 109,
          "topics": [
            "0x04e4f521f16fcfd987978b05504262c2a2db223844977aab000e5accedb2d725",
            "0x000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48"
          ],
          "data": "0x0000000000000000000000000000000000000000001bb1652f37a342648258930000000000000000000000000000000000000000009528eff19ab18cb1e19e2b000000000000000000000000000000000000000000257f2c835a5f9e94b8678b00000000000000000000000000000000000000000346dc99bb39ee4f2954101f0000000000000000000000000000000000000000034acdc760e0cc5400f0835e"
        },
        {
          "address": "0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48",
          "logIndex": 110,
          "topics": [
            "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
            "0x0000000000000000000000003dfd23a6c5e8bbcfc9581d2e864a68feb6a076d3",
            "0x000000000000000000000000d6ad7a6750a7593e092a9b218d66c0a814a3436e"
          ],
          "data": "0x00000000000000000000000000000000000000000000000000000000e0a8f643",
          "articulatedLog": {
            "name": "Transfer",
            "inputs": [
              {
                "name": "_from",
                "value": "0x3dfd23a6c5e8bbcfc9581d2e864a68feb6a076d3"
              },
              {
                "name": "_to",
                "value": "0xd6ad7a6750a7593e092a9b218d66c0a814a3436e"
              },
              {
                "name": "_amount",
                "value": "3769169475"
              }
            ]
          },
          "compressedLog": "Transfer ( _from: 0x3dfd23a6c5e8bbcfc9581d2e864a68feb6a076d3, _to: 0xd6ad7a6750a7593e092a9b218d66c0a814a3436e, _amount: 3769169475 )"
        },
        {
          "address": "0x398ec7346dcd622edc5ae82352f02be94c62d119",
          "logIndex": 111,
          "topics": [
            "0x9c4ed599cd8555b9c1e8cd7643240d7d71eb76b792948c49fcb4d411f7b6b3c6",
            "0x000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48",
            "0x000000000000000000000000d6ad7a6750a7593e092a9b218d66c0a814a3436e"
          ],
          "data": "0x00000000000000000000000000000000000000000000000000000000e0a8f643000000000000000000000000000000000000000000000000000000005ebaec6a"
        },
        {
          "address": "0x9ba00d6856a4edf4665bca2c2309936572473b7e",
          "logIndex": 112,
          "topics": [
            "0xbd5034ffbd47e4e72a94baa2cdb74c6fad73cb3bcdc13036b72ec8306f5a7646",
            "0x000000000000000000000000d6ad7a6750a7593e092a9b218d66c0a814a3436e"
          ],
          "data": "0x00000000000000000000000000000000000000000000000000000000e0a8f6430000000000000000000000000000000000000000000000000000000000a83c6200000000000000000000000000000000000000000346dc99bb39ee4f2954101f",
          "articulatedLog": {
            "name": "Redeem",
            "stateMutability": "nonpayable",
            "inputs": [
              {
                "name": "_from",
                "value": "0xd6ad7a6750a7593e092a9b218d66c0a814a3436e",
                "internalType": "address"
              },
              {
                "name": "_value",
                "value": "3769169475",
                "internalType": "uint256"
              },
              {
                "name": "_fromBalanceIncrease",
                "value": "11025506",
                "internalType": "uint256"
              },
              {
                "name": "_fromIndex",
                "value": "1014121593306210030440419359",
                "internalType": "uint256"
              }
            ]
          },
          "compressedLog": "Redeem ( _from: 0xd6ad7a6750a7593e092a9b218d66c0a814a3436e, _value: 3769169475, _fromBalanceIncrease: 11025506, _fromIndex: 1014121593306210030440419359 )"
        },
        {
          "address": "0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48",
          "logIndex": 113,
          "topics": [
            "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
            "0x000000000000000000000000d6ad7a6750a7593e092a9b218d66c0a814a3436e",
            "0x00000000000000000000000045f783cce6b7ff23b2ab2d70e416cdb7d6055f51"
          ],
          "data": "0x000000000000000000000000000000000000000000000000000000012bf3a855",
          "articulatedLog": {
            "name": "Transfer",
            "inputs": [
              {
                "name": "_from",
                "value": "0xd6ad7a6750a7593e092a9b218d66c0a814a3436e"
              },
              {
                "name": "_to",
                "value": "0x45f783cce6b7ff23b2ab2d70e416cdb7d6055f51"
              },
              {
                "name": "_amount",
                "value": "5032355925"
              }
            ]
          },
          "compressedLog": "Transfer ( _from: 0xd6ad7a6750a7593e092a9b218d66c0a814a3436e, _to: 0x45f783cce6b7ff23b2ab2d70e416cdb7d6055f51, _amount: 5032355925 )"
        },
        {
          "address": "0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48",
          "logIndex": 114,
          "topics": [
            "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
            "0x00000000000000000000000045f783cce6b7ff23b2ab2d70e416cdb7d6055f51",
            "0x0000000000000000000000007a603dc3eb0f4e3883929ee15a3c86d2ac45f445"
          ],
          "data": "0x000000000000000000000000000000000000000000000000000000012bf3a855",
          "articulatedLog": {
            "name": "Transfer",
            "inputs": [
              {
                "name": "_from",
                "value": "0x45f783cce6b7ff23b2ab2d70e416cdb7d6055f51"
              },
              {
                "name": "_to",
                "value": "0x7a603dc3eb0f4e3883929ee15a3c86d2ac45f445"
              },
              {
                "name": "_amount",
                "value": "5032355925"
              }
            ]
          },
          "compressedLog": "Transfer ( _from: 0x45f783cce6b7ff23b2ab2d70e416cdb7d6055f51, _to: 0x7a603dc3eb0f4e3883929ee15a3c86d2ac45f445, _amount: 5032355925 )"
        },
        {
          "address": "0x45f783cce6b7ff23b2ab2d70e416cdb7d6055f51",
          "logIndex": 115,
          "topics": [
            "0xd013ca23e77a65003c2c659c5442c00c805371b7fc1ebd4c206c41d1536bd90b",
            "0x0000000000000000000000007a603dc3eb0f4e3883929ee15a3c86d2ac45f445"
          ],
          "data": "0x000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010f0cf064dd592000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000012bf3a855",
          "articulatedLog": {
            "name": "TokenExchangeUnderlying",
            "stateMutability": "nonpayable",
            "inputs": [
              {
                "name": "buyer",
                "value": "0x7a603dc3eb0f4e3883929ee15a3c86d2ac45f445",
                "internalType": "address"
              },
              {
                "name": "sold_id",
                "value": "0",
                "internalType": "int128"
              },
              {
                "name": "tokens_sold",
                "value": "5000000000000000000000",
                "internalType": "uint256"
              },
              {
                "name": "bought_id",
                "value": "1",
                "internalType": "int128"
              },
              {
                "name": "tokens_bought",
                "value": "5032355925",
                "internalType": "uint256"
              }
            ]
          },
          "compressedLog": "TokenExchangeUnderlying ( buyer: 0x7a603dc3eb0f4e3883929ee15a3c86d2ac45f445, sold_id: 0, tokens_sold: 5000000000000000000000, bought_id: 1, tokens_bought: 5032355925 )"
        },
        {
          "address": "0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48",
          "logIndex": 116,
          "topics": [
            "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
            "0x0000000000000000000000007a603dc3eb0f4e3883929ee15a3c86d2ac45f445",
            "0x0000000000000000000000001e0447b19bb6ecfdae1e4ae1694b0c3659614e4e"
          ],
          "data": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
          "articulatedLog": {
            "name": "Approval",
            "inputs": [
              {
                "name": "_owner",
                "value": "0x7a603dc3eb0f4e3883929ee15a3c86d2ac45f445"
              },
              {
                "name": "_spender",
                "value": "0x1e0447b19bb6ecfdae1e4ae1694b0c3659614e4e"
              },
              {
                "name": "_amount",
                "value": "115792089237316195423570985008687907853269984665640564039457584007913129639935"
              }
            ]
          },
          "compressedLog": "Approval ( _owner: 0x7a603dc3eb0f4e3883929ee15a3c86d2ac45f445, _spender: 0x1e0447b19bb6ecfdae1e4ae1694b0c3659614e4e, _amount: 115792089237316195423570985008687907853269984665640564039457584007913129639935 )"
        },
        {
          "address": "0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48",
          "logIndex": 117,
          "topics": [
            "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
            "0x0000000000000000000000007a603dc3eb0f4e3883929ee15a3c86d2ac45f445",
            "0x0000000000000000000000001e0447b19bb6ecfdae1e4ae1694b0c3659614e4e"
          ],
          "data": "0x000000000000000000000000000000000000000000000000000000012bf3a855",
          "articulatedLog": {
            "name": "Transfer",
            "inputs": [
              {
                "name": "_from",
                "value": "0x7a603dc3eb0f4e3883929ee15a3c86d2ac45f445"
              },
              {
                "name": "_to",
                "value": "0x1e0447b19bb6ecfdae1e4ae1694b0c3659614e4e"
              },
              {
                "name": "_amount",
                "value": "5032355925"
              }
            ]
          },
          "compressedLog": "Transfer ( _from: 0x7a603dc3eb0f4e3883929ee15a3c86d2ac45f445, _to: 0x1e0447b19bb6ecfdae1e4ae1694b0c3659614e4e, _amount: 5032355925 )"
        },
        {
          "address": "0x1e0447b19bb6ecfdae1e4ae1694b0c3659614e4e",
          "logIndex": 118,
          "topics": [
            "0xcc3330184b6d88cad87f9e9543b4d4110a6a3eaf20164ca5252d598d0acba3f1",
            "0x00000000000000000000000066215d23b8a247c80c2d1b7bef4befc2ab384bce"
          ],
          "data": "0x000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010f0cf064dd5920000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002490ccf3f4ce80623680000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000012bf3a85500000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000282e776ed0000000000000000000000007a603dc3eb0f4e3883929ee15a3c86d2ac45f445"
        }
      ],
      "status": 1
    },
    "articulatedTx": {
      "name": "operate",
      "stateMutability": "nonpayable",
      "inputs": [
        {
          "name": "accounts",
          "value": [{"owner":"0x66215d23b8a247c80c2d1b7bef4befc2ab384bce", "number":"0"}],
          "internalType": "tuple[]",
          "components": [
            {
              "name": "owner",
              "internalType": "address"
            },
            {
              "name": "number",
              "internalType": "uint256"
            }
          ]
        },
        {
          "name": "actions",
          "value": [{"actionType":"32", "accountId":"4", "amount":{"sign":"false", "denomination":"0", "ref":"0", "value":"0"}, "primaryMarketId":"5000000000000000000000", "secondaryMarketId":"3", "otherAddress":"0x0000000000000000000000000000000000000002", "otherAccountId":"698643126096518798703856029384548432733880579141", "data":"0x00000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000001"}],
          "internalType": "tuple[]",
          "components": [
            {
              "name": "actionType",
              "internalType": "uint8"
            },
            {
              "name": "accountId",
              "internalType": "uint256"
            },
            {
              "name": "amount",
              "value": "--unparsable--",
              "internalType": "tuple",
              "components": [
                {
                  "name": "sign",
                  "internalType": "bool"
                },
                {
                  "name": "denomination",
                  "internalType": "uint8"
                },
                {
                  "name": "ref",
                  "internalType": "uint8"
                },
                {
                  "name": "value",
                  "internalType": "uint256"
                }
              ]
            },
            {
              "name": "primaryMarketId",
              "internalType": "uint256"
            },
            {
              "name": "secondaryMarketId",
              "internalType": "uint256"
            },
            {
              "name": "otherAddress",
              "internalType": "address"
            },
            {
              "name": "otherAccountId",
              "internalType": "uint256"
            },
            {
              "name": "data",
              "internalType": "bytes"
            }
          ]
        }
      ]
    },
    "compressedTx": "operate ( accounts: [{\"owner\":\"0x66215d23b8a247c80c2d1b7bef4befc2ab384bce\", \"number\":\"0\"}], actions: [{\"actionType\":\"32\", \"accountId\":\"4\", \"amount\":\"{\"sign\":\"false\", \"denomination\":\"0\", \"ref\":\"0\", \"value\":\"0\"}\", \"primaryMarketId\":\"5000000000000000000000\", \"secondaryMarketId\":\"3\", \"otherAddress\":\"0x0000000000000000000000000000000000000002\", \"otherAccountId\":\"698643126096518798703856029384548432733880579141\", \"data\":\"0x00000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000001\"}] )",
    "gasCost": 30753980000000000,
    "gasUsed": 1635850,
    "date": "2020-05-12 18:35:22 UTC",
    "ether": 0.000000000000000000
  }], "types": [
{ "type": "CTransaction", "fields": [{ "name": "hash", "type": "hash" }, { "name": "blockHash", "type": "hash" }, { "name": "blockNumber", "type": "blocknum" }, { "name": "transactionIndex", "type": "blocknum" }, { "name": "timestamp", "type": "timestamp" }, { "name": "from", "type": "address" }, { "name": "to", "type": "address" }, { "name": "value", "type": "wei" }, { "name": "gas", "type": "gas" }, { "name": "gasPrice", "type": "gas" }, { "name": "input", "type": "text" }, { "name": "isError", "type": "unumber" }, { "name": "hasToken", "type": "unumber" }, { "name": "receipt", "type": "object" }, { "name": "articulatedTx", "type": "object" }, { "name": "compressedTx", "type": "text" }, { "name": "gasCost", "type": "wei" }, { "name": "gasUsed", "type": "gas" }, { "name": "date", "type": "date" }, { "name": "ether", "type": "ether" }] }
] }