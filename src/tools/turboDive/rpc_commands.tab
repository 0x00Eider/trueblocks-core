group          	api                 	name                                	outputs                	inputs                                                  	func                                                                                                                                                                      	file
web3           	Web3APIImpl         	clientVersion                       	string                 	none                                                    	ClientVersion() (string, error)                                                                                                                                           	./web3_api.go
web3           	Web3APIImpl         	sha3                                	hexutil.Bytes          	hexutil.Bytes                                           	Sha3(input hexutil.Bytes) hexutil.Bytes                                                                                                                                   	./web3_api.go
net            	NetAPIImpl          	listening                           	bool                   	none                                                    	Listening() (bool, error)                                                                                                                                                 	./net_api.go
net            	NetAPIImpl          	version                             	string                 	none                                                    	Version() (string, error)                                                                                                                                                 	./net_api.go
net            	NetAPIImpl          	peerCount                           	hexutil.Uint           	none                                                    	PeerCount() (hexutil.Uint, error)                                                                                                                                         	./net_api.go
eth.blocks     	APIImpl             	getBlockByNumber                    	map[string]interface{} 	rpc.BlockNumber, bool                                   	GetBlockByNumber(number rpc.BlockNumber, fullTx bool) (map[string]interface{}, error)                                                                                     	./eth_block.go)
eth.blocks     	APIImpl             	getBlockByHash                      	map[string]interface{} 	common.Hash, bool                                       	GetBlockByHash(hash common.Hash, fullTx bool) (map[string]interface{}, error)                                                                                             	./eth_block.go
eth.blocks     	APIImpl             	getBlockTransactionCountByNumber    	*hexutil.Uint          	common.BlockNumber                                      	GetBlockTransactionCountByNumber(blockNr rpc.BlockNumber) (*hexutil.Uint, error)                                                                                          	./eth_block.go
eth.blocks     	APIImpl             	getBlockTransactionCountByHash      	*hexutil.Uint          	common.Hash                                             	GetBlockTransactionCountByHash(blockHash common.Hash) (*hexutil.Uint, error)                                                                                              	./eth_block.go
eth.txs        	APIImpl             	getTransactionByHash                	*RPCTransaction        	common.Hash                                             	GetTransactionByHash(hash common.Hash) (*RPCTransaction, error)                                                                                                           	./eth_txs.go
eth.txs        	APIImpl             	getTransactionByBlockHashAndIndex   	*RPCTransaction        	common.Hash, hexutil.Uint64                             	GetTransactionByBlockHashAndIndex(blockHash common.Hash, txIndex hexutil.Uint64) (*RPCTransaction, error)                                                                 	./eth_txs.go
eth.txs        	APIImpl             	getTransactionByBlockNumberAndIndex 	*RPCTransaction        	rpc.BlockNumber, hexutil.Uint64                         	GetTransactionByBlockNumberAndIndex(blockNr rpc.BlockNumber, txIndex hexutil.Uint) (*RPCTransaction, error)                                                               	./eth_txs.go
eth.txs        	APIImpl             	getTransactionReceipt               	*RPCTransaction        	common.Hash, hexutil.Uint64                             	GetTransactionReceipt(hash common.Hash) (map[string]interface{}, error)                                                                                                   	./eth_receipts.go
eth.uncles     	APIImpl             	getUncleByBlockNumberAndIndex       	map[string]interface{} 	rpc.BlockNumber, hexutil.Uint                           	GetUncleByBlockNumberAndIndex(number rpc.BlockNumber, index hexutil.Uint) (map[string]interface{}, error)                                                                 	./eth_uncles.go
eth.uncles     	APIImpl             	getUncleByBlockHashAndIndex         	map[string]interface{} 	common.Hash, hexutil.Uint                               	GetUncleByBlockHashAndIndex(hash common.Hash, index hexutil.Uint) (map[string]interface{}, error)                                                                         	./eth_uncles.go
eth.uncles     	APIImpl             	getUncleCountByBlockNumber          	rpc.BlockNumber        	rpc.BlockNumber                                         	GetUncleCountByBlockNumber(number rpc.BlockNumber) (*hexutil.Uint, error)                                                                                                 	./eth_uncles.go
eth.uncles     	APIImpl             	getUncleCountByBlockHash            	common.Hash            	rpc.BlockNumber                                         	GetUncleCountByBlockHash(hash common.Hash) (*hexutil.Uint, error)                                                                                                         	./eth_uncles.go
eth.filters    	APIImpl             	newPendingTransactionFilter         	                       	                                                        	                                                                                                                                                                          	MISSING
eth.filters    	APIImpl             	newBlockFilter                      	                       	                                                        	                                                                                                                                                                          	MISSING
eth.filters    	APIImpl             	newFilter                           	                       	                                                        	                                                                                                                                                                          	MISSING
eth.filters    	APIImpl             	uninstallFilter                     	                       	                                                        	                                                                                                                                                                          	MISSING
eth.filters    	APIImpl             	getFilterChanges                    	                       	                                                        	                                                                                                                                                                          	MISSING
eth.filters    	APIImpl             	getLogs                             	[]*types.Log           	filters.FilterCriteria                                  	GetLogs(crit filters.FilterCriteria) ([]*types.Log, error)                                                                                                                	./commands/eth_receipts.go
eth.accounts   	APIImpl             	accounts (deprecated)               	[]common.Address       	none                                                    	Accounts() ([]common.Address, error)                                                                                                                                      	./eth_deprecated.go
eth.accounts   	APIImpl             	getBalance                          	*hexutil.Big           	common.Address, rpc.BlockNumberOrHash                   	GetBalance(address common.Address, blockNrOrHash rpc.BlockNumberOrHash) (*hexutil.Big, error)                                                                             	./eth_accounts.go
eth.accounts   	APIImpl             	getTransactionCount                 	*hexutil.Uint64        	common.Address, rpc.BlockNumberOrHash                   	GetTransactionCount(address common.Address, blockNrOrHash rpc.BlockNumberOrHash) (*hexutil.Uint64, error)                                                                 	./eth_accounts.go
eth.accounts   	APIImpl             	getCode                             	hexutil.Bytes          	common.Address, rpc.BlockNumberOrHash                   	GetCode(address common.Address, blockNrOrHash rpc.BlockNumberOrHash) (hexutil.Bytes, error)                                                                               	./eth_accounts.go
eth.accounts   	APIImpl             	getStorageAt                        	string                 	common.Address, rpc.BlockNumberOrHash                   	GetStorageAt(address common.Address, index string, blockNrOrHash rpc.BlockNumberOrHash) (string, error)                                                                   	./eth_accounts.go
eth.system     	APIImpl             	blockNumber                         	hexutil.Uint64         	none                                                    	BlockNumber() (hexutil.Uint64, error)                                                                                                                                     	./eth_system.go
eth.system     	APIImpl             	syncing                             	interface{}            	none                                                    	Syncing() (interface{}, error)                                                                                                                                            	./eth_system.go
eth.system     	APIImpl             	chainId                             	hexutil.Uint64         	none                                                    	ChainId() (hexutil.Uint64, error)                                                                                                                                         	./eth_system.go
eth.system     	APIImpl             	protocolVersion                     	hexutil.Uint           	none                                                    	ProtocolVersion() (hexutil.Uint, error)                                                                                                                                   	./eth_system.go
eth.system     	APIImpl             	gasPrice                            	*hexutil.Big           	none                                                    	GasPrice() (*hexutil.Big, error)                                                                                                                                          	./eth_system.go
eth.call       	APIImpl             	call                                	hexutil.Bytes          	ethapi.CallArgs, rpc.BlockNumberOrHash                  	Call(args ethapi.CallArgs, blockNrOrHash rpc.BlockNumberOrHash) (hexutil.Bytes, error)                                                                                    	./eth_call.go
eth.call       	APIImpl             	estimateGas                         	hexutil.Uint64         	ethapi.CallArgs                                         	EstimateGas(args ethapi.CallArgs) (hexutil.Uint64, error)                                                                                                                 	./eth_call.go
eth.call       	                    	sendTransaction                     	                       	                                                        	                                                                                                                                                                          	MISSING
eth.call       	APIImpl             	sendRawTransaction                  	common.Hash            	hexutil.Bytes                                           	SendRawTransaction(encodedTx hexutil.Bytes) (common.Hash, error)                                                                                                          	./send_transaction.go
eth.mining     	APIImpl             	coinbase                            	common.Address         	none                                                    	Coinbase() (common.Address, error)                                                                                                                                        	./eth_mining.go
eth.mining     	APIImpl             	hashrate                            	uint64                 	none                                                    	Hashrate() (uint64, error)                                                                                                                                                	./eth_mining.go
eth.mining     	APIImpl             	mining                              	bool                   	none                                                    	Mining() (bool, error)                                                                                                                                                    	./eth_mining.go
eth.mining     	APIImpl             	getWork                             	[]interface{}          	none                                                    	GetWork() ([]interface{}, error)                                                                                                                                          	./eth_mining.go
eth.mining     	APIImpl             	submitWork                          	bool                   	rpc.BlockNumber, common.Hash                            	SubmitWork(nonce rpc.BlockNumber, powHash, digest common.Hash) (bool, error)                                                                                              	./eth_mining.go
eth.mining     	APIImpl             	submitHashrate                      	bool                   	common.Hash, string                                     	SubmitHashrate(hashRate common.Hash, id string) (bool, error)                                                                                                             	./eth_mining.go
trace          	TraceAPIImpl        	call                                	[]interface{}          	CallParam, rpc.BlockNumber                              	Call(call CallParam, blockNr rpc.BlockNumber) ([]interface{}, error)                                                                                                      	./trace_adhoc.go)
trace          	TraceAPIImpl        	callMany                            	[]interface{}          	CallParams                                              	CallMany(calls CallParams) ([]interface{}, error)                                                                                                                         	./trace_adhoc.go)
trace          	TraceAPIImpl        	rawTransaction                      	[]interface{}          	common.Hash, []string                                   	RawTransaction(txHash common.Hash, traceTypes []string) ([]interface{}, error)                                                                                            	./trace_adhoc.go)
trace          	TraceAPIImpl        	replayBlockTransactions             	[]interface{}          	rpc.BlockNumber, []string                               	ReplayBlockTransactions(blockNr rpc.BlockNumber, traceTypes []string) ([]interface{}, error)                                                                              	./trace_adhoc.go)
trace          	TraceAPIImpl        	replayTransaction                   	[]interface{}          	common.Hash, []string                                   	ReplayTransaction(txHash common.Hash, traceTypes []string) ([]interface{}, error)                                                                                         	./trace_adhoc.go)
trace          	TraceAPIImpl        	transaction                         	ParityTraces           	common.Hash                                             	Transaction(txHash common.Hash) (ParityTraces, error)                                                                                                                     	./trace_filtering.go
trace          	TraceAPIImpl        	get                                 	*ParityTrace           	common.Hash, []hexutil.Uint64                           	Get(txHash common.Hash, indicies []hexutil.Uint64) (*ParityTrace, error)                                                                                                  	./trace_filtering.go
trace          	TraceAPIImpl        	block                               	ParityTraces           	rpc.BlockNumber                                         	Block(blockNr rpc.BlockNumber) (ParityTraces, error)                                                                                                                      	./trace_filtering.go
trace          	TraceAPIImpl        	filter                              	ParityTraces           	TraceFilterRequest                                      	Filter(req TraceFilterRequest) (ParityTraces, error)                                                                                                                      	./trace_filtering.go
tg             	TgImpl              	forks                               	Forks                  	none                                                    	Forks() (Forks, error)                                                                                                                                                    	./tg_system.go
tg             	TgImpl              	getHeaderByNumber                   	*types.Header          	rpc.BlockNumber                                         	GetHeaderByNumber(blockNumber rpc.BlockNumber) (*types.Header, error)                                                                                                     	./tg_block.go
tg             	TgImpl              	getHeaderByHash                     	*types.Header          	common.Hash                                             	GetHeaderByHash(hash common.Hash) (*types.Header, error)                                                                                                                  	./tg_block.go
tg             	TgImpl              	getLogsByHash                       	[][]*types.Log         	common.Hash                                             	GetLogsByHash(hash common.Hash) ([][]*types.Log, error)                                                                                                                   	./tg_receipts.go
tg             	TgImpl              	NO TEST                             	[][]*types.Log         	rpc.BlockNumber                                         	// GetLogsByNumber(number rpc.BlockNumber) ([][]*types.Log, error)                                                                                                        	./tg_receipts.go
tg             	APIImpl             	MISTAKE                             	[]*types.Log           	filters.FilterCriteria                                  	GetLogs(crit filters.FilterCriteria) ([]*types.Log, error)                                                                                                                	./tg_receipts.go
tg             	TgImpl              	issuance                            	Issuance               	rpc.BlockNumber                                         	Issuance(blockNr rpc.BlockNumber) (Issuance, error)                                                                                                                       	./tg_issuance.go
tg             	TgImpl              	REMOVE                              	Issuance               	rpc.BlockNumber                                         	// BlockReward(blockNr rpc.BlockNumber) (Issuance, error)                                                                                                                 	./tg_issuance.go
tg             	TgImpl              	REMOVE                              	Issuance               	rpc.BlockNumber                                         	// UncleReward(blockNr rpc.BlockNumber) (Issuance, error)                                                                                                                 	./tg_issuance.go
debug          	PrivateDebugAPIImpl 	storageRangeAt                      	StorageRangeResult     	common.Hash, uint64, common.Address, hexutil.Bytes, int 	StorageRangeAt(blockHash common.Hash, txIndex uint64, contractAddress common.Address, keyStart hexutil.Bytes, maxResult int) (StorageRangeResult, error)                  	./debug_api.go
debug          	PrivateDebugAPIImpl 	accountRange                        	state.IteratorDump     	rpc.BlockNumberOrHash, []byte, int, bool, bool, bool    	AccountRange(blockNrOrHash rpc.BlockNumberOrHash, startKey []byte, maxResults int, excludeCode, excludeStorage, excludeMissingPreimages bool) (state.IteratorDump, error) 	./debug_api.go
debug          	PrivateDebugAPIImpl 	getModifiedAccountsByNumber         	[]common.Address       	rpc.BlockNumber, *rpc.BlockNumber                       	GetModifiedAccountsByNumber(startNumber rpc.BlockNumber, endNumber *rpc.BlockNumber) ([]common.Address, error)                                                            	./debug_api.go
debug          	PrivateDebugAPIImpl 	getModifiedAccountsByHash           	[]common.Address       	common.Hash, *common.Hash                               	GetModifiedAccountsByHash(startHash common.Hash, endHash *common.Hash) ([]common.Address, error)                                                                          	./debug_api.go
debug          	PrivateDebugAPIImpl 	traceTransaction                    	interface{}            	common.Hash, eth.TraceConfig                            	TraceTransaction(hash common.Hash, config *eth.TraceConfig) (interface{}, error)                                                                                          	./tracing.go
deprecated.eth 	APIImpl             	getCompilers (deprecated)           	[]string               	[]string                                                	GetCompilers() ([]string, error)                                                                                                                                          	./eth_deprecated.go
deprecated.eth 	APIImpl             	compileLLL (deprecated)             	hexutil.Bytes          	string                                                  	CompileLLL(_ string) (hexutil.Bytes, error)                                                                                                                               	./eth_deprecated.go
deprecated.eth 	APIImpl             	compileSolidity (deprecated)        	hexutil.Bytes          	string                                                  	CompileSolidity(_ string) (hexutil.Bytes, error)                                                                                                                          	./eth_deprecated.go
deprecated.eth 	APIImpl             	compileSerpent (deprecated)         	hexutil.Bytes          	string                                                  	CompileSerpent(_ string) (hexutil.Bytes, error)                                                                                                                           	./eth_deprecated.go
deprecated.eth 	APIImpl             	sign (deprecated)                   	hexutil.Bytes          	common.Address, hexutil.Bytes                           	Sign(_ common.Address, _ hexutil.Bytes) (hexutil.Bytes, error)                                                                                                            	./eth_deprecated.go
deprecated.db  	DBAPIImpl           	getString (deprecated)              	string                 	string, string                                          	GetString(_ string, _ string) (string, error)                                                                                                                             	./db_api_deprecated.go
deprecated.db  	DBAPIImpl           	putString (deprecated)              	bool                   	string, string                                          	PutString(_ string, _ string, _ string) (bool, error)                                                                                                                     	./db_api_deprecated.go
deprecated.db  	DBAPIImpl           	getHex (deprecated)                 	hexutil.Bytes          	string, string                                          	GetHex(_ string, _ string) (hexutil.Bytes, error)                                                                                                                         	./db_api_deprecated.go
deprecated.db  	DBAPIImpl           	putHex (deprecated)                 	bool                   	string, string, hexutil.Bytes                           	PutHex(_ string, _ string, _ hexutil.Bytes) (bool, error)                                                                                                                 	./db_api_deprecated.go
deprecated.shh 	SHHAPIImpl          	post (deprecated)                   	bool                   	SHHPost                                                 	Post(_ SHHPost) (bool, error)                                                                                                                                             	./shh_api_deprecated.go
deprecated.shh 	SHHAPIImpl          	version (deprecated)                	string                 	none                                                    	Version() (string, error)                                                                                                                                                 	./shh_api_deprecated.go
deprecated.shh 	SHHAPIImpl          	newIdentity (deprecated)            	string                 	none                                                    	NewIdentity() (string, error)                                                                                                                                             	./shh_api_deprecated.go
deprecated.shh 	SHHAPIImpl          	hasIdentity (deprecated)            	bool                   	string                                                  	HasIdentity(_ string) (bool, error)                                                                                                                                       	./shh_api_deprecated.go
deprecated.shh 	SHHAPIImpl          	newGroup (deprecated)               	string                 	none                                                    	NewGroup() (string, error)                                                                                                                                                	./shh_api_deprecated.go
deprecated.shh 	SHHAPIImpl          	addToGroup (deprecated)             	bool                   	string                                                  	AddToGroup(_ string) (bool, error)                                                                                                                                        	./shh_api_deprecated.go
deprecated.shh 	SHHAPIImpl          	newFilter (deprecated)              	hexutil.Uint           	SHHFilter                                               	NewFilter(_ SHHFilter) (hexutil.Uint, error)                                                                                                                              	./shh_api_deprecated.go
deprecated.shh 	SHHAPIImpl          	uninstallFilter (deprecated)        	bool                   	huxutil.Uint                                            	UninstallFilter(_ hexutil.Uint) (bool, error)                                                                                                                             	./shh_api_deprecated.go
deprecated.shh 	SHHAPIImpl          	getFilterChanges (deprecated)       	[]string               	huxutil.Uint                                            	GetFilterChanges(_ hexutil.Uint) ([]string, error)                                                                                                                        	./shh_api_deprecated.go
deprecated.shh 	SHHAPIImpl          	getMessages (deprecated)            	[]string               	huxutil.Uint                                            	GetMessages(_ hexutil.Uint) ([]string, error)                                                                                                                             	./shh_api_deprecated.go
