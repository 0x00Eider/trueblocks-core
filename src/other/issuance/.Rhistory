(
#  cmd == "all"
#|
cmd == "ethNames"
| cmd == "ethQuote"
| cmd == "ethslurp"
| cmd == "getBlock"
| cmd == "getBloom"
| cmd == "whenBlock"
| cmd == "whereBlock"
| cmd == "getLogs"
| cmd == "getReceipt"
| cmd == "getTrans"
| cmd == "getTrace"
| cmd == "getState"
| cmd == "getTokenInfo"
| cmd == "grabABI"
| cmd == "chifra"
| cmd == "acctExport"
| cmd == "cacheStatus"
| cmd == "acctScrape"
| cmd == "blockScrape"
#| cmd == "acctlib" | cmd == "etherlib" | cmd == "utillib"
#| cmd == "makeClass"
)
#& ( epoch == 1000 | epoch == 3000)
#& ( epoch == 1000)
#& ( epoch == 2000)
#& (( epoch == 3000)
#| ( epoch == 4000))
& ( epoch == 4000)
#& type == "cmd"
)
sorted
barplot(sorted$nPassed, names=sorted$cmd, las=2, col=sorted$type, ylim=c(0,median(sorted$nPassed)*10),space=0)
barplot(sorted$totSecs, names=sorted$cmd, las=2, col=sorted$type, ylim=c(0,median(sorted$totSecs)*10),space=0)
barplot(sorted$avgSecs, names=sorted$cmd, las=2, col=sorted$type, ylim=c(0,median(sorted$avgSecs)*10),space=0)
library(dplyr)
library(ggplot2)
df <- read.table("file:///Users/jrush/.quickBlocks/performance.csv", sep=",", header=TRUE)
df$cmd
par(lty = 0)
#sorted <- df[order(df$epoch,df$cmd,df$type,df$date),] %>%
sorted <- df[order(df$cmd,df$type,df$date),] %>%
#sorted <- df[order(df$epoch,df$cmd,df$type,df$date),] %>%
filter(
#    group == "tools" &
#    type == "cmd" &
(
#  cmd == "all"
#|
cmd == "ethNames"
| cmd == "ethQuote"
| cmd == "ethslurp"
| cmd == "getBlock"
| cmd == "getBloom"
| cmd == "whenBlock"
| cmd == "whereBlock"
| cmd == "getLogs"
| cmd == "getReceipt"
| cmd == "getTrans"
| cmd == "getTrace"
| cmd == "getState"
| cmd == "getTokenInfo"
| cmd == "grabABI"
| cmd == "chifra"
| cmd == "acctExport"
| cmd == "cacheStatus"
| cmd == "acctScrape"
| cmd == "blockScrape"
#| cmd == "acctlib" | cmd == "etherlib" | cmd == "utillib"
#| cmd == "makeClass"
)
#& ( epoch == 1000 | epoch == 3000)
#& ( epoch == 1000)
#& ( epoch == 2000)
#& (( epoch == 3000)
#| ( epoch == 4000))
& ( epoch == 4000)
#& type == "cmd"
)
sorted
barplot(sorted$nPassed, names=sorted$cmd, las=2, col=sorted$type, ylim=c(0,median(sorted$nPassed)*10),space=0)
barplot(sorted$totSecs, names=sorted$cmd, las=2, col=sorted$type, ylim=c(0,median(sorted$totSecs)*10),space=0)
barplot(sorted$avgSecs, names=sorted$cmd, las=2, col=sorted$type, ylim=c(0,median(sorted$avgSecs)*10),space=0)
library(dplyr)
library(ggplot2)
df <- read.table("file:///Users/jrush/.quickBlocks/performance.csv", sep=",", header=TRUE)
df$cmd
par(lty = 0)
#sorted <- df[order(df$epoch,df$cmd,df$type,df$date),] %>%
sorted <- df[order(df$cmd,df$type,df$date),] %>%
#sorted <- df[order(df$epoch,df$cmd,df$type,df$date),] %>%
filter(
#    group == "tools" &
#    type == "cmd" &
(
#  cmd == "all"
#|
cmd == "ethNames"
| cmd == "ethQuote"
| cmd == "ethslurp"
| cmd == "getBlock"
| cmd == "getBloom"
| cmd == "whenBlock"
| cmd == "whereBlock"
| cmd == "getLogs"
| cmd == "getReceipt"
| cmd == "getTrans"
| cmd == "getTrace"
| cmd == "getState"
| cmd == "getTokenInfo"
| cmd == "grabABI"
| cmd == "chifra"
| cmd == "acctExport"
| cmd == "cacheStatus"
| cmd == "acctScrape"
| cmd == "blockScrape"
#| cmd == "acctlib" | cmd == "etherlib" | cmd == "utillib"
#| cmd == "makeClass"
)
#& ( epoch == 1000 | epoch == 3000)
#& ( epoch == 1000)
#& ( epoch == 2000)
#& (( epoch == 3000)
#| ( epoch == 4000))
& ( epoch == 4000)
#& type == "cmd"
)
sorted
barplot(sorted$nPassed, names=sorted$cmd, las=2, col=sorted$type, ylim=c(0,median(sorted$nPassed)*10),space=0)
barplot(sorted$totSecs, names=sorted$cmd, las=2, col=sorted$type, ylim=c(0,median(sorted$totSecs)*10),space=0)
barplot(sorted$avgSecs, names=sorted$cmd, las=2, col=sorted$type, ylim=c(0,median(sorted$avgSecs)*10),space=0)
library(dplyr)
library(ggplot2)
df <- read.table("file:///Users/jrush/.quickBlocks/performance.csv", sep=",", header=TRUE)
df$cmd
par(lty = 0)
#sorted <- df[order(df$epoch,df$cmd,df$type,df$date),] %>%
sorted <- df[order(df$cmd,df$type,df$date),] %>%
#sorted <- df[order(df$epoch,df$cmd,df$type,df$date),] %>%
filter(
#    group == "tools" &
#    type == "cmd" &
(
#  cmd == "all"
#|
cmd == "ethNames"
| cmd == "ethQuote"
| cmd == "ethslurp"
| cmd == "getBlock"
| cmd == "getBloom"
| cmd == "whenBlock"
| cmd == "whereBlock"
| cmd == "getLogs"
| cmd == "getReceipt"
| cmd == "getTrans"
| cmd == "getTrace"
| cmd == "getState"
| cmd == "getTokenInfo"
| cmd == "grabABI"
| cmd == "chifra"
| cmd == "acctExport"
| cmd == "cacheStatus"
| cmd == "acctScrape"
| cmd == "blockScrape"
#| cmd == "acctlib" | cmd == "etherlib" | cmd == "utillib"
#| cmd == "makeClass"
)
#& ( epoch == 1000 | epoch == 3000)
#& ( epoch == 1000)
#& ( epoch == 2000)
#& (( epoch == 3000)
#| ( epoch == 4000))
& ( epoch == 4000)
#& type == "cmd"
)
sorted
barplot(sorted$nPassed, names=sorted$cmd, las=2, col=sorted$type, ylim=c(0,median(sorted$nPassed)*10),space=0)
barplot(sorted$totSecs, names=sorted$cmd, las=2, col=sorted$type, ylim=c(0,median(sorted$totSecs)*10),space=0)
barplot(sorted$avgSecs, names=sorted$cmd, las=2, col=sorted$type, ylim=c(0,median(sorted$avgSecs)*10),space=0)
library(dplyr)
library(ggplot2)
df <- read.table("file:///Users/jrush/.quickBlocks/performance.csv", sep=",", header=TRUE)
df$cmd
par(lty = 0)
#sorted <- df[order(df$epoch,df$cmd,df$type,df$date),] %>%
sorted <- df[order(df$cmd,df$type,df$date),] %>%
#sorted <- df[order(df$epoch,df$cmd,df$type,df$date),] %>%
filter(
#    group == "tools" &
#    type == "cmd" &
(
#  cmd == "all"
#|
cmd == "ethNames"
| cmd == "ethQuote"
| cmd == "ethslurp"
| cmd == "getBlock"
| cmd == "getBloom"
| cmd == "whenBlock"
| cmd == "whereBlock"
| cmd == "getLogs"
| cmd == "getReceipt"
| cmd == "getTrans"
| cmd == "getTrace"
| cmd == "getState"
| cmd == "getTokenInfo"
| cmd == "grabABI"
| cmd == "chifra"
| cmd == "acctExport"
| cmd == "cacheStatus"
| cmd == "acctScrape"
| cmd == "blockScrape"
#| cmd == "acctlib" | cmd == "etherlib" | cmd == "utillib"
#| cmd == "makeClass"
)
#& ( epoch == 1000 | epoch == 3000)
#& ( epoch == 1000)
#& ( epoch == 2000)
#& (( epoch == 3000)
#| ( epoch == 4000))
& ( epoch == 4000)
#& type == "cmd"
)
sorted
barplot(sorted$nPassed, names=sorted$cmd, las=2, col=sorted$type, ylim=c(0,median(sorted$nPassed)*10),space=0)
barplot(sorted$totSecs, names=sorted$cmd, las=2, col=sorted$type, ylim=c(0,median(sorted$totSecs)*10),space=0)
barplot(sorted$avgSecs, names=sorted$cmd, las=2, col=sorted$type, ylim=c(0,median(sorted$avgSecs)*10),space=0)
library(dplyr)
library(ggplot2)
df <- read.table("file:///Users/jrush/.quickBlocks/performance.csv", sep=",", header=TRUE)
df$cmd
par(lty = 0)
#sorted <- df[order(df$epoch,df$cmd,df$type,df$date),] %>%
sorted <- df[order(df$cmd,df$type,df$date),] %>%
#sorted <- df[order(df$epoch,df$cmd,df$type,df$date),] %>%
filter(
#    group == "tools" &
#    type == "cmd" &
(
#  cmd == "all"
#|
cmd == "ethNames"
| cmd == "ethQuote"
| cmd == "ethslurp"
| cmd == "getBlock"
| cmd == "getBloom"
| cmd == "whenBlock"
| cmd == "whereBlock"
| cmd == "getLogs"
| cmd == "getReceipt"
| cmd == "getTrans"
| cmd == "getTrace"
| cmd == "getState"
| cmd == "getTokenInfo"
| cmd == "grabABI"
| cmd == "chifra"
| cmd == "acctExport"
| cmd == "cacheStatus"
| cmd == "acctScrape"
| cmd == "blockScrape"
#| cmd == "acctlib" | cmd == "etherlib" | cmd == "utillib"
#| cmd == "makeClass"
)
#& ( epoch == 1000 | epoch == 3000)
#& ( epoch == 1000)
#& ( epoch == 2000)
#& (( epoch == 3000)
#| ( epoch == 4000))
& ( epoch == 4000)
#& type == "cmd"
)
sorted
barplot(sorted$nPassed, names=sorted$cmd, las=2, col=sorted$type, ylim=c(0,median(sorted$nPassed)*10),space=0)
barplot(sorted$totSecs, names=sorted$cmd, las=2, col=sorted$type, ylim=c(0,median(sorted$totSecs)*10),space=0)
barplot(sorted$avgSecs, names=sorted$cmd, las=2, col=sorted$type, ylim=c(0,median(sorted$avgSecs)*10),space=0)
library(dplyr)
library(ggplot2)
df <- read.table("file:///Users/jrush/.quickBlocks/performance.csv", sep=",", header=TRUE)
df$cmd
par(lty = 0)
#sorted <- df[order(df$epoch,df$cmd,df$type,df$date),] %>%
sorted <- df[order(df$cmd,df$type,df$date),] %>%
#sorted <- df[order(df$epoch,df$cmd,df$type,df$date),] %>%
filter(
#    group == "tools" &
#    type == "cmd" &
(
#  cmd == "all"
#|
cmd == "ethNames"
#| cmd == "ethQuote"
#| cmd == "ethslurp"
| cmd == "getBlock"
#| cmd == "getBloom"
| cmd == "whenBlock"
| cmd == "whereBlock"
| cmd == "getLogs"
| cmd == "getReceipt"
| cmd == "getTrans"
| cmd == "getTrace"
| cmd == "getState"
| cmd == "getTokenInfo"
|  cmd == "grabABI"
| cmd == "chifra"
| cmd == "acctExport"
| cmd == "cacheStatus"
| cmd == "acctScrape"
| cmd == "blockScrape"
#| cmd == "acctlib" | cmd == "etherlib" | cmd == "utillib"
#| cmd == "makeClass"
)
#& ( epoch == 1000 | epoch == 3000)
#& ( epoch == 1000)
#& ( epoch == 2000)
#& (( epoch == 3000)
#| ( epoch == 4000))
& (( epoch == 4000)
| ( epoch == 5000))
#& type == "cmd"
)
sorted
barplot(sorted$nPassed, names=sorted$cmd, las=2, col=sorted$type, ylim=c(0,median(sorted$nPassed)*10),space=0)
barplot(sorted$totSecs, names=sorted$cmd, las=2, col=sorted$type, ylim=c(0,median(sorted$totSecs)*10),space=0)
barplot(sorted$avgSecs, names=sorted$cmd, las=2, col=sorted$type, ylim=c(0,median(sorted$avgSecs)*10),space=0)
library(dplyr)
library(ggplot2)
df <- read.table("file:///Users/jrush/.quickBlocks/performance.csv", sep=",", header=TRUE)
df$cmd
par(lty = 0)
#sorted <- df[order(df$epoch,df$cmd,df$type,df$date),] %>%
sorted <- df[order(df$cmd,df$type,df$date),] %>%
#sorted <- df[order(df$epoch,df$cmd,df$type,df$date),] %>%
filter(
#    group == "tools" &
#    type == "cmd" &
(
#  cmd == "all"
#|
cmd == "ethNames"
#| cmd == "ethQuote"
#| cmd == "ethslurp"
| cmd == "getBlock"
#| cmd == "getBloom"
| cmd == "whenBlock"
| cmd == "whereBlock"
| cmd == "getLogs"
| cmd == "getReceipt"
| cmd == "getTrans"
| cmd == "getTrace"
| cmd == "getState"
| cmd == "getTokenInfo"
|  cmd == "grabABI"
| cmd == "chifra"
| cmd == "acctExport"
| cmd == "cacheStatus"
| cmd == "acctScrape"
| cmd == "blockScrape"
#| cmd == "acctlib" | cmd == "etherlib" | cmd == "utillib"
#| cmd == "makeClass"
)
#& ( epoch == 1000 | epoch == 3000)
#& ( epoch == 1000)
#& ( epoch == 2000)
#& (( epoch == 3000)
#| ( epoch == 4000))
& (( epoch == 4000)
| ( epoch == 5000))
#& type == "cmd"
)
sorted
barplot(sorted$nPassed, names=sorted$cmd, las=2, col=sorted$type, ylim=c(0,median(sorted$nPassed)*10),space=0)
barplot(sorted$totSecs, names=sorted$cmd, las=2, col=sorted$type, ylim=c(0,median(sorted$totSecs)*10),space=0)
barplot(sorted$avgSecs, names=sorted$cmd, las=2, col=sorted$type, ylim=c(0,median(sorted$avgSecs)*10),space=0)
library(dplyr)
library(ggplot2)
df <- read.table("file:///Users/jrush/.quickBlocks/performance.csv", sep=",", header=TRUE)
df$cmd
par(lty = 0)
#sorted <- df[order(df$epoch,df$cmd,df$type,df$date),] %>%
sorted <- df[order(df$cmd,df$type,df$date),] %>%
#sorted <- df[order(df$epoch,df$cmd,df$type,df$date),] %>%
filter(
#    group == "tools" &
#    type == "cmd" &
(
#  cmd == "all"
#|
cmd == "ethNames"
#| cmd == "ethQuote"
#| cmd == "ethslurp"
| cmd == "getBlock"
#| cmd == "getBloom"
| cmd == "whenBlock"
| cmd == "whereBlock"
| cmd == "getLogs"
| cmd == "getReceipt"
| cmd == "getTrans"
| cmd == "getTrace"
| cmd == "getState"
| cmd == "getTokenInfo"
|  cmd == "grabABI"
| cmd == "chifra"
| cmd == "acctExport"
| cmd == "cacheStatus"
| cmd == "acctScrape"
| cmd == "blockScrape"
#| cmd == "acctlib" | cmd == "etherlib" | cmd == "utillib"
#| cmd == "makeClass"
)
#& ( epoch == 1000 | epoch == 3000)
#& ( epoch == 1000)
#& ( epoch == 2000)
#& (( epoch == 3000)
#| ( epoch == 4000))
& (( epoch == 4000)
| ( epoch == 5000))
#& type == "cmd"
)
sorted
barplot(sorted$nPassed, names=sorted$cmd, las=2, col=sorted$type, ylim=c(0,median(sorted$nPassed)*10),space=0)
barplot(sorted$totSecs, names=sorted$cmd, las=2, col=sorted$type, ylim=c(0,median(sorted$totSecs)*10),space=0)
barplot(sorted$avgSecs, names=sorted$cmd, las=2, col=sorted$type, ylim=c(0,median(sorted$avgSecs)*10),space=0)
library(dplyr)
library(ggplot2)
df <- read.table("file:///Users/jrush/.quickBlocks/performance.csv", sep=",", header=TRUE)
df$cmd
par(lty = 0)
#sorted <- df[order(df$epoch,df$cmd,df$type,df$date),] %>%
sorted <- df[order(df$cmd,df$type,df$date),] %>%
#sorted <- df[order(df$epoch,df$cmd,df$type,df$date),] %>%
filter(
#    group == "tools" &
#    type == "cmd" &
(
#  cmd == "all"
#|
cmd == "ethNames"
#| cmd == "ethQuote"
#| cmd == "ethslurp"
| cmd == "getBlock"
#| cmd == "getBloom"
| cmd == "whenBlock"
| cmd == "whereBlock"
| cmd == "getLogs"
| cmd == "getReceipt"
| cmd == "getTrans"
| cmd == "getTrace"
| cmd == "getState"
| cmd == "getTokenInfo"
|  cmd == "grabABI"
| cmd == "chifra"
| cmd == "acctExport"
| cmd == "cacheStatus"
| cmd == "acctScrape"
| cmd == "blockScrape"
#| cmd == "acctlib" | cmd == "etherlib" | cmd == "utillib"
#| cmd == "makeClass"
)
#& ( epoch == 1000 | epoch == 3000)
#& ( epoch == 1000)
#& ( epoch == 2000)
#& (( epoch == 3000)
#| ( epoch == 4000))
#&
#  (( epoch == 4000)
#|
#  ( epoch == 5000)
#)
#& type == "cmd"
)
sorted
barplot(sorted$nPassed, names=sorted$cmd, las=2, col=sorted$type, ylim=c(0,median(sorted$nPassed)*10),space=0)
barplot(sorted$totSecs, names=sorted$cmd, las=2, col=sorted$type, ylim=c(0,median(sorted$totSecs)*10),space=0)
barplot(sorted$avgSecs, names=sorted$cmd, las=2, col=sorted$type, ylim=c(0,median(sorted$avgSecs)*10),space=0)
library(ggplot2)
library(dplyr)
library(tidyverse)
setwd('/Users/jrush/Development/trueblocks-core/src/other/issuance');
read_csv("blocks-with-uncles.cvs.gz", col_names = TRUE, col_types = cols(blockNumber = "i")) -> df
head(df)
df <- df %>% mutate(bin = floor(blockNumber / 10000) * 10000)
df
ggplot(df, aes(x=bin)) + geom_histogram()
# Change the width of bins
ggplot(df, aes(x=bin)) +
geom_histogram(binwidth=10000)
# Change colors
p<-ggplot(df, aes(x=bin)) +
geom_histogram(color="blue", fill="white", binwidth=50000)
p <- p + ggtitle('Number of Uncles Produced Per 10,000 Blocks Over Time') + xlab('Week') + ylab('Uncles per 10,000 blocks') + xlab('blockNumber')
p
ggplot(df, aes(x=bin)) + geom_histogram()
# Change the width of bins
ggplot(df, aes(x=bin)) +
geom_histogram(binwidth=10000)
# Change colors
p<-ggplot(df, aes(x=bin)) +
geom_histogram(color="blue", fill="white", binwidth=50000)
p <- p + ggtitle('Number of Uncles Produced Per 10,000 Blocks Over Time') + xlab('Week') + ylab('Uncles per 10,000 blocks') + xlab('blockNumber')
p
