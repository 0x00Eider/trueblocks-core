enabled, mode, speed, route, path/tool, filename, post, options, opt_cmd
on, cmd,  all,  logs, tools/getLogs, preload,             y, blocks = 3657480 & force, getBlock
on, cmd,  all,  logs, tools/getLogs, preload_abi,         y, addrs = 0x51ffc1b089392a5bb65bf24eaf04d07d0e6f88b5, grabABI

on, cmd,  fast, logs, tools/getLogs, README,              y, @th
on, cmd,  fast, logs, tools/getLogs, help,                y, @h
on, cmd,  fast, logs, tools/getLogs, help_long,           y, help

on, both, fast, logs, tools/getLogs, no_input,            y,
on, both, fast, logs, tools/getLogs, bad_hash,            y, transactions = 0x0012
on, both, fast, logs, tools/getLogs, invalid_option_1,    y, oink
on, both, fast, logs, tools/getLogs, invalid_option_2,    y, other
on, both, fast, logs, tools/getLogs, invalid_param_1,     y, transactions = .th
on, both, fast, logs, tools/getLogs, invalid_param_2,     y, transactions = 1233123

on, both, fast, logs, tools/getLogs, bad_hash_msg,        y, transactions = 0x060e4cf9fa8d34a8b423b5b3691b2541255ff7974ff16699e104edcfb63bd521 0x0766ec95bf12f9600afc6c33c287f9d2356d85f15f0d7eeeb6647f5d4ddfbc11 0x060e4cf9fa8d34a8b423b5b3691b2541255ff7974ff16699e104edcfb63bd521
on, both, fast, logs, tools/getLogs, bad_hash_msg_raw,    n, transactions = 0x060e4cf9fa8d34a8b423b5b3691b2541255ff7974ff16699e104edcfb63bd521 0x0766ec95bf12f9600afc6c33c287f9d2356d85f15f0d7eeeb6647f5d4ddfbc11 0x060e4cf9fa8d34a8b423b5b3691b2541255ff7974ff16699e104edcfb63bd521 & raw
on, both, fast, logs, tools/getLogs, bad_blkhash_msg,     y, transactions = 0x0b4c6fb75ded4b90218cf0346b0885e442878f104e1b60bf75d5b6860eeacd53.1 0x0b4c6fb75ded4b90218cf0346b0885e442878f104e1b60bf75d5b6860eeacd53.5
on, both, fast, logs, tools/getLogs, bad_blkhash_msg_raw, n, transactions = 0x0b4c6fb75ded4b90218cf0346b0885e442878f104e1b60bf75d5b6860eeacd53.1 0x0b4c6fb75ded4b90218cf0346b0885e442878f104e1b60bf75d5b6860eeacd53.5 & raw

on, both, fast, logs, tools/getLogs, default,             y, address = 0xbb9bc244d798123fde783fcc1c72d3bb8c189413
on, both, fast, logs, tools/getLogs, block_range,         y, transactions = 1718400-1718420
on, both, fast, logs, tools/getLogs, block_range_addr,    y, transactions = 1718400-1718420 transactions = 0xbb9bc244d798123fde783fcc1c72d3bb8c189413
on, both, fast, logs, tools/getLogs, three_ways,          n, transactions = 0xbed082f2f6fb5f91924df74eb79ac37ea9490e49dda0b29a01db27d171efb424 0x0f1217b92276cd17608d4212879739e6a5ec388bd7a03bef9798655234afd2b9.36 3657480.36 1001010.12 0xbed082f2f6fb5f91924df74eb79ac37ea9490e49dda0b29a01db27d171efb422 & fmt = txt & no_header
on, both, fast, logs, tools/getLogs, verbose_blk_idx1,    n, transactions = 0x0f1217b92276cd17608d4212879739e6a5ec388bd7a03bef9798655234afd2b9.36 & fmt = csv
on, both, fast, logs, tools/getLogs, verbose_blk_idx2,    y, transactions = 0x0f1217b92276cd17608d4212879739e6a5ec388bd7a03bef9798655234afd2b9.36 & verbose
on, both, fast, logs, tools/getLogs, verbose_blk_idx3,    y, transactions = 0x0f1217b92276cd17608d4212879739e6a5ec388bd7a03bef9798655234afd2b9.36 & fmt = json
on, both, fast, logs, tools/getLogs, by_txhash,           y, transactions = 0x6afbe0f0ea3613edd6b84b71260836c03bddce81604f05c81a070cd671d3d765
on, both, fast, logs, tools/getLogs, by_bnun_and_txid,    y, transactions = 4000000.5 & fmt = api
on, both, fast, logs, tools/getLogs, by_bhash_and_txid,   y, transactions = 0xb8a3f7f5cfc1748f91a684f20fe89031202cbadcd15078c49b85ec2a57f43853.4 & fmt = json & parity
on, both, medi, logs, tools/getLogs, by_blk_hash_good,    y, transactions = 0x693b52d0fc09ec86d86aa117dd2b397116b6031cf2b672f8673c4441b9dc190f.55 & verbose
on, both, fast, logs, tools/getLogs, by_blk_hash_bad,     y, transactions = 0x693b52d0fc09ec86d86aa117dd2b397116b6031cf2b672f8673c4441b9dc190f.155 & verbose
on, both, fast, logs, tools/getLogs, from_node,           n, transactions = 4000000.5 & raw
on, both, slow, logs, tools/getLogs, prev_bug2_1,         y, transactions = 4279119.46 & fmt = api & parity
on, both, medi, logs, tools/getLogs, prev_bug2_2,         n, transactions = 4279119.46 & raw

#on, both, fast, logs, tools/getLogs, multi_articulate    ,y, transactions = 0x5ca444001d797c50d46e077a245e563593cf313f960619b3deff022c8694b04f & articulate & fmt = json

on, both, medi, logs, tools/getLogs, star,                y, transactions = 1428993.* & fmt = api
on, cmd,  fast, logs, tools/getLogs, redir_output,        y, transactions = 3657480.79 & output testing_file

on, both, fast, logs, tools/getLogs, fmt_default,         n, transactions = 2222222.0 2332332.0
on, both, slow, logs, tools/getLogs, fmt_txt,             n, transactions = 2222222.0 2332332.0 & fmt = txt
on, both, fast, logs, tools/getLogs, fmt_csv,             n, transactions = 2222222.0 2332332.0 & fmt = csv
on, both, fast, logs, tools/getLogs, fmt_json,            y, transactions = 2222222.0 2332332.0 & fmt = json
on, both, fast, logs, tools/getLogs, fmt_api,             y, transactions = 2222222.0 2332332.0 & fmt = api
on, both, fast, logs, tools/getLogs, fmt_junk,            y, transactions = 2222222.0 2332332.0 & fmt = junk

on, cmd,  fast, logs, tools/getLogs, by_filebad,          y, file:cmd_file & bad
on, cmd,  slow, logs, tools/getLogs, by_file,             y, file:cmd_file
on, cmd,  fast, logs, tools/getLogs, by_file_v,           y, file:cmd_file & verbose & fmt = json
on, cmd,  fast, logs, tools/getLogs, by_file_long_v,      y, file:cmd_file & verbose & parity & fmt = json


#------------------------------------------------------------------------------------------------
# eth_getLogs
# Returns an array of all logs matching a given filter object.
#------------------------------------------------------------------------------------------------
# Parameters
# Object - The filter options:
# fromBlock:    QUANTITY|TAG            (optional, default: "latest") Integer block number, or "latest" for the last mined block or "pending", "earliest" for not yet mined transactions.
# toBlock:      QUANTITY|TAG            (optional, default: "latest") Integer block number, or "latest" for the last mined block or "pending", "earliest" for not yet mined transactions.
# address:      DATA|Array, 20 Bytes    (optional) Contract address or a list of addresses from which logs should originate.
# topics:       Array of DATA           (optional) Array of 32 Bytes DATA topics. Topics are order-dependent. Each topic can also be an array of DATA with "or" options.
# blockhash:    DATA, 32 Bytes          (optional) With the addition of EIP-234 (Geth >= v1.8.13 or Parity >= v2.1.0), blockHash is a new filter option which restricts the logs returned to the single block with the 32-byte hash blockHash. Using blockHash is equivalent to fromBlock = toBlock = the block number with hash blockHash. If blockHash is present in the filter criteria, then neither fromBlock nor toBlock are allowed.


#------------------------------------------------------------------------------------------------
# Example Parameters
# params: [{
# "topics": ["0x000000000000000000000000a94f5374fce5edbc8e2a8697c15331677e6ebf0b"]
# }]
#------------------------------------------------------------------------------------------------
# Example
# curl -X POST --data '{"jsonrpc":"2.0","method":"eth_getLogs","params":[{"topics":["0x000000000000000000000000a94f5374fce5edbc8e2a8697c15331677e6ebf0b"]}],"id":74}'
#------------------------------------------------------------------------------------------------
# Returns
# Array - Array of log objects, or an empty array if nothing has changed since last poll.
#
# For filters created with eth_newBlockFilter the return are block hashes (DATA, 32 Bytes), e.g. ["0x3454645634534..."].
# For filters created with eth_newPendingTransactionFilter the return are transaction hashes (DATA, 32 Bytes), e.g. ["0x6345343454645..."].
# For filters created with eth_newFilter logs are objects with following params:
#
# removed:              TAG             true when the log was removed, due to a chain reorganization. false if its a valid log.
# logIndex:             QUANTITY        integer of the log index position in the block. null when its pending log.
# transactionIndex:     QUANTITY        integer of the transactions index position log was created from. null when its pending log.
# transactionHash:      DATA            hash of the transactions this log was created from. null when its pending log.
# blockHash:            DATA            hash of the block where this log was in. null when its pending. null when its pending log.
# blockNumber:          QUANTITY        the block number where this log was in. null when its pending. null when its pending log.
# address:              DATA            address from which this log originated.
# data:                 DATA            contains the non-indexed arguments of the log.
# topics:               Array of DATA   Array of 0 to 4 32 Bytes DATA of indexed log arguments. (In solidity: The first topic is the hash of the signature of the event (e.g. Deposit(address,bytes32,uint256)), except you declared the event #with the anonymous specifier.)
